<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>情迁博客</title>
  
  <subtitle>情迁美好时光追忆 执拗如我 执着如我,纠结如我,虽然无法活出最好的自己,但是总算活出一个不一样的自己!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lozn.top/"/>
  <updated>2022-08-31T01:46:54.635Z</updated>
  <id>https://lozn.top/</id>
  
  <author>
    <name>情随事迁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>unity单例模式的样板代码</title>
    <link href="https://lozn.top/2022/08/13/unity%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%A0%B7%E6%9D%BF%E4%BB%A3%E7%A0%81/"/>
    <id>https://lozn.top/2022/08/13/unity单例模式的样板代码/</id>
    <published>2022-08-13T03:14:24.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4b8655e19d72">unity单例模式的样板代码</a><br>文章字数：189,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// A static instance is similar to a singleton, but instead of destroying any new</span><br><span class="line">/// instances, it overrides the current instance. This is handy for resetting the state</span><br><span class="line">/// and saves you doing it manually</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class StaticInstance&lt;T&gt; : MonoBehaviour where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public static T Instance &#123; get; private set; &#125;</span><br><span class="line">    protected virtual void Awake() =&gt; Instance = this as T;</span><br><span class="line">    protected virtual void OnApplicationQuit()</span><br><span class="line">    &#123;</span><br><span class="line">        Instance = null;</span><br><span class="line">        Destroy(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// This transforms the static instance into a basic singleton. This will destroy any new</span><br><span class="line">/// versions created, leaving the original instance intact</span><br><span class="line">/// ///这将把静态实例转换成一个基本的单例。这将摧毁任何新的</span><br><span class="line">///创建的版本，保留原来的实例不变</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class Singleton&lt;T&gt; : StaticInstance&lt;T&gt; where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Instance != null) Destroy(gameObject);</span><br><span class="line">        base.Awake();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">//最后，我们有了一个持久版本的单例。这将通过现场生存</span><br><span class="line">/// / / 负载。非常适合需要有状态、持久数据的系统类。或音频来源</span><br><span class="line">///通过加载屏幕播放音乐，等等</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class PersistentSingleton&lt;T&gt; : Singleton&lt;T&gt; where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        DontDestroyOnLoad(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中<code>PersistentSingleton.DontDestroyOnLoad</code> 是不会随场景变更而销毁，用于音频管理器。如果同一个节点下 存在单例模式，则会影响该节点所有脚本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4b8655e19d72&quot;&gt;unity单例模式的样板代码&lt;/a&gt;&lt;br&gt;文章字数：189,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity滚轮控制摄像机距离</title>
    <link href="https://lozn.top/2022/08/13/unity%E6%BB%9A%E8%BD%AE%E6%8E%A7%E5%88%B6%E6%91%84%E5%83%8F%E6%9C%BA%E8%B7%9D%E7%A6%BB/"/>
    <id>https://lozn.top/2022/08/13/unity滚轮控制摄像机距离/</id>
    <published>2022-08-13T01:48:23.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/5164f28db85d">unity滚轮控制摄像机距离</a><br>文章字数：195,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;   if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是非虚拟相机则修改position.z轴就行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/5164f28db85d&quot;&gt;unity滚轮控制摄像机距离&lt;/a&gt;&lt;br&gt;文章字数：195,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>解决缩放完美插入到物体上方的方法探讨</title>
    <link href="https://lozn.top/2022/08/12/%E8%A7%A3%E5%86%B3%E7%BC%A9%E6%94%BE%E5%AE%8C%E7%BE%8E%E6%8F%92%E5%85%A5%E5%88%B0%E7%89%A9%E4%BD%93%E4%B8%8A%E6%96%B9%E7%9A%84%E6%96%B9%E6%B3%95%E6%8E%A2%E8%AE%A8/"/>
    <id>https://lozn.top/2022/08/12/解决缩放完美插入到物体上方的方法探讨/</id>
    <published>2022-08-12T07:37:20.000Z</published>
    <updated>2022-08-31T01:46:54.655Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4cc4d2d77d51">解决缩放完美插入到物体上方的方法探讨</a><br>文章字数：1064,阅读全文大约需要4分钟<br>首先被点击的物品 :</p><p>被点击的物品 有的是轴心 有的是 顶部 有的是底部。<br>如果是底部那么得到的物体y就是底部的需要把被点击物体y+当前物体材质的高度y加上才定位到顶点y,</p><p>然后要插入顶点 则直接y等于顶点就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">      /// 插入一个指定长度的柱子 位于指定的y轴上方 </span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=&quot;position&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;floatY&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;verticalMode&quot;&gt;0 代表 底部  1 代表中心 1 代表 顶部&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;color&quot;&gt;&lt;/param&gt;</span><br><span class="line">      internal static void DebugPrimitiveColorHeightInsertBar(Vector3 position, Vector3 size, float verticalMode, float selfHeight, Color color)</span><br><span class="line">      &#123;</span><br><span class="line">          GameObject gameObject = GameObject.CreatePrimitive(PrimitiveType.Cube);</span><br><span class="line">          gameObject.transform.localScale = new Vector3(0.1f, selfHeight, 0.1f);</span><br><span class="line">          gameObject.GetComponent&lt;Renderer&gt;().material.color = color;</span><br><span class="line">          float baseY;</span><br><span class="line">          if (verticalMode == 0)//轴心为底部 加上自身大小</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y + size.y;</span><br><span class="line">          &#125;</span><br><span class="line">          else if (verticalMode == 1)//轴心为中心 加上自身大小的一半</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y + (size.y / 2f);//轴心Y</span><br><span class="line">              gameObject.transform.position = new Vector3(position.x, baseY +(selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), position.z);</span><br><span class="line">          &#125;</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y;//轴心为顶部 则不需要加上自身大小</span><br><span class="line">              gameObject.transform.position = new Vector3(position.x, baseY + (selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), position.z);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DebugPrimitiveColorHeightInsertBar(clickedMaterialGameObject.transform.position, clickedMaterialSize, 1, 3, Color.red);</span><br><span class="line">        DebugPrimitiveColorHeightInsertBar(clickedMaterialGameObject.transform.position, clickedMaterialSize, 0, 30, Color.green);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-17bde960c1c751e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>为了验证是否精确，于是我设置了一个超长缩放的条块</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-1e882a2404ff2a16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>上面的红色平面 是和红色块是一起的，绿色平面在天上了</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c452f7f7c270e9c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>立方体的轴心是在立方体中心<br>但是测试的时候发现 还是基于y坐标加材质的高度才能计算出顶点，<br>但是测试其他不规则物体的时候轴心是底部，但是也是用了被点击物体y坐标+被点击物体的高度材质   + （1-(缩放后的高度)&#x2F;2） </p><h3 id="关于计算任何轴心的方式我陷入了沉思"><a href="#关于计算任何轴心的方式我陷入了沉思" class="headerlink" title="关于计算任何轴心的方式我陷入了沉思"></a>关于计算任何轴心的方式我陷入了沉思</h3><p><img src="https://upload-images.jianshu.io/upload_images/2815884-e8c0cbadfddb5796.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>上图的黑色 平面是用于输出y坐标轴心 忽略原始轴心的，但是网上这个方法似乎并不好使。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">    Vector3 vector3 = CalcModelCenter(clickedMaterialGameObject.transform);</span><br><span class="line">DebugPrimitiveColorHeight(clickedMaterialGameObject.transform.position, vector3.y, Color.black);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      internal static void DebugPrimitiveColorHeight(Vector3 position, float floatY, Color color)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject gameObject = GameObject.CreatePrimitive(PrimitiveType.Plane);</span><br><span class="line">            gameObject.transform.localScale = new Vector3(0.4f, 1, 0.4f);</span><br><span class="line">            gameObject.GetComponent&lt;Renderer&gt;().material.color = color;</span><br><span class="line">            gameObject.transform.position = new Vector3(position.x, floatY, position.z);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /// &lt;summary&gt;</span><br><span class="line">        /// 计算模型的中心点</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=&quot;tran&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public static Vector3 CalcModelCenter(Transform tran)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 position = tran.position;</span><br><span class="line">            Quaternion quaternion = tran.rotation;</span><br><span class="line">            Vector3 scale = tran.localScale;</span><br><span class="line">            tran.position = Vector3.zero;</span><br><span class="line">            tran.rotation = Quaternion.Euler(Vector3.zero);</span><br><span class="line">            tran.localScale = Vector3.one;</span><br><span class="line">            Vector3 center = Vector3.zero;</span><br><span class="line">            Renderer[] renders = tran.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">            foreach (Renderer child in renders)</span><br><span class="line">            &#123;</span><br><span class="line">                center += child.bounds.center;</span><br><span class="line">            &#125;</span><br><span class="line">            center /= tran.GetComponentsInChildren&lt;Renderer&gt;().Length;</span><br><span class="line">            Bounds bounds = new Bounds(center, Vector3.zero);</span><br><span class="line">            foreach (Renderer item in renders)</span><br><span class="line">            &#123;</span><br><span class="line">                bounds.Encapsulate(item.bounds);</span><br><span class="line">            &#125;</span><br><span class="line">            tran.position = position;</span><br><span class="line">            tran.rotation = quaternion;</span><br><span class="line">            tran.localScale = scale;</span><br><span class="line">            foreach (Transform item in tran)</span><br><span class="line">            &#123;</span><br><span class="line">                item.position = item.position - bounds.center;</span><br><span class="line">            &#125;</span><br><span class="line">            return bounds.center + tran.position;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以到底有没有忽略轴心真正得出顶点低点的正确代码呢。关于插入顶点的问题 </p><p>在rect  cavans world 有点问题了<br><img src="https://upload-images.jianshu.io/upload_images/2815884-b809fecde20a3ad9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="x"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-7c05538b19f52578.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xxx"></p><p> 一个是缩放的立方体照样 精准插入头部，另外一个是图表，我加了box mesh 等于图表大小， 缩放了rect size ,显然算得有点偏差了，缩放值越大偏差越大 ，现在我计算得到大小大概是20 ，但是显然中心点算错了，图表偏离那么多<img src="https://upload-images.jianshu.io/upload_images/2815884-02b0cb55596173f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xx"></p><p>所以各位大佬 到底怎么解决这个问题。</p><p>最后我突然发现我有把canvas也缩放过得呢，所以 获取父canvas 获取缩放值，也乘上缩放值 ，进行还原 真实的大小，得到了真实的大小&#x2F;2就能得到摆放的位置了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">          DebugSmartPrimitiveColorHeight(clickedMaterialGameObject.transform, clickedMaterialSize,0,Color.blue);</span><br><span class="line">          float parentScale=chartGameObject.GetComponentInParent&lt;Canvas&gt;().transform.localScale.y;</span><br><span class="line">          GameUtil.DebugSmallInsertArticleTopBy(clickedMaterialGameObject.transform, clickedMaterialSize, chartGameObject.GetComponentInChildren&lt;Collider&gt;().bounds.size.y* chartGameObject.transform.localScale.y* parentScale, 0,chartGameObject.transform);</span><br><span class="line">          GameObject gameObjectTest = GameObject.CreatePrimitive(PrimitiveType.Cube);</span><br><span class="line">          gameObjectTest.transform.localScale = new Vector3(0.2f, 30f, 0.2f);</span><br><span class="line">          GameUtil.DebugSmallInsertArticleTopBy(clickedMaterialGameObject.transform, clickedMaterialSize, gameObjectTest.transform.localScale.y, 0, gameObjectTest.transform);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     internal static void DebugSmallInsertArticleTopBy(Transform transform, Vector3 size, float selfHeight,float margin, Transform transformInnsert)</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">          float baseY;</span><br><span class="line">          Vector3 vector3 = GetCenter(transform);</span><br><span class="line">          baseY = vector3.y + size.y+ margin;</span><br><span class="line">          transformInnsert.position = new Vector3(transform.position.x, baseY  + (selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), transform.position.z);</span><br><span class="line">          Debug.Log(&quot;插入&quot; + transform.name + &quot;物体上方,被插入物体:&quot; + transformInnsert.name + &quot;,被插入物体高度:&quot; + selfHeight + &quot;,顶点y：&quot; + baseY + &quot;,插入的物体y:&quot; + transformInnsert.position.y);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">      /// 获得中心点</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=&quot;target&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">      public static Vector3 GetCenter(Transform target)</span><br><span class="line">      &#123;</span><br><span class="line">          Renderer[] mrs = target.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">          Vector3 center = target.transform.position;</span><br><span class="line">          if (mrs.Length != 0)</span><br><span class="line">          &#123;</span><br><span class="line">              Bounds bounds = new Bounds(center, Vector3.zero);</span><br><span class="line">              foreach (Renderer item in mrs)</span><br><span class="line">              &#123;</span><br><span class="line">                  bounds.Encapsulate(item.bounds);</span><br><span class="line">              &#125;</span><br><span class="line">              center = bounds.center;</span><br><span class="line">          &#125;</span><br><span class="line">          return center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>至于这个获取被点击物品中心点的应该还是有问题的，我发现得到的可能是底部位置 ，所以我加了被点击物体的高度才得到 顶部位置<br>最后总结思路:被点击物体的顶点<br>然后<code>被点击物体的顶部位置 +（被插入的真实大小(需要还原缩放之前的大小)/2）</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4cc4d2d77d51&quot;&gt;解决缩放完美插入到物体上方的方法探讨&lt;/a&gt;&lt;br&gt;文章字数：1064,阅读全文大约需要4分钟&lt;br&gt;首先被点击的物品 :&lt;/p&gt;
&lt;p&gt;被点击的物品 有的是轴心 有
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【unity原创】点击地面产生效果的实现</title>
    <link href="https://lozn.top/2022/08/12/%E3%80%90unity%E5%8E%9F%E5%88%9B%E3%80%91%E7%82%B9%E5%87%BB%E5%9C%B0%E9%9D%A2%E4%BA%A7%E7%94%9F%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://lozn.top/2022/08/12/【unity原创】点击地面产生效果的实现/</id>
    <published>2022-08-12T02:10:15.000Z</published>
    <updated>2022-08-31T01:46:54.639Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/480c71da7e4b">【unity原创】点击地面产生效果的实现</a><br>文章字数：265,阅读全文大约需要1分钟<br>首先要做一个3d预制体 然后欧拉角 要调整</p><p>上面的每一句代码都有用，点击之后会发现和鼠标的位置有点出入，因为点击是一个斜向的射线，所以要尽量靠近鼠标，所以让这个点击的效果物体靠近鼠标一些就要朝向摄像机，并移动1米，<br>但是 lookat 会修改x坐标 ，导致整个点击效果 不是平的而是倾斜的 所以需要改成 0，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-70b1be284d35e4e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">                        GameObject clickObject = Instantiate(effectGo);</span><br><span class="line">                                    clickObject.GetComponent&lt;Canvas&gt;().worldCamera = ScreenPageManager.Instance.worldCamera;</span><br><span class="line">                                    clickObject.transform.eulerAngles = Vector3.zero;</span><br><span class="line">                                    clickObject.transform.position = point;</span><br><span class="line">                                    clickObject.transform.position = new Vector3(hitInfoRoom.point.x, tempParent.position.y+1.5f, hitInfoRoom.point.z);</span><br><span class="line">//不看摄像机移动就方向是错的。</span><br><span class="line">                                    clickObject.transform.LookAt(Camera.main.transform, Vector3.up);</span><br><span class="line">                                    clickObject.transform.forward = Camera.main.transform.forward;</span><br><span class="line">//解决倾斜问题</span><br><span class="line">                                    clickObject.transform.rotation = Quaternion.Euler(0,clickObject.transform.eulerAngles.y, clickObject.transform.eulerAngles.z);</span><br><span class="line">                                    clickObject.transform.Translate(Vector3.forward);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外我这点击的是房子，因为我并没有做地面的，房子本身有地面，所以点击后 点击的是房子，好在轴心是房子底部，而非中心点，否则 y轴配置需要微调。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/480c71da7e4b&quot;&gt;【unity原创】点击地面产生效果的实现&lt;/a&gt;&lt;br&gt;文章字数：265,阅读全文大约需要1分钟&lt;br&gt;首先要做一个3d预制体 然后欧拉角 要调整&lt;/p&gt;
&lt;p&gt;上面
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>原创unity一种基于文字宽度让背景跟文字自适应不用shader实现描边</title>
    <link href="https://lozn.top/2022/08/11/%5B%E5%8E%9F%E5%88%9B%5Dunity%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E6%96%87%E5%AD%97%E5%AE%BD%E5%BA%A6%E8%AE%A9%E8%83%8C%E6%99%AF%E8%B7%9F%E6%96%87%E5%AD%97%E8%87%AA%E9%80%82%E5%BA%94%E4%B8%8D%E7%94%A8shader%E5%AE%9E%E7%8E%B0%E6%8F%8F%E8%BE%B9/"/>
    <id>https://lozn.top/2022/08/11/[原创]unity一种基于文字宽度让背景跟文字自适应不用shader实现描边/</id>
    <published>2022-08-11T05:48:54.000Z</published>
    <updated>2022-08-31T01:46:54.615Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/9fc80e5eb042">原创unity一种基于文字宽度让背景跟文字自适应不用shader实现描边</a><br>文章字数：454,阅读全文大约需要1分钟<br>方法1：<br>把pannel作为text的child,然后给text设置content size filter<br>fit设置为Prefered size</p><p>但是此方法在3d ui里面法线背景盖住了文字，导致文字显得很灰暗。<br>但是 修改  image type为 Tiled 去掉 fill center 修改 pixels per unit 大小 实现了边框自适应，但是内容是无背景。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-7d98fb9db6248431.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>因此我就利用这个实现描边自适应的效果<br><img src="https://upload-images.jianshu.io/upload_images/2815884-e466d8a8deb0fbab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>方法2:<br>pannel作为父亲，<br>添加 content size filter 组件  fit设置为Prefered size<br>添加 垂直或者水平组件Vertical layout Group<br>勾选Controll child size , Use child scale<br>这两者相互约束才行。<br>得到的结果就是 pannel的宽高是禁止编辑的，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-bd5621157a6315aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>text作为child ,并再给一个pannel<img src="https://upload-images.jianshu.io/upload_images/2815884-f278a69fbdd64ae1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="I5HS9V)1}GL}FW)YW88U$IL.png"></p><p>最后是text的pannel</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-e20c37f4b41a2034.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>left top right bottom和 父pannel的padding值一样。</p><p>最后是边框的大小<br>Pixels per unit multiplier的越小反而边框越大，  但是勾选fill center则不一样，则代表圆角，越小则圆角越大。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-2e756786bf7b05a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/9fc80e5eb042&quot;&gt;原创unity一种基于文字宽度让背景跟文字自适应不用shader实现描边&lt;/a&gt;&lt;br&gt;文章字数：454,阅读全文大约需要1分钟&lt;br&gt;方法1：&lt;br&gt;把pannel
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>关于多个相机depth引发的血案</title>
    <link href="https://lozn.top/2022/08/11/%E5%85%B3%E4%BA%8E%E5%A4%9A%E4%B8%AA%E7%9B%B8%E6%9C%BA-depth%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/"/>
    <id>https://lozn.top/2022/08/11/关于多个相机-depth引发的血案/</id>
    <published>2022-08-11T02:13:58.000Z</published>
    <updated>2022-08-31T01:46:54.643Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/9caa18f38843">关于多个相机depth引发的血案</a><br>文章字数：85,阅读全文大约需要1分钟<br>不知道改了什么，导致 运行的时候ui画布不见了，但是随便改一下ui相机参数就出现了，但是不得要领，最后发现 罪魁祸首是depth,我把主相机改成 1 ，ui相机改成2 ，这样ui图层就始终显示了，bug到此不再出现了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/9caa18f38843&quot;&gt;关于多个相机depth引发的血案&lt;/a&gt;&lt;br&gt;文章字数：85,阅读全文大约需要1分钟&lt;br&gt;不知道改了什么，导致 运行的时候ui画布不见了，但是随便改一下ui相机参
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【原创】关于unity图表插入到物体上方总是定位不准的问题探索</title>
    <link href="https://lozn.top/2022/08/10/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%85%B3%E4%BA%8Eunity%E5%9B%BE%E8%A1%A8%E6%8F%92%E5%85%A5%E5%88%B0%E7%89%A9%E4%BD%93%E4%B8%8A%E6%96%B9%E6%80%BB%E6%98%AF%E5%AE%9A%E4%BD%8D%E4%B8%8D%E5%87%86%E7%9A%84%E9%97%AE%E9%A2%98%E6%8E%A2%E7%B4%A2/"/>
    <id>https://lozn.top/2022/08/10/【原创】关于unity图表插入到物体上方总是定位不准的问题探索/</id>
    <published>2022-08-10T05:45:33.000Z</published>
    <updated>2022-08-31T01:46:54.639Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/03a903ec5e12">【原创】关于unity图表插入到物体上方总是定位不准的问题探索</a><br>文章字数：661,阅读全文大约需要2分钟<br>首先 经过测试发现 ，给图表设置forword&#x3D;相机的forword就实现了图表一直朝向相机，而且不会正反颠倒</p><p>其次在研究摆放的时候发现总是无法左右居中，以及无法控制前后，<br>我发现修改x 不代表就是我认为的往左右调整， 修改z也不代表往前后，经过几天的踩坑 ，<br>先排查是否是缩放导致的， 通过计算缩放的值发现并不能解决问题</p><p>经过测试创建立方体</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-6ea06ec1ac815d40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xxx"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-ff89caf5d4ac4926.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xxx"></p><p>但是尝试创建一个立方体 然后让图表位置等于立方体位置发现立方体刚好位于圆盘上方，说明立方体没问题，那么我仔细对比发现我是改动了 z轴导致，我把z轴就等于被点击物体的z轴 x轴就等于被点击物体的就发现居中了，接下来是如何让物体靠前</p><p>我尝试在position中修改z轴或者+Vector.forword都不能解决问题</p><p>反而导致又无法居中了，<br>然后尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chartGameObject.transform.Translate(Vector3.forward*3);</span><br></pre></td></tr></table></figure><p>发现依然如此，导致无法居中了，而且并没有向前，</p><p>突然我又想到了一个东西LookAt<br>终于 3句话全部写上去才成功让3d图表插入到游戏物体上面而且 还往前一些。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GameObject test= GameObject.CreatePrimitive(PrimitiveType.Cube);</span><br><span class="line">test.transform.SetParent(ChartCanvasManager.Instance.transform);</span><br><span class="line">test.transform.position = chartGameObject.transform.position = new Vector3(myRoomMaterials.transform.position.x, 4.98f, myRoomMaterials.transform.position.z);//</span><br><span class="line">chartGameObject.transform.LookAt(Camera.main.transform);</span><br><span class="line">chartGameObject.transform.Translate(Vector3.forward*3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但是 我尝试用</p><p>首先是摆放位置<br>其次是转向<br>然后让物体往前走3米 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chartGameObject.transform.DOLocalMove(chartGameObject.transform.localPosition+(Vector3.forward*2), 2);</span><br></pre></td></tr></table></figure><p>这样发现并不是朝向摄像机移动所以搞不懂到底哪里出问题了 无论是本地坐标还是世界坐标都不好使了。</p><p>###关于 高度不准问题</p><p>高度也跟物体的锚点 以及 被插入的物体锚点有关，创建一个立方体默认是居中的，如果调整后刚好插入到顶部，但是进行放大后，则此位置有偏差，需要根据缩放之后的大小减半 操作<br>但是由于被点击的物体有的中心点不一致，目前我暂时根据服务器配置读取自动摆放高度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/03a903ec5e12&quot;&gt;【原创】关于unity图表插入到物体上方总是定位不准的问题探索&lt;/a&gt;&lt;br&gt;文章字数：661,阅读全文大约需要2分钟&lt;br&gt;首先 经过测试发现 ，给图表设置forw
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【unity】一个图表 或者图片的缩放后不对的问题饶了一大圈最后终于解决。</title>
    <link href="https://lozn.top/2022/08/05/%E3%80%90unity%E3%80%91%E4%B8%80%E4%B8%AA%E5%9B%BE%E8%A1%A8%C2%A0%E6%88%96%E8%80%85%E5%9B%BE%E7%89%87%E7%9A%84%E7%BC%A9%E6%94%BE%E5%90%8E%E4%B8%8D%E5%AF%B9%E7%9A%84%E9%97%AE%E9%A2%98%E9%A5%B6%E4%BA%86%E4%B8%80%E5%A4%A7%E5%9C%88-%E6%9C%80%E5%90%8E%E7%BB%88%E4%BA%8E%E8%A7%A3%E5%86%B3%E3%80%82/"/>
    <id>https://lozn.top/2022/08/05/【unity】一个图表 或者图片的缩放后不对的问题饶了一大圈-最后终于解决。/</id>
    <published>2022-08-05T03:10:38.000Z</published>
    <updated>2022-08-31T01:46:54.639Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/e9f83dd00787">【unity】一个图表 或者图片的缩放后不对的问题饶了一大圈最后终于解决。</a><br>文章字数：729,阅读全文大约需要2分钟<br>一个图表 或者图片的缩放问题<br><img src="https://upload-images.jianshu.io/upload_images/2815884-17915b8a44d34d0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="33"></p><p>如上图所示 leftbottom是一个父容器 固定设置了距离左边有10个距离<br>然后我把图表插入到这个左下角，缩放图表自身 就会发现图表并不会按我想的摆放，他距离底部更远了，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-43134cc857761ada.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="333"></p><p>我这个问题之前那个朋友的解决思路是直接缩放父容器 这样这个图表就会一直靠左下角保持固定10 </p><p>，但是 同时插入多个到左下角，如果约束宽度不一致，他们都是一个父容器显然是行不通的，则代表需要每一个给定一个父容器，然后我动态给了他们 一个父容器，但是这位置摆放还是不对。<br>昨天调节了很久还是不行</p><p>那个锚点，我目前只能 我只能解决一个的摆放和同时缩放问题<br><img src="https://upload-images.jianshu.io/upload_images/2815884-5195c3ed0e864a30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="333"></p><p>经过大佬的分析 我这个分明搞错了方向，解决问题还是得从缩放自己来解决，问题就是锚点问题<br>原因是缩放后位置不对实际上锚点不对其实修改锚点就可以解决，但是被锁死导致的，那么 解决锁死问题 就问题解决了，然后只勾选hor group的 use child scale 发现 孩子的锚点依然是可以修改的，然后测试改成一致的，就解决了这个问题。<br>不管 是左下角还是左上角 或者右下角都可以解决这个问题。</p><p>然后 设置自己的锚点和父亲锚点一致，比如左下角摆放则让孩子也同样左下角摆放，这样就可以做到和屏幕左下距离是一样的。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-033ebc924a7325ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>需要注意的是 child alignment需要调整好，不然还是会有点问题。</p><p>完整代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">RectTransform rectTransform = newGameObject.GetComponent&lt;RectTransform&gt;();</span><br><span class="line">newGameObject.transform.parent = parent.transform;</span><br><span class="line">rectTransform.anchoredPosition3D = Vector3.zero;</span><br><span class="line">if (view.width &gt; 0 || view.height &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">    if (view.getType() == IDataType.web)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        if (view.scale &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            newGameObject.transform.localScale = new Vector3(view.scale, view.scale, view.scale);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rectTransform.sizeDelta = new Vector2(view.width &gt; 0 ? view.width : rectTransform.sizeDelta.x, view.height &gt; 0 ? view.height : rectTransform.sizeDelta.y);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果ratio=-1,则代表适用宽度，直接设置 宽高而非缩放到指定宽度</span><br><span class="line">        if (view.scale == -1)</span><br><span class="line">        &#123;</span><br><span class="line">            rectTransform.sizeDelta = new Vector2(view.width &gt; 0 ? view.width : rectTransform.sizeDelta.x, view.height &gt; 0 ? view.height : rectTransform.sizeDelta.y);</span><br><span class="line">            parent.transform.localScale = Vector3.one;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        if (view.width != 0 &amp;&amp; view.height == 0) //基于宽度缩放</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            float scaleX = view.width / rectTransform.rect.width;</span><br><span class="line">            newGameObject.transform.localScale = new Vector3(scaleX, scaleX, scaleX);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        if (view.width == 0 &amp;&amp; view.height != 0)//基于高度缩放</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            float scaleY = view.height / rectTransform.rect.height;</span><br><span class="line">            newGameObject.transform.localScale = new Vector3(scaleY, scaleY, scaleY);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            float scaleX = view.width / rectTransform.rect.width;</span><br><span class="line">            float scaleY = view.height / rectTransform.rect.height;</span><br><span class="line">            newGameObject.transform.localScale = new Vector3(scaleX, scaleY, 1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rectTransform.pivot = parent.GetComponent&lt;RectTransform&gt;().pivot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    //直接设置比例</span><br><span class="line"></span><br><span class="line">    if (view.scale &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        newGameObject.transform.localScale = new Vector3(view.scale, view.scale, view.scale);</span><br><span class="line">    &#125;</span><br><span class="line">    else //使用默认宽高约束 如果 比我设置的最大比例还要大，就不缩放了， 原比例默认</span><br><span class="line">    &#123;</span><br><span class="line">        float scaleratio = _baseScaleWidth &gt;= rectTransform.rect.width ? 1 : _baseScaleWidth / rectTransform.rect.width;</span><br><span class="line">        newGameObject.transform.localScale = new Vector3(scaleratio, scaleratio, scaleratio);</span><br><span class="line">    &#125;</span><br><span class="line">    rectTransform.pivot = parent.GetComponent&lt;RectTransform&gt;().pivot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/e9f83dd00787&quot;&gt;【unity】一个图表 或者图片的缩放后不对的问题饶了一大圈最后终于解决。&lt;/a&gt;&lt;br&gt;文章字数：729,阅读全文大约需要2分钟&lt;br&gt;一个图表 或者图片的缩放问题
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity中c的字段理解让你明白什么时候该用属性什么时候该用字段</title>
    <link href="https://lozn.top/2022/07/30/unity--%E4%B8%AD-c#%E7%9A%84%E5%AD%97%E6%AE%B5%E7%90%86%E8%A7%A3-%E8%AE%A9%E4%BD%A0%E6%98%8E%E7%99%BD%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E8%AF%A5%E7%94%A8%E5%B1%9E%E6%80%A7%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E8%AF%A5%E7%94%A8%E5%AD%97%E6%AE%B5/"/>
    <id>https://lozn.top/2022/07/30/unity--中-c#的字段理解-让你明白什么时候该用属性什么时候该用字段/</id>
    <published>2022-07-30T03:09:17.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/f3c75c116f82">unity中c的字段理解让你明白什么时候该用属性什么时候该用字段</a><br>文章字数：120,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public int a;//这是字段</span><br><span class="line">public int a&#123;get;set&#125;//这是属性</span><br></pre></td></tr></table></figure><p>所谓属性实际上字段是私有的，只是弄了一个getA() setA()方法，而java是没有属性这个概念的。<br>unity中<br>如果要反序列化，（json反序列化也就是把json字符串自动变成一个模型并且填充赋值）那么必须public字段，否则无法访问到。<br>如果要让字段能够在inspector里面显示 ，必须public字段或者 使用注解<code>SerializeField</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> [SerializeField]</span><br><span class="line">public  TextMeshProUGUI text;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/f3c75c116f82&quot;&gt;unity中c的字段理解让你明白什么时候该用属性什么时候该用字段&lt;/a&gt;&lt;br&gt;文章字数：120,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>原创裴讯K3救砖TTL竟然进入openwrt终端无法进入CFE强力救砖</title>
    <link href="https://lozn.top/2022/07/29/%5B%E5%8E%9F%E5%88%9B%5D%E8%A3%B4%E8%AE%AFK3%E6%95%91%E7%A0%96TTL%E7%AB%9F%E7%84%B6%E8%BF%9B%E5%85%A5openwrt%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5CFE-%E5%BC%BA%E5%8A%9B%E6%95%91%E7%A0%96/"/>
    <id>https://lozn.top/2022/07/29/[原创]裴讯K3救砖TTL竟然进入openwrt终端无法进入CFE-强力救砖/</id>
    <published>2022-07-29T17:16:19.000Z</published>
    <updated>2022-08-31T01:46:54.615Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/11e893b21e73">原创裴讯K3救砖TTL竟然进入openwrt终端无法进入CFE强力救砖</a><br>文章字数：581,阅读全文大约需要2分钟<br>救砖连串口 的 ,我就不说了,网上大把教程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">斐讯GND/RX/TX，对应TTL模块GND/RXD/TXD</span><br></pre></td></tr></table></figure><p>网上大把的k3救砖教程,但是他们进入的压根不是那个CFE终端界面,我这是openwrt呀,<br>我的是openwrt的界面,压根就无法输入那个鬼东西,无法输入flash命令,  连nvm什么命令都只能show ,经过我反复的折腾,我观察到了一个日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not load 192.168.2.3:vmlinuz: Timeout occured</span><br></pre></td></tr></table></figure><p>另外 cmd 开启<code>ping 192.168.2.1 -t</code>然后重启路由器发现刚开始能ping通, ping通大概3次,我认为就对应了,这里,ping不通之后就会进入什么安全模式,这个模式自己也ping不同,跟别说ping其他的,<br>我的路由器和我的电脑都是连好的,于是我把我电脑ip 改成192.2.3<br>然后 打开tftp软件,设置2.3</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-ae88f35ce9acc958.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后重启路由器,我发现竟然这里显示进度了,果然了,openwrt的系统会默认尝试加载一个固定ip地址的固件,而我呢,则把我的k3原厂固件改名为vmlinuz放到 这个tftp服务器下面,就自然 而然检测通了.</p><p>最后各种进度不同了<br><img src="https://upload-images.jianshu.io/upload_images/2815884-c2c321e24bac075d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>之后串口并没有断开,但是已经到了网页了</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-de470b2c747cec25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>最后这个串口模式很好玩, 我打开路由器的网址这边发生了一些变化,或许他们的漏洞检测,就是利用这个东西查看日志结合的吧<br><img src="https://upload-images.jianshu.io/upload_images/2815884-6739eac3130a8688.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/11e893b21e73&quot;&gt;原创裴讯K3救砖TTL竟然进入openwrt终端无法进入CFE强力救砖&lt;/a&gt;&lt;br&gt;文章字数：581,阅读全文大约需要2分钟&lt;br&gt;救砖连串口 的 ,我就不说了,网
      
    
    </summary>
    
      <category term="硬件维修" scheme="https://lozn.top/categories/%E7%A1%AC%E4%BB%B6%E7%BB%B4%E4%BF%AE/"/>
    
    
      <category term="硬件维修" scheme="https://lozn.top/tags/%E7%A1%AC%E4%BB%B6%E7%BB%B4%E4%BF%AE/"/>
    
  </entry>
  
  <entry>
    <title>unity解决一个咨询5千人没人回答和深思但是确实需要解决的问题json具体字段类型不确定的问题</title>
    <link href="https://lozn.top/2022/07/29/unity%E8%A7%A3%E5%86%B3%E4%B8%80%E4%B8%AA%E5%92%A8%E8%AF%A25%E5%8D%83%E4%BA%BA%E6%B2%A1%E4%BA%BA%E5%9B%9E%E7%AD%94%E5%92%8C%E6%B7%B1%E6%80%9D%E4%BD%86%E6%98%AF%E7%A1%AE%E5%AE%9E%E9%9C%80%E8%A6%81%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98json%E5%85%B7%E4%BD%93%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B%E4%B8%8D%E7%A1%AE%E5%AE%9A%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://lozn.top/2022/07/29/unity解决一个咨询5千人没人回答和深思但是确实需要解决的问题json具体字段类型不确定的问题/</id>
    <published>2022-07-29T09:39:28.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/ef6576253c4b">unity解决一个咨询5千人没人回答和深思但是确实需要解决的问题json具体字段类型不确定的问题</a><br>文章字数：473,阅读全文大约需要1分钟<br>首先 不确定如果是单独的节点，肯定是可以自己写代码判断解决的，<br>但是我是强迫症，我要解决自动化，解决子节点中的子节点中的子节点，  循环节点，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-9fdf43ace40bcbca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>把这个这个不确定的字段变成字符串，或者 JObject或者JArray</p><p>假设<br>type&#x3D;1则data是 数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;type&quot;:1</span><br><span class="line">&quot;data&quot;:[]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设 type&#x3D;2<br>data是对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;type&quot;:1</span><br><span class="line">&quot;data&quot;:&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我把data定义了各种类型都失败了，定义为string也是我的一个退让。<br><code>JsonUtility.FromJson&lt;MyNode&gt;(obj.ToString());</code></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-d9abd011b80ae81b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1S0(AR8@T(5DZS805A7T6Z7.png"></p><p>上面某个东西写错了，不过定义了jarray或者jobject 就会为null, 或者 dynamic或object 者string类<br>型但是真实的值并不是字符串也是为null,</p><p>这不应该呀，java都支持。</p><p>于是我我想到了牛顿JSON,以及微软自带的<br>             <code> MyNode myNode =JsonConvert.DeserializeObject&lt;MyNode&gt;(obj.ToString());</code></p><p>完美解决,支持JObject,JArray,object 或者dynamic貌似则直接识别为字符串，不过这都能解决需求了。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-3af52b5a861c9058.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/ef6576253c4b&quot;&gt;unity解决一个咨询5千人没人回答和深思但是确实需要解决的问题json具体字段类型不确定的问题&lt;/a&gt;&lt;br&gt;文章字数：473,阅读全文大约需要1分钟&lt;br&gt;首先 
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity虚拟相机cinemachine之ScriptingExample源码解读轻松理解其作用</title>
    <link href="https://lozn.top/2022/07/27/unity%E8%99%9A%E6%8B%9F%E7%9B%B8%E6%9C%BAcinemachine-%E4%B9%8BScriptingExample%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB%E8%BD%BB%E6%9D%BE%E7%90%86%E8%A7%A3%E5%85%B6%E4%BD%9C%E7%94%A8/"/>
    <id>https://lozn.top/2022/07/27/unity虚拟相机cinemachine-之ScriptingExample源码解读轻松理解其作用/</id>
    <published>2022-07-27T06:09:38.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/6e209acbf30d">unity虚拟相机cinemachine之ScriptingExample源码解读轻松理解其作用</a><br>文章字数：426,阅读全文大约需要1分钟</p><p>我从demo里面找到了脚本的源码，运行的效果，是5秒切换到这个cube立方体，又5秒切换到另外一个 cylinder，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">public class ScriptingExample : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    CinemachineVirtualCamera vcam;</span><br><span class="line">    CinemachineFreeLook freelook;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // Create a Cinemachine brain on the main camera</span><br><span class="line">        var brain = GameObject.Find(&quot;Main Camera&quot;).AddComponent&lt;CinemachineBrain&gt;();</span><br><span class="line">        brain.m_ShowDebugText = true;</span><br><span class="line">        brain.m_DefaultBlend.m_Time = 1;</span><br><span class="line"></span><br><span class="line">        // Create a virtual camera that looks at object &quot;Cube&quot;, and set some settings</span><br><span class="line">        vcam = new GameObject(&quot;VirtualCamera&quot;).AddComponent&lt;CinemachineVirtualCamera&gt;();</span><br><span class="line">        vcam.m_LookAt = GameObject.Find(&quot;Cube&quot;).transform;</span><br><span class="line">        vcam.m_Priority = 10;</span><br><span class="line">        vcam.gameObject.transform.position = new Vector3(0, 1, 0);</span><br><span class="line"></span><br><span class="line">        // Install a composer.  You can install whatever CinemachineComponents you need,</span><br><span class="line">        // including your own custom-authored Cinemachine components.</span><br><span class="line">        var composer = vcam.AddCinemachineComponent&lt;CinemachineComposer&gt;();</span><br><span class="line">        composer.m_ScreenX = 0.30f;</span><br><span class="line">        composer.m_ScreenY = 0.35f;</span><br><span class="line"></span><br><span class="line">        // Create a FreeLook vcam on object &quot;Cylinder&quot;</span><br><span class="line">        freelook = new GameObject(&quot;FreeLook&quot;).AddComponent&lt;CinemachineFreeLook&gt;();</span><br><span class="line">        freelook.m_LookAt = GameObject.Find(&quot;Cylinder/Sphere&quot;).transform;</span><br><span class="line">        freelook.m_Follow = GameObject.Find(&quot;Cylinder&quot;).transform;</span><br><span class="line">        freelook.m_Priority = 11;</span><br><span class="line"></span><br><span class="line">        // You can access the individual rigs in the freeLook if you want.</span><br><span class="line">        // FreeLook rigs come with Composers pre-installed.</span><br><span class="line">        // Note: Body MUST be Orbital Transposer.  Don&#x27;t change it.</span><br><span class="line">        CinemachineVirtualCamera topRig = freelook.GetRig(0);</span><br><span class="line"> /*       CinemachineVirtualCamera middleRig = freelook.GetRig(1);</span><br><span class="line">        CinemachineVirtualCamera bottomRig = freelook.GetRig(2);</span><br><span class="line">        topRig.GetCinemachineComponent&lt;CinemachineComposer&gt;().m_ScreenY = 0.35f;</span><br><span class="line">        middleRig.GetCinemachineComponent&lt;CinemachineComposer&gt;().m_ScreenY = 0.25f;</span><br><span class="line">        bottomRig.GetCinemachineComponent&lt;CinemachineComposer&gt;().m_ScreenY = 0.15f;*/</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    float lastSwapTime = 0;</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        // Switch cameras from time to time to show blending</span><br><span class="line">        if (Time.realtimeSinceStartup - lastSwapTime &gt; 5)//每5秒递增。</span><br><span class="line">        &#123;</span><br><span class="line">                print(&quot;Time.realtimeSinceStartup &quot; + Time.realtimeSinceStartup + &quot;,lastSwapTime:&quot; + lastSwapTime);</span><br><span class="line">            freelook.enabled = !freelook.enabled;</span><br><span class="line">            lastSwapTime = Time.realtimeSinceStartup;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Time.realtimeSinceStartup表示启动开始的累计时间， 如果大于5秒 ，</p><p>就把某个虚拟相机禁用或者启用，因为这个优先级是11，如果启用，则镜头会移动到11这个。<br>其次lastSwapTime每次打印会一次是5秒，10 秒 10秒，这个不难理解，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-4fe73d60f7c0cc81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>另外这个红色的立方体是一直在自转，从源码中分析发现没有写相关代码。<br>其次当镜头切换到圆柱的时候是可以滚动鼠标让视图变化的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">freelook.m_LookAt = GameObject.Find(&quot;Cylinder/Sphere&quot;).transform;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>lookat代表镜头的角度跟随 物体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">freelook.m_Follow = GameObject.Find(&quot;Cylinder&quot;).transform;</span><br></pre></td></tr></table></figure><p>代表镜头始终贴近物体，无论物体移动到哪。</p><p>至于<code>CinemachineVirtualCamera middleRig = freelook.GetRig(1)</code>没看懂具体干嘛的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/6e209acbf30d&quot;&gt;unity虚拟相机cinemachine之ScriptingExample源码解读轻松理解其作用&lt;/a&gt;&lt;br&gt;文章字数：426,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>blender的模型导入到unity发现模型颠倒问题的解决</title>
    <link href="https://lozn.top/2022/07/27/blender%E7%9A%84%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E5%88%B0unity%E5%8F%91%E7%8E%B0%E6%A8%A1%E5%9E%8B%E9%A2%A0%E5%80%92%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://lozn.top/2022/07/27/blender的模型导入到unity发现模型颠倒问题的解决/</id>
    <published>2022-07-27T02:21:15.000Z</published>
    <updated>2022-08-31T01:46:54.623Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/93995b48952d">blender的模型导入到unity发现模型颠倒问题的解决</a><br>文章字数：80,阅读全文大约需要1分钟<br><img src="https://upload-images.jianshu.io/upload_images/2815884-9b2a2d6628b1e0f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>解决思路：<br>在blender里面旋转下，我这里是上下颠倒，修改x轴180 ，然后<br>输入ctrl+a会弹出apply 吧旋转的应用一下然后保存。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/93995b48952d&quot;&gt;blender的模型导入到unity发现模型颠倒问题的解决&lt;/a&gt;&lt;br&gt;文章字数：80,阅读全文大约需要1分钟&lt;br&gt;&lt;img src=&quot;https://uploa
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【原创】unity鼠标控制相机旋转第一次按下的bug完美解决</title>
    <link href="https://lozn.top/2022/07/23/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91unity-%E9%BC%A0%E6%A0%87%E6%8E%A7%E5%88%B6%E7%9B%B8%E6%9C%BA%E6%97%8B%E8%BD%AC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%89%E4%B8%8B%E7%9A%84bug%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3/"/>
    <id>https://lozn.top/2022/07/23/【原创】unity-鼠标控制相机旋转第一次按下的bug完美解决/</id>
    <published>2022-07-23T02:40:15.000Z</published>
    <updated>2022-08-31T01:46:54.639Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/1eabf30b68d2">【原创】unity鼠标控制相机旋转第一次按下的bug完美解决</a><br>文章字数：548,阅读全文大约需要2分钟<br>我从网上找了许多鼠标左键控制 摄像机转动都有bug,就是第一次按下会出现相机死板的变到某个角度，然后才连贯，之后按下就没问题，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-bbe7d3237f66d0b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xx"></p><p>刚开始我解决的办法就是start()也执行这句话，但是 我还有一个逻辑 是 点击某个菜单也要控制角度，结果控制完成之后我鼠标按下，又再次出现这个bug.</p><p>我从网上搜了大量文章，基本上没有关于此bug的提及，但是鼠标的旋转几乎是这么写的</p><p>下面的代码都可以实现鼠标旋转控制相机，但是某些需求都会控制相机转动，按下鼠标和相机的角度不一致，会有一个不连贯的直接跳动行为，要解决菜单旋转之后的变化，很可能我还需要再多一个动画，让它尽可能连贯。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yaw += sensitivityX * Input.GetAxis(&quot;Mouse X&quot;);</span><br><span class="line">pitch -= sensitivityX * Input.GetAxis(&quot;Mouse Y&quot;);</span><br><span class="line">Camera.main.transform.eulerAngles = new Vector3(pitch, yaw, Camera.main.transform.eulerAngles.z);</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">float mouseX = Input.GetAxis(&quot;Mouse X&quot;);</span><br><span class="line">                float mouseY = Input.GetAxis(&quot;Mouse Y&quot;);</span><br><span class="line">                float rotationX = Camera.main.transform.eulerAngles.y +mouseX * sensitivityX;</span><br><span class="line">                rotationY += mouseY * sensitivityY;</span><br><span class="line">                rotationY = Mathf.Clamp(rotationY, minimumY, maximumY);</span><br><span class="line">                Camera.main.transform.eulerAngles = new Vector3(-rotationY, _rotationX, Camera.main.transform.eulerAngles.z);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">_rotationX -=mouseY* sensitivityX;</span><br><span class="line">         _rotationX = Mathf.Clamp(_rotationX, minimumY, maximumY);</span><br><span class="line"></span><br><span class="line">         float delta =mouseX * sensitivityY;</span><br><span class="line">         float rotationY = Camera.main.transform.localEulerAngles.y + delta;</span><br><span class="line">         Camera.main.transform.localEulerAngles = new Vector3(_rotationX, rotationY, Camera.main.transform.localEulerAngles.z);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我反复的修改也无法解决这个bug.<br>2022-7-23 11:14:55<br>经过我的日志分析我发现了解决大法<br>第一次按下后我发现  鼠标的x y可能为0 ，那么的出来的欧拉角也为0 ，<br>但是 打印按下之前欧拉角x为 20 ， 所以我就把20 可以判断 如果欧拉角x不为0 ，而且历史按下的记录为0 ，代表为第一次按下，我就把这个值等于整个欧拉角x的值，就完美的解决了这个问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">float mouseX = Input.GetAxis(&quot;Mouse X&quot;);</span><br><span class="line">float mouseY = Input.GetAxis(&quot;Mouse Y&quot;);</span><br><span class="line">print(&quot;before yaw&quot; + yaw+&quot;,&quot;+pitch+&quot;,MOUSEx:&quot;+mouseX+&quot;,mouseY:&quot;+mouseY+&quot;,Camera eluerAngele:&quot; + Camera.main.transform.eulerAngles);</span><br><span class="line">if (pitch==0 &amp;&amp;Camera.main.transform.eulerAngles.x !=0)//&amp;&amp;mouseY&lt;3)</span><br><span class="line">&#123;</span><br><span class="line">    pitch = Camera.main.transform.eulerAngles.x;</span><br><span class="line">&#125;   </span><br><span class="line">if (yaw == 0 &amp;&amp;Camera.main.transform.eulerAngles.y !=0)//&amp;&amp;mouseX&lt;3)</span><br><span class="line">&#123;</span><br><span class="line">    yaw = Camera.main.transform.eulerAngles.y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">yaw += sensitivityX * mouseX;// Input.GetAxis(&quot;Mouse X&quot;);</span><br><span class="line">pitch -= sensitivityX * mouseY; // Input.GetAxis(&quot;Mouse Y&quot;);</span><br><span class="line">Camera.main.transform.eulerAngles = new Vector3(pitch, yaw, Camera.main.transform.eulerAngles.z);</span><br><span class="line">print(&quot;,yaw&quot; + yaw+&quot;,&quot;+pitch+&quot;,MOUSEx:&quot;+mouseX+&quot;,mouseY:&quot;+mouseY+&quot;,eulerAngle:&quot; + Camera.main.transform.eulerAngles);</span><br></pre></td></tr></table></figure><p>那么 这第一次的按下解决了，那么怎么解决点击某个ui菜单 的逻辑呢？<br>ui菜单的逻辑实际上是旋转摄像机朝向某个房间移动，我可以在点击这个菜单的时候清空这个脚本历史的记录值，<br>这样就又会走第一次赋值pitch   yaw  值啦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/1eabf30b68d2&quot;&gt;【原创】unity鼠标控制相机旋转第一次按下的bug完美解决&lt;/a&gt;&lt;br&gt;文章字数：548,阅读全文大约需要2分钟&lt;br&gt;我从网上找了许多鼠标左键控制 摄像机转动都
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity类似Lookat缓慢的转动摄像机朝向某个物体</title>
    <link href="https://lozn.top/2022/07/22/unity-%E7%B1%BB%E4%BC%BCLookat%E7%BC%93%E6%85%A2%E7%9A%84%E8%BD%AC%E5%8A%A8%E6%91%84%E5%83%8F%E6%9C%BA%E6%9C%9D%E5%90%91%E6%9F%90%E4%B8%AA%E7%89%A9%E4%BD%93/"/>
    <id>https://lozn.top/2022/07/22/unity-类似Lookat缓慢的转动摄像机朝向某个物体/</id>
    <published>2022-07-22T09:40:25.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/b61732856113">unity类似Lookat缓慢的转动摄像机朝向某个物体</a><br>文章字数：220,阅读全文大约需要1分钟<br>我尝试了各种写法发现都不对，从网上找到了正确的写法,要转向这个物体 ，是距离相减,然后 </p><figure class="highlight plaintext"><figcaption><span>然后四元素 转换为vector3,.DOTWEEN是一个封装框架，也可以自己用差值器实现。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">下面是我自己写的差值器调用</span><br><span class="line">//参数1 为相机，参数2 为物体 ，</span><br><span class="line">    public static Coroutine postRotateLookAt(Transform transform1, Transform transform2, float execTime)</span><br><span class="line">        &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                TaskObj taskObj = new TaskObj();</span><br><span class="line">                taskObj.execFrame = 0.01f;//多少秒执行一次逻辑</span><br><span class="line">                taskObj.needTime = execTime;</span><br><span class="line">                taskObj.action = delegate ()</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    Vector3 dir = transform2.transform.position - transform1.position;</span><br><span class="line">                    Quaternion rot = Quaternion.LookRotation(dir);</span><br><span class="line">                    transform1.rotation = Quaternion.Lerp(transform2.rotation, rot, taskObj.currentTime * taskObj.needTime);</span><br><span class="line">                &#125;;</span><br><span class="line">             return    GlobalClick.getInstance().startTask(taskObj);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">                                                       </span><br><span class="line">        &#125;</span><br><span class="line">        public class TaskObj</span><br><span class="line">        &#123;</span><br><span class="line">            public Action action;</span><br><span class="line">            public float needTime;</span><br><span class="line">            public float currentTime;</span><br><span class="line">            public Transform transform1;</span><br><span class="line">            public float execFrame = 0.1f;</span><br><span class="line">            public Transform transform2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public IEnumerator loopExec(TaskObj taskObj)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        while (taskObj.currentTime &lt;taskObj.needTime)</span><br><span class="line">        &#123;</span><br><span class="line">            taskObj.action.Invoke();</span><br><span class="line">            yield return new WaitForSeconds(taskObj.execFrame);</span><br><span class="line">            taskObj.currentTime += taskObj.execFrame;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        yield return null;</span><br><span class="line">    &#125;</span><br><span class="line">    public Coroutine startTask(TaskObj taskObj)</span><br><span class="line">    &#123;</span><br><span class="line">    return     StartCoroutine(loopExec(taskObj));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的时间差参数 写的有点问题 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">public class TestLookAt : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">public GameObject gameObject1;</span><br><span class="line">public GameObject gameObject2;</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        postRotateLookAt(gameObject1.transform, gameObject2.transform,3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public IEnumerator loopExec(TaskObj taskObj)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        while (taskObj.currentTime &lt; taskObj.needTime)</span><br><span class="line">        &#123;</span><br><span class="line">            taskObj.action.Invoke();</span><br><span class="line">            print(&quot;调用&quot; + taskObj.currentTime);</span><br><span class="line">            yield return new WaitForSeconds(taskObj.execFrame);</span><br><span class="line">            taskObj.currentTime += taskObj.execFrame;</span><br><span class="line">            print(&quot;调用over&quot; + taskObj.currentTime);</span><br><span class="line">        &#125;</span><br><span class="line">        print(&quot;结束&quot;);</span><br><span class="line"></span><br><span class="line">        yield return null;</span><br><span class="line">    &#125;</span><br><span class="line">    public Coroutine startTaskTest(TaskObj taskObj)</span><br><span class="line">    &#123;</span><br><span class="line">        return StartCoroutine(loopExec(taskObj));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public  Coroutine postRotateLookAt(Transform transform1, Transform transform2, float execTime)</span><br><span class="line">    &#123;</span><br><span class="line">        &#123;</span><br><span class="line">            TaskObj taskObj = new TaskObj();</span><br><span class="line">            taskObj.execFrame = 0.01f;//多少秒执行一次逻辑</span><br><span class="line">            taskObj.needTime = execTime;</span><br><span class="line">            taskObj.action = delegate ()</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Vector3 dir = transform2.transform.position - transform1.position;</span><br><span class="line">                Quaternion rot = Quaternion.LookRotation(dir);</span><br><span class="line">                float times = taskObj.currentTime / taskObj.needTime*1.0f;</span><br><span class="line">                print(&quot;times&quot; + times);</span><br><span class="line">                transform1.rotation = Quaternion.Lerp(transform1.rotation, rot, times);</span><br><span class="line">            &#125;;</span><br><span class="line">            return startTaskTest(taskObj);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第三方实现DOTWEEN</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Vector3  dir = gameObject.transform.position - Camera.main.transform.position;</span><br><span class="line">Quaternion rot = Quaternion.LookRotation(dir);</span><br><span class="line">Camera.main.transform.DORotate(new Vector3(rot.eulerAngles.x, rot.eulerAngles.y, rot.eulerAngles.z), 1.5f, RotateMode.Fast);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/b61732856113&quot;&gt;unity类似Lookat缓慢的转动摄像机朝向某个物体&lt;/a&gt;&lt;br&gt;文章字数：220,阅读全文大约需要1分钟&lt;br&gt;我尝试了各种写法发现都不对，从网上找到了正确的写
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>把一个对象的position赋值给另外一个对象的position会在这个物体的哪个位置呢？</title>
    <link href="https://lozn.top/2022/07/22/%E6%8A%8A%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84position%E8%B5%8B%E5%80%BC%E7%BB%99%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84position%E4%BC%9A%E5%9C%A8%E8%BF%99%E4%B8%AA%E7%89%A9%E4%BD%93%E7%9A%84%E5%93%AA%E4%B8%AA%E4%BD%8D%E7%BD%AE%E5%91%A2%EF%BC%9F/"/>
    <id>https://lozn.top/2022/07/22/把一个对象的position赋值给另外一个对象的position会在这个物体的哪个位置呢？/</id>
    <published>2022-07-22T03:48:37.000Z</published>
    <updated>2022-08-31T01:46:54.651Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/3ce3da49f753">把一个对象的position赋值给另外一个对象的position会在这个物体的哪个位置呢？</a><br>文章字数：124,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">operaObject.transform.position = this.transform.position;</span><br></pre></td></tr></table></figure><p>我分别对<code>operaObject</code>的x ,y ,z的缩放大小进行的调整，发现都会在这个物体的中心位置。</p><p>获取该物体宽高长方法。(不受缩放影响)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var size = transform.GetComponent&lt;Renderer&gt;().bounds.size;</span><br><span class="line">print(&quot;bound:&quot; + size+&quot;,&quot; + this.transform.position+&quot;,&quot; + operaObject.transform.position);</span><br></pre></td></tr></table></figure><p>那么为什么测试房子不行呢?房子使用此代码 中心点在地上</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-8183bf5fa7b0dadc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>切换为轴心点模式后验证了猜想。 - transfrom.position是以轴心开始的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/3ce3da49f753&quot;&gt;把一个对象的position赋值给另外一个对象的position会在这个物体的哪个位置呢？&lt;/a&gt;&lt;br&gt;文章字数：124,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figu
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity的SuperScrollView集成实现超级列表框表格案例踩坑详解</title>
    <link href="https://lozn.top/2022/07/21/unity%E7%9A%84SuperScrollView-%E9%9B%86%E6%88%90%E5%AE%9E%E7%8E%B0%E8%B6%85%E7%BA%A7%E5%88%97%E8%A1%A8%E6%A1%86%E8%A1%A8%E6%A0%BC%E6%A1%88%E4%BE%8B%E8%B8%A9%E5%9D%91%E8%AF%A6%E8%A7%A3/"/>
    <id>https://lozn.top/2022/07/21/unity的SuperScrollView-集成实现超级列表框表格案例踩坑详解/</id>
    <published>2022-07-21T09:44:45.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/518f4ed09e6b">unity的SuperScrollView集成实现超级列表框表格案例踩坑详解</a><br>文章字数：999,阅读全文大约需要3分钟<br>SuperScrollView 实现列表框<br>市场价格50美元，不便宜，我从网上找到了免费版本。<br><a href="https://download.csdn.net/download/u010042660/86247323">https://download.csdn.net/download/u010042660/86247323</a></p><p><a href="http://wjhsh.net/big-zhou-p-11266840.html">http://wjhsh.net/big-zhou-p-11266840.html</a><br><a href="https://blog.csdn.net/qq_40120946/article/details/101704791">https://blog.csdn.net/qq_40120946/article/details/101704791</a></p><p>本教程是基于csdn作者教程补充的，里面有一些细节我整好了，有几个地方不太对劲。不知道咋回事<br>导入进去里面的demo就可以打开食用。<br>item预制体实现<br>在画布下面添加空对象，然后添加Horizontal layout group,<br>添加 UI Student Info脚本，添加Loop List item2脚本<br>添加Image组件（用于选中的变色）</p><p>然后添加子节点， text , id ,name ,age ,grade,<br><img src="https://upload-images.jianshu.io/upload_images/2815884-55abcaf7d50313d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-3571a985edcb6450.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>做好了预制体之后，在画布下面添加scrollview</p><p>再给scrollview添加 Loop List view2<br>然后 展开给这个脚本挂载一个预制体 ，这里为MyItem,在接下来的代码会从缓存池里面取，也应该保持一致。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-b4bbd94de50d7ac8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>依次创建源代码<br><img src="https://upload-images.jianshu.io/upload_images/2815884-390d0d811493f46a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>StudentInfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">    public  class StudentInfo</span><br><span class="line">    &#123;</span><br><span class="line">    public String id &#123; get; set; &#125;</span><br><span class="line">    public String name &#123; get; set; &#125;</span><br><span class="line">    public String grade &#123; get; set; &#125;</span><br><span class="line">    public String score &#123; get; set; &#125;</span><br><span class="line">    public String age &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>StudentInfoMgr</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">public class StudentInfoMgr</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;StudentInfo&gt; mItemDataList = new List&lt;StudentInfo&gt;();</span><br><span class="line"></span><br><span class="line">    public StudentInfoMgr() &#123; &#125;</span><br><span class="line">    public StudentInfoMgr(List&lt;StudentInfo&gt; students)</span><br><span class="line">    &#123;</span><br><span class="line">        mItemDataList.Clear();</span><br><span class="line">        mItemDataList = students;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 获取数据总数量</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public int TotalItemCount</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            return mItemDataList.Count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// data数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public List&lt;StudentInfo&gt; MItemDataList</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            return mItemDataList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        set</span><br><span class="line">        &#123;</span><br><span class="line">            mItemDataList = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 查找指定数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;index&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public StudentInfo FindInfoByIndex(int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (index &lt; 0 || index &gt;= mItemDataList.Count)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        return mItemDataList[index];</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 查找指定数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public StudentInfo FindInfoById(string itemId)</span><br><span class="line">    &#123;</span><br><span class="line">        int count = mItemDataList.Count;</span><br><span class="line">        for (int i = 0; i &lt; count; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            if (mItemDataList[i].id == itemId)</span><br><span class="line">            &#123;</span><br><span class="line">                return mItemDataList[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 添加一组数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void AddOrUpdateInfo(StudentInfo item)</span><br><span class="line">    &#123;</span><br><span class="line">        var student = FindInfoById(item.id);</span><br><span class="line">        if (student == null)</span><br><span class="line">        &#123;</span><br><span class="line">            mItemDataList.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            student = item;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 添加多组数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void AddOrUpdateInfo(List&lt;StudentInfo&gt; items)</span><br><span class="line">    &#123;</span><br><span class="line">        if (items.Count &lt;= 0) return;</span><br><span class="line">        foreach (var info in items)</span><br><span class="line">        &#123;</span><br><span class="line">            var student = FindInfoById(info.id);</span><br><span class="line">            if (student == null)</span><br><span class="line">            &#123;</span><br><span class="line">                mItemDataList.Add(info);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                student = info;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///删除一组数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void RemoveInfo(StudentInfo item)</span><br><span class="line">    &#123;</span><br><span class="line">        var student = FindInfoById(item.id);</span><br><span class="line">        if (student == null) return;</span><br><span class="line">        mItemDataList.Remove(student);</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///删除一组数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void RemoveInfo(string id)</span><br><span class="line">    &#123;</span><br><span class="line">        var student = FindInfoById(id);</span><br><span class="line">        if (student == null) return;</span><br><span class="line">        mItemDataList.Remove(student);</span><br><span class="line">    &#125;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    ///删除所有数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;itemId&quot;&gt;&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public void RemoveInfos()</span><br><span class="line">    &#123;</span><br><span class="line">        if (mItemDataList.Count &lt;= 0) return;</span><br><span class="line">        mItemDataList.Clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SuperListBoxInit </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">using SuperScrollView;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class SuperListBoxInit : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public SuperScrollView.LoopListView2 mLoopListView;</span><br><span class="line">    public RectTransform Content;</span><br><span class="line"></span><br><span class="line">    private List&lt;StudentInfo&gt; studentInfos = new List&lt;StudentInfo&gt;();</span><br><span class="line">    private StudentInfoMgr infoMgr;</span><br><span class="line">    // Use this for initialization</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = 0; i &lt; 100; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            StudentInfo student = new StudentInfo</span><br><span class="line">            &#123;</span><br><span class="line">                id = (i + 100).ToString(),</span><br><span class="line">                name = &quot;zhang&quot; + i,</span><br><span class="line">                age = (i + 1).ToString(),</span><br><span class="line">                grade = &quot;超级&quot;,</span><br><span class="line">                score = i.ToString(),</span><br><span class="line">            &#125;;</span><br><span class="line">            studentInfos.Add(student);</span><br><span class="line">        &#125;</span><br><span class="line">        InitListView();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void InitListView()</span><br><span class="line">    &#123;</span><br><span class="line">        infoMgr = new StudentInfoMgr(studentInfos);</span><br><span class="line">        Debug.Log(infoMgr.TotalItemCount);</span><br><span class="line">        mLoopListView.InitListView(infoMgr.TotalItemCount, OmGetItemByIndex);</span><br><span class="line">        mLoopListView.MovePanelToItemIndex(infoMgr.TotalItemCount, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    private LoopListViewItem2 OmGetItemByIndex(LoopListView2 loopView, int index)</span><br><span class="line">    &#123;</span><br><span class="line">        if (index &lt; 0 || index &gt; infoMgr.TotalItemCount)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        var info = infoMgr.FindInfoByIndex(index);</span><br><span class="line">        if (info == null)</span><br><span class="line">        &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        /*2018.11以后MonoBehaviour不能  new  直接赋值就可*/</span><br><span class="line">    //LoopListViewItem2 item = new LoopListViewItem2();</span><br><span class="line">        var item = loopView.NewListViewItem(&quot;MyItem&quot;);</span><br><span class="line">        var itemInfo = item.GetComponent&lt;UStudentInfo&gt;();</span><br><span class="line">        itemInfo.Init(info, index);</span><br><span class="line">        itemInfo.OnClick += OnClick;</span><br><span class="line">        itemInfo.OnEnter += OnEnter;</span><br><span class="line">        itemInfo.OnExit += OnExit;</span><br><span class="line">        return item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void OnClick(UStudentInfo item)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;点击！！&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    private void OnEnter(UStudentInfo item)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;移入！！&quot;);</span><br><span class="line">        item.GetComponent&lt;Image&gt;().color = Color.clear;</span><br><span class="line">    &#125;</span><br><span class="line">    private void OnExit(UStudentInfo item)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(&quot;移出！！&quot;);</span><br><span class="line">        item.GetComponent&lt;Image&gt;().color = new Color(1, 1, 1, 130 / 255f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>UStudentInfo </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class UStudentInfo : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerClickHandler</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 实现点击事件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public Action&lt;UStudentInfo&gt; OnClick;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 实现点击事件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public Action&lt;UStudentInfo&gt; OnEnter;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 实现点击事件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public Action&lt;UStudentInfo&gt; OnExit;</span><br><span class="line"></span><br><span class="line">    private StudentInfo info;</span><br><span class="line">    private int index;</span><br><span class="line">/*    [SerializeField]</span><br><span class="line">    private RectTransform item;*/</span><br><span class="line"></span><br><span class="line">    public void Init(StudentInfo info, int index)</span><br><span class="line">    &#123;</span><br><span class="line">        this.info = info;</span><br><span class="line">        this.index = index;</span><br><span class="line">        InitData();</span><br><span class="line">    &#125;</span><br><span class="line">    private void InitData()</span><br><span class="line">    &#123;</span><br><span class="line">       this.gameObject.transform.GetChild(0).GetComponent&lt;Text&gt;().text = info.id;</span><br><span class="line">       this.gameObject.transform.GetChild(1).GetComponent&lt;Text&gt;().text = info.name;</span><br><span class="line">       this.gameObject.transform.GetChild(2).GetComponent&lt;Text&gt;().text = info.age;</span><br><span class="line">       this.gameObject.transform.GetChild(3).GetComponent&lt;Text&gt;().text = info.grade;</span><br><span class="line">       this.gameObject.transform.GetChild(4).GetComponent&lt;Text&gt;().text = info.score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void IPointerClickHandler.OnPointerClick(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        if (this.gameObject != null) OnClick(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        if (this.gameObject != null) OnEnter(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void IPointerExitHandler.OnPointerExit(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        if (this.gameObject != null) OnExit(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中UStudentInfo挂载给预制体 item ,<br>SuperListBoxInit是用来初始化的，可以挂载给相机</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-d562eff0c31c5966.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>这个脚本 的listview 就传递 scrollview,<br>content 则把scrllview的content拖动进去。</p><p>另外标题列 也是用预制体做的，不过把脚本解除了。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-78d18d0895bb1c5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>上图还是有一点点没对齐，这可能是因为滑块的空间导致的问题。</p><p>其实主要问题还是 界面的操作问题，我这里再弄详细一点的截图<br>初始化代码挂载<br><img src="https://upload-images.jianshu.io/upload_images/2815884-68d1df020fdc3129.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>初始化代码中的参数拖拽<br><img src="https://upload-images.jianshu.io/upload_images/2815884-bcf5bfffa53fe75e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>预制体挂载<br><img src="https://upload-images.jianshu.io/upload_images/2815884-be3cd0895274fa5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>scrllview挂载<br><img src="https://upload-images.jianshu.io/upload_images/2815884-e8af253141c4c009.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/518f4ed09e6b&quot;&gt;unity的SuperScrollView集成实现超级列表框表格案例踩坑详解&lt;/a&gt;&lt;br&gt;文章字数：999,阅读全文大约需要3分钟&lt;br&gt;SuperScrollVi
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity控制物体前后左右上下，前后旋转左右旋转代码</title>
    <link href="https://lozn.top/2022/07/21/unity-%E6%8E%A7%E5%88%B6%E7%89%A9%E4%BD%93%E5%89%8D%E5%90%8E%E5%B7%A6%E5%8F%B3%E4%B8%8A%E4%B8%8B-%EF%BC%8C%E5%89%8D%E5%90%8E%E6%97%8B%E8%BD%AC-%E5%B7%A6%E5%8F%B3%E6%97%8B%E8%BD%AC%E4%BB%A3%E7%A0%81/"/>
    <id>https://lozn.top/2022/07/21/unity-控制物体前后左右上下-，前后旋转-左右旋转代码/</id>
    <published>2022-07-21T01:00:45.000Z</published>
    <updated>2022-08-31T01:46:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/1cd26eb1dce4">unity控制物体前后左右上下，前后旋转左右旋转代码</a><br>文章字数：68,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    this.transform.Translate(Vector3.right * Input.GetAxisRaw(&quot;Horizontal&quot;) * speed * Time.deltaTime);</span><br><span class="line">    this.transform.Translate(Vector3.forward * Input.GetAxisRaw(&quot;Vertical&quot;) * speed * Time.deltaTime);</span><br><span class="line">//    Debug.LogWarning(&quot;FIRE&quot;+ Input.GetAxisRaw(&quot;Mouse Y&quot;)+&quot;,&quot;+ Input.GetAxisRaw(&quot;Vertical&quot;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if (Input.GetKey(KeyCode.Q))</span><br><span class="line">    &#123;</span><br><span class="line">        this.transform.Translate(Vector3.up * speed * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (Input.GetKey(KeyCode.E))</span><br><span class="line">    &#123;</span><br><span class="line">        this.transform.Translate(Vector3.down * speed * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (Input.GetKey(KeyCode.Z))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        this.transform.Rotate(Vector3.up *1 * rotateSpeed * Time.deltaTime);//围绕y轴，旋转</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (Input.GetKey(KeyCode.X))</span><br><span class="line">    &#123;</span><br><span class="line">        this.transform.Rotate(Vector3.up * -1 * rotateSpeed * Time.deltaTime);//围绕y轴，旋转</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (Input.GetKey(KeyCode.C))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        this.transform.Rotate(Vector3.right * 1 * rotateSpeed * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (Input.GetKey(KeyCode.V))</span><br><span class="line">    &#123;</span><br><span class="line">        this.transform.Rotate(Vector3.right * -1 * rotateSpeed * Time.deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/1cd26eb1dce4&quot;&gt;unity控制物体前后左右上下，前后旋转左右旋转代码&lt;/a&gt;&lt;br&gt;文章字数：68,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity进阶魔改toggle教程实现选中修改文字颜色原创</title>
    <link href="https://lozn.top/2022/07/20/%5Bunity%E8%BF%9B%E9%98%B6%5D%E9%AD%94%E6%94%B9toggle%E6%95%99%E7%A8%8B%E5%AE%9E%E7%8E%B0%E9%80%89%E4%B8%AD%E4%BF%AE%E6%94%B9%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2%5B%E5%8E%9F%E5%88%9B%5D/"/>
    <id>https://lozn.top/2022/07/20/[unity进阶]魔改toggle教程实现选中修改文字颜色[原创]/</id>
    <published>2022-07-20T09:05:04.000Z</published>
    <updated>2022-08-31T01:46:54.611Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/ba27fd5528ff">unity进阶魔改toggle教程实现选中修改文字颜色原创</a><br>文章字数：641,阅读全文大约需要2分钟<br>首先，我们要魔改后实现如下效果<br><img src="https://upload-images.jianshu.io/upload_images/2815884-8c41fb4ba6e26d5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>默认的样式可能不适合正常的场景，<br>默认的toggle在层级视图中会包含如下组件，Background,Checkmark,Label</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-6a1efb1d013cf7ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在检查器中可以看到多了一个Toggle,也就是说要自定义集成toggle则需要继承Toggle实现。<br>并且目标图形已经指定好了Background， 代表了未选中颜色<br>checkmark代表选中颜色，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-30d42203f7354d04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以通过清除图形选择none,只设置颜色<br><img src="https://upload-images.jianshu.io/upload_images/2815884-33efbd4695b19445.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这里能实现上面的样子，但是文字颜色却无法修改，修改文字颜色方式也多种多样，这里采用干掉默认的toggle然后替换成自己的toggle, </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">namespace UnityEngine.UI</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public class ToggleExtend : Toggle</span><br><span class="line">    &#123;</span><br><span class="line">        /*        public int colorInt2;</span><br><span class="line">                [Header(&quot;TextColor&quot;)]*/</span><br><span class="line">        [SerializeField]</span><br><span class="line">        [Tooltip(&quot;checkText&quot;)]</span><br><span class="line">        public Text text;</span><br><span class="line">        [SerializeField]</span><br><span class="line">        [Tooltip(&quot;textCheckColor&quot;)]</span><br><span class="line">        private Color textCheckColor;</span><br><span class="line">        [Tooltip(&quot;unCheckColor default use current color&quot;)]</span><br><span class="line">        public Color normalColor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        private void OnValueChange(bool isOn)</span><br><span class="line">        &#123;</span><br><span class="line">            print(&quot;oncheck ison:&quot; + isOn);</span><br><span class="line">            //这里根据isOn做修改</span><br><span class="line">            if (textCheckColor != null)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                text.color = isOn ? textCheckColor : normalColor;// textCheckColor : normalColor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        protected override void Start()</span><br><span class="line">        &#123;</span><br><span class="line">            base.Start();</span><br><span class="line">            if (this.text != null)</span><br><span class="line">            &#123;</span><br><span class="line">                if (normalColor == null)</span><br><span class="line">                &#123;</span><br><span class="line">                    this.normalColor = text.color;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                this.onValueChanged.AddListener(OnValueChange);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            /*  this.onValueChanged.AddListener(delegate &#123;</span><br><span class="line">              &#125;);*/</span><br><span class="line">            //this.group.</span><br><span class="line">            //ToggleValueChanged(m_Toggle);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        protected override void OnDestroy()</span><br><span class="line">        &#123;</span><br><span class="line">            onValueChanged.RemoveListener(OnValueChange);</span><br><span class="line">            base.OnDestroy();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写完之后，替换之前的toggle,变成了如下<br><img src="https://upload-images.jianshu.io/upload_images/2815884-c75b57b38396695f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>但是public和序列化并没有显示，原因是编辑器识别到并非继承Mono的情况下默认不会显示自定义的字段？？</p><p>新建一个类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using UnityEditor;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[CustomEditor(typeof(ToggleExtend), false)]</span><br><span class="line">public class MyToggleEditor : Editor</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在注解这里指定<code>ToggleExtend</code>就ok了，<br>然后再一次替换 ， 其中源图像就是 checkmark对应，<br>目标图像，则是把Background拖动过去。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1a8fb2d864aac465.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>另外补充一点，<br>normalColor 正常文本的颜色 默认选中项目必须设置，其他的可不用设置，会自动识别之前并没有设置好的，这和其它开发不一样，但是也只能这么理解。<br>我在写代码中发现一个问题，代码设置的红色，运行之前编辑器显示的并非红色，运行后就把编辑器变成红色了，无语的是退出编辑器依然是红色，这。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/ba27fd5528ff&quot;&gt;unity进阶魔改toggle教程实现选中修改文字颜色原创&lt;/a&gt;&lt;br&gt;文章字数：641,阅读全文大约需要2分钟&lt;br&gt;首先，我们要魔改后实现如下效果&lt;br&gt;&lt;im
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>关于代码添加ui控件代码修改recttransform的问题探索</title>
    <link href="https://lozn.top/2022/07/19/%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%A0%81%E6%B7%BB%E5%8A%A0ui%E6%8E%A7%E4%BB%B6%E4%BB%A3%E7%A0%81%E4%BF%AE%E6%94%B9recttransform%E7%9A%84%E9%97%AE%E9%A2%98%E6%8E%A2%E7%B4%A2/"/>
    <id>https://lozn.top/2022/07/19/关于代码添加ui控件代码修改recttransform的问题探索/</id>
    <published>2022-07-19T09:33:29.000Z</published>
    <updated>2022-08-31T01:46:54.643Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/009d09a4719e">关于代码添加ui控件代码修改recttransform的问题探索</a><br>文章字数：517,阅读全文大约需要2分钟<br>问题起因：<br>我通过代码添加了预制体发现位置不对，看不见了，通过检查器看到x 和y为-115,-351,发现修改pos没有任何作用<br>![U7JZ{0<del>OM61W&#96;J_5M7DKVC3.png](<a href="https://upload-images.jianshu.io/upload_images/2815884-32f89c54c4e293eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240">https://upload-images.jianshu.io/upload_images/2815884-32f89c54c4e293eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240</a>)<br>从网上找到相关修改的代码<br><a href="https://www.csdn.net/tags/NtTakg1sMzgzNzgtYmxvZwO0O0OO0O0O.html">https://www.csdn.net/tags/NtTakg1sMzgzNzgtYmxvZwO0O0OO0O0O.html</a><br>但是发现并没有效果，我当时走火入魔不认为是修改anchoredPosition3D实现的，<br>于是我把各种代码都加进去了，而 anchoredPosition3D正确的代码我则放到了前面，后面又一次修改是无效的<br>![4E)S9MB0</del>XO4KROL38_8)2W.png](<a href="https://upload-images.jianshu.io/upload_images/2815884-f4b2e81c233e0f18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240">https://upload-images.jianshu.io/upload_images/2815884-f4b2e81c233e0f18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240</a>)<br>结果还是没有作用，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-559b8ae1b377f878.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-54e8f0d640139c73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anchoredPosition:(-115.00, -351.87, 0.00),pos:(0.00, 0.00, 0.00),offset:(-165.00, -401.87),(-165.00, -401.87),auchor:(0.50, 1.00),(0.50, 1.00)</span><br><span class="line"></span><br><span class="line">anchoredPosition1:(0.00, 0.00, 0.00),pos:(93.75, 286.84, 0.00),offset:(-50.00, -50.00),(-50.00, -50.00),auchor:(0.50, 1.00),(0.50, 1.00)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看出修改anchorposition会导致 offset,pos等全部发生变化，</p><p>所以 总结：</p><p>修改anchorPosition就可以实现 位置x y的修改 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GameObject newObj = Instantiate(Resources.Load(&quot;MyText&quot;)) as GameObject;//加载prefab</span><br><span class="line">        print(&quot;预制体&quot;+newObj);</span><br><span class="line">        GameObject gameObjectTemp=GameObject.Find(&quot;Canvas/PanelLeft/BottomLeft&quot;);</span><br><span class="line">        newObj.transform.parent = gameObjectTemp.transform;//</span><br><span class="line">        newObj.GetComponent&lt;Text&gt;().text = gameObject.name + &quot;fffffffffffffff&quot;;</span><br><span class="line">        RectTransform rectTransform= newObj.GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        print(&quot;anchoredPosition:&quot; + rectTransform.anchoredPosition3D + &quot;,pos:&quot; + rectTransform.position + &quot;,offset:&quot; + rectTransform.offsetMin + &quot;,&quot; + rectTransform.offsetMin + &quot;,auchor:&quot; + rectTransform.anchorMin + &quot;,&quot; + rectTransform.anchorMax);</span><br><span class="line">        rectTransform.anchoredPosition3D= new Vector3(0,0,0);</span><br><span class="line">        print(&quot;anchoredPosition1:&quot; + rectTransform.anchoredPosition3D + &quot;,pos:&quot; + rectTransform.position + &quot;,offset:&quot; + rectTransform.offsetMin + &quot;,&quot; + rectTransform.offsetMin + &quot;,auchor:&quot; + rectTransform.anchorMin + &quot;,&quot; + rectTransform.anchorMax);</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>上面的MyText是预制体是一个text，并且放在Assets&#x2F;Resources下面<br>我的需求就是把这个文本添加到 左边面板里面<br>另外 修改<code>/rectTransform.SetInsetAndSizeFromParentEdge(RectTransform.Edge.Top,0, rectTransform.sizeDelta.y);</code><br>可以实现顶部，但是只有这个代码还无法做到居中，</p><p>这个预制体目前设置的是顶部居中的，<br>如果预制体不是顶部的那么就一直在中间显示了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/009d09a4719e&quot;&gt;关于代码添加ui控件代码修改recttransform的问题探索&lt;/a&gt;&lt;br&gt;文章字数：517,阅读全文大约需要2分钟&lt;br&gt;问题起因：&lt;br&gt;我通过代码添加了预制
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
</feed>
