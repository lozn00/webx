<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>情迁博客</title>
  
  <subtitle>情迁美好时光追忆 执拗如我 执着如我,纠结如我,虽然无法活出最好的自己,但是总算活出一个不一样的自己!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lozn.top/"/>
  <updated>2023-03-16T08:35:11.416Z</updated>
  <id>https://lozn.top/</id>
  
  <author>
    <name>情随事迁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【原创】unityxchartbarringpie等预制体添加数据实现</title>
    <link href="https://lozn.top/2023/02/23/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91unity-xchart-bar,ring-,pie%E7%AD%89%E9%A2%84%E5%88%B6%E4%BD%93%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E5%AE%9E%E7%8E%B0/"/>
    <id>https://lozn.top/2023/02/23/【原创】unity-xchart-bar,ring-,pie等预制体添加数据实现/</id>
    <published>2023-02-23T09:09:22.000Z</published>
    <updated>2023-03-16T08:35:11.416Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/214e39742aed">【原创】unityxchartbarringpie等预制体添加数据实现</a><br>文章字数：216,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using XCharts.Runtime;</span><br><span class="line"></span><br><span class="line">public class TestChart : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public GameObject uiGameObject;</span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        //testMultiBarChart();</span><br><span class="line">        //testMultiLineChart();</span><br><span class="line">        testRingCHart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testPieChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/piechart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        PieChart baseChart = chartGameObject.GetComponent&lt;PieChart&gt;();</span><br><span class="line">        PieChart pieChart = (PieChart)baseChart;</span><br><span class="line">        pieChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line">        pieChart.ClearData();</span><br><span class="line">        pieChart.AddData(0, 10, &quot;它&quot;);</span><br><span class="line">        pieChart.AddData(0, 60, &quot;我&quot;);</span><br><span class="line">        pieChart.AddData(0, 30, &quot;你&quot;);</span><br><span class="line">        pieChart.RefreshChart();</span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testRingCHart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/ringchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        RingChart baseChart = chartGameObject.GetComponent&lt;RingChart&gt;();</span><br><span class="line">        RingChart ringchart = (RingChart)baseChart;</span><br><span class="line">        ringchart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line">        ringchart.ClearData();</span><br><span class="line">        //ringchart.AddData(0, 30, &quot;描述&quot;);</span><br><span class="line">        ringchart.AddData(0, 51,100, &quot;描述&quot;);</span><br><span class="line">        ringchart.RefreshChart();</span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testBarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/barchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BarChart baseChart = chartGameObject.GetComponent&lt;BarChart&gt;();</span><br><span class="line">        BarChart barChart = (BarChart)baseChart;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Legend&gt;().show = false;</span><br><span class="line"></span><br><span class="line">        var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line">/*        xAxis.type = Axis.AxisType.Category;</span><br><span class="line">        yAxis.type = Axis.AxisType.Value;*/</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 10;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line">        Bar serie = barChart.AddSerie&lt;Bar&gt;(&quot;Bar1&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            barChart.AddXAxisData(&quot;x&quot; + (i + 1));</span><br><span class="line">            barChart.AddData(0, UnityEngine.Random.Range(30, 90));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void testMultiBarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/barchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BarChart baseChart = chartGameObject.GetComponent&lt;BarChart&gt;();</span><br><span class="line">        BarChart barChart = (BarChart)baseChart;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">        var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line">/*        xAxis.type = Axis.AxisType.Category;</span><br><span class="line">        yAxis.type = Axis.AxisType.Value;*/</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 0;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        Bar serie = barChart.AddSerie&lt;Bar&gt;(&quot;Bar1&quot;);</span><br><span class="line">        Bar serie1 = barChart.AddSerie&lt;Bar&gt;(&quot;Bar2&quot;);</span><br><span class="line">        Bar serie2 = barChart.AddSerie&lt;Bar&gt;(&quot;Bar3&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 10; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            barChart.AddXAxisData(&quot;a&quot; + (i + 1),0);</span><br><span class="line">            barChart.AddData(0, UnityEngine.Random.Range(30, 90));       </span><br><span class="line">            barChart.AddData(1, UnityEngine.Random.Range(30, 90));</span><br><span class="line">            barChart.AddData(2, UnityEngine.Random.Range(30, 90));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line">    private void testMultiLineChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/linechart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BaseChart baseChart = chartGameObject.GetComponent&lt;LineChart&gt;();</span><br><span class="line">        LineChart lineChart = (LineChart)baseChart;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">        var xAxis = lineChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = lineChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 0;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        lineChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        Line serie = lineChart.AddSerie&lt;Line&gt;(&quot;Line1&quot;);</span><br><span class="line">        Line serie1 = lineChart.AddSerie&lt;Line&gt;(&quot;Line2&quot;);</span><br><span class="line">        Line serie2 = lineChart.AddSerie&lt;Line&gt;(&quot;Line3&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 10; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            lineChart.AddXAxisData(&quot;a&quot; + (i + 1),0);</span><br><span class="line">            lineChart.AddData(0, UnityEngine.Random.Range(30, 90));       </span><br><span class="line">            lineChart.AddData(1, UnityEngine.Random.Range(30, 90));</span><br><span class="line">            lineChart.AddData(2, UnityEngine.Random.Range(30, 90));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>要实现折线图和 柱状图，则当前组件应该是 linechart,然后添加serice<bar>即可实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">if (chartType == IDataType.splinechart)</span><br><span class="line">       &#123;</span><br><span class="line">           baseChart = chartGameObject.GetComponent&lt;LineChart&gt;();</span><br><span class="line">           LineChart barChart = (LineChart)baseChart;</span><br><span class="line"></span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">           var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">           var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">           xAxis.show = true;</span><br><span class="line">           yAxis.show = true;</span><br><span class="line"></span><br><span class="line">           xAxis.splitNumber = 10;</span><br><span class="line">           xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">           barChart.RemoveData();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           JArray xtitle = JSONUtil.getJSONArrayValue(view.detail, &quot;xtitle&quot;, null).returnvalue;</span><br><span class="line">           JArray datas = JSONUtil.getJSONArrayValue(view.detail, &quot;datas&quot;, null).returnvalue;</span><br><span class="line">           if (xtitle != null &amp;&amp; datas != null)</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               int bartypeCount = datas.Count;</span><br><span class="line">               for (int j = 0; j &lt; bartypeCount; j++)</span><br><span class="line">               &#123;</span><br><span class="line">                   JObject currentBar = datas[j] as JObject;</span><br><span class="line"></span><br><span class="line">                   int type = JSONUtil.getIntValue(currentBar, &quot;type&quot;, 0).returnvalue;</span><br><span class="line">                   if (type == 0)</span><br><span class="line">                   &#123;</span><br><span class="line">                       barChart.AddSerie&lt;Bar&gt;(currentBar[&quot;title&quot;].ToString());</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line">                   else if (type == 1)</span><br><span class="line">                   &#123;</span><br><span class="line">                       barChart.AddSerie&lt;Line&gt;(currentBar[&quot;title&quot;].ToString());</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               for (int i = 0; i &lt; xtitle.Count; i++)</span><br><span class="line">               &#123;</span><br><span class="line">                   String title = xtitle[i].ToString();</span><br><span class="line"></span><br><span class="line">                   barChart.AddXAxisData(title, 0);</span><br><span class="line"></span><br><span class="line">                   for (int j = 0; j &lt; bartypeCount; j++)</span><br><span class="line">                   &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                       JObject currentBar = datas[j] as JObject;</span><br><span class="line">                       JArray values = currentBar[&quot;value&quot;] as JArray;</span><br><span class="line">                       //currentBar[&quot;title&quot;]</span><br><span class="line">                       barChart.AddData(j, values == null || values.Count - 1 &lt; i ? 0 : ParseUtil.parseFloat(values[i]));</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&quot;detail&quot;:&#123;</span><br><span class="line">&quot;xtitle&quot;:[&quot;时段1&quot;,&quot;时段2&quot;,&quot;时段3&quot;,&quot;时段4&quot;,&quot;时段5&quot;],</span><br><span class="line">&quot;datas&quot;:[</span><br><span class="line">&#123;</span><br><span class="line">&quot;title&quot;:&quot;a产能&quot;,</span><br><span class="line">&quot;value&quot;:[5,9,13,8,22,3]</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;title&quot;:&quot;b产能&quot;,</span><br><span class="line"></span><br><span class="line">&quot;value&quot;:[15,4,8,7,44]</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;title&quot;:&quot;平均&quot;,</span><br><span class="line">&quot;type&quot;:1,</span><br><span class="line">&quot;value&quot;:[35,39,3,83,6]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;title&quot;: &quot;时段产能&quot;,</span><br><span class="line">&quot;type&quot;: &quot;splinechart&quot;,</span><br><span class="line">&quot;x&quot;: 0,</span><br><span class="line">&quot;y&quot;: 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/214e39742aed&quot;&gt;【原创】unityxchartbarringpie等预制体添加数据实现&lt;/a&gt;&lt;br&gt;文章字数：216,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>自定义组件实现对话框与自定义模板实现的比较</title>
    <link href="https://lozn.top/2023/01/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%AF%9D%E6%A1%86%E4%B8%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%AF%94%E8%BE%83/"/>
    <id>https://lozn.top/2023/01/22/自定义组件实现对话框与自定义模板实现的比较/</id>
    <published>2023-01-22T14:12:28.000Z</published>
    <updated>2023-03-16T08:35:11.428Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/cb3f53451652">自定义组件实现对话框与自定义模板实现的比较</a><br>文章字数：693,阅读全文大约需要2分钟<br>自定义模板，需要导入太多配置了，并不能复用逻辑，只能复用wxml,wxss都无法复用<br>控制对话框显示隐藏则是使用 <code>display:flex/none</code>进行切换，每一个功能都需要处理。</p><p>最后我的强迫症让我决定改成用组件实现</p><p>在根目录新建components文件夹</p><p>然后新建 <code>compnents</code>命名为searchdialog<br>新建好之后在自己的页面 json修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;usingComponents&quot;: &#123;</span><br><span class="line">    &quot;searchdialog&quot;: &quot;/components/searchdialog&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>,而<code>searchdialog</code>这个名字可以随便定义，这将决定了在wxml里面的命名。</p><p>···</p><p>wxml里面写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;searchdialog id=&#x27;dialog&#x27;&gt;</span><br><span class="line">  &lt;/searchdialog&gt;</span><br></pre></td></tr></table></figure><p>发现正常的显示了，和模板差不多。。</p><p>完整代码<br>包含了类似slot,也就是 自定义view里面放入view,要放入哪里，哪个节点 则需要再模板的wxml里面定义<code>slot</code><br> 多个节点也是支持的，这里不演示。<br>组件wxml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;dialog-root-wrap&quot; style=&quot;display:&#123;&#123;showSearchDialog?&#x27;flex&#x27;:&#x27;none&#x27;&#125;&#125;;&quot;&gt;</span><br><span class="line">    &lt;view class=&quot;dilog-root&quot; bindtap=&quot;dismissDialog&quot;&gt;</span><br><span class="line">        &lt;view class=&quot;dialog-content&quot; style=&quot;border-radius: 15rpx;min-width:60%;min-height:25%;&quot; catchtap=&quot;_dialogAeraClick&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;vertical&quot;&gt;</span><br><span class="line">                &lt;view class=&quot;input_wrap_style&quot; id=&quot;keyword&quot;&gt;</span><br><span class="line">                    &lt;input class=&quot;myinput&quot; password type=&quot;text&quot; placeholder=&quot;输入关键词&quot; bindinput=&quot;bindKeywordInput&quot; value=&quot;&#123;&#123;keyword&#125;&#125;&quot; /&gt;</span><br><span class="line">                &lt;/view&gt;</span><br><span class="line">                &lt;picker style=&quot;margin-top: 20rpx;&quot; mode=&quot;date&quot; value=&quot;&#123;&#123;startdate&#125;&#125;&quot; start=&quot;&#123;&#123;initStartDate&#125;&#125;&quot; end=&quot;&#123;&#123;initEndDate&#125;&#125;&quot; bindchange=&quot;_changeDate&quot; data-value=&quot;0&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;tui-picker-detail&quot;&gt;</span><br><span class="line">                        开始时间: &#123;&#123;startdate&#125;&#125;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/picker&gt;</span><br><span class="line">                &lt;picker style=&quot;margin-top: 20rpx;&quot; mode=&quot;date&quot; value=&quot;&#123;&#123;enddate&#125;&#125;&quot; start=&quot;&#123;&#123;initStartDate&#125;&#125;&quot; end=&quot;&#123;&#123;initEndDate&#125;&#125;&quot; bindchange=&quot;_changeDate&quot; data-value=&quot;1&quot;&gt;</span><br><span class="line">                    &lt;view class=&quot;tui-picker-detail&quot;&gt;</span><br><span class="line">                        结束时间: &#123;&#123;enddate&#125;&#125;</span><br><span class="line">                    &lt;/view&gt;</span><br><span class="line">                &lt;/picker&gt;</span><br><span class="line">                &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">                &lt;button id=&quot;search&quot; catchtap=&quot;searchClick&quot; type=&quot;primary&quot; style=&quot;margin-top: 30rpx;&quot;&gt;&#123;&#123;confirmSearchText&#125;&#125;&lt;/button&gt;</span><br><span class="line">            &lt;/view&gt;</span><br><span class="line">        &lt;/view&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组件 ts</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// component/searchdialog.ts</span><br><span class="line">import * as datefns from &#x27;date-fns&#x27;;</span><br><span class="line">Component(&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 组件的属性列表</span><br><span class="line">     */</span><br><span class="line">    properties: &#123;</span><br><span class="line">        confirmSearchText: &#123;</span><br><span class="line">            type: String,</span><br><span class="line">            value: &#x27;开始搜索&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    lifetimes: &#123;</span><br><span class="line">        // 生命周期函数，可以为函数，或一个在methods段中定义的方法名</span><br><span class="line">        created: function () &#123; &#125;,//无在组件实例刚刚被创建时执行1.6.3</span><br><span class="line">        attached: function () &#123; &#125;,//无在组件实例进入页面节点树时执行1.6.3</span><br><span class="line">        ready: function () &#123;</span><br><span class="line">            const date = new Date();</span><br><span class="line">            var lastMonth: any = datefns.subMonths(date, 1);</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                initStartDate: datefns.format(datefns.subYears(date, 10), &quot;yyyy-MM-dd&quot;),</span><br><span class="line">                initEndDate: datefns.format(date, &quot;yyyy-MM-dd&quot;),</span><br><span class="line">                startdate: datefns.format(lastMonth, &quot;yyyy-MM-dd&quot;),</span><br><span class="line">                enddate: datefns.format(date, &quot;yyyy-MM-dd&quot;),</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;,//无在组件在视图层布局完成后执行1.6.3</span><br><span class="line">        moved: function () &#123; &#125;,//无在组件实例被移动到节点树另一个位置时执行1.6.3</span><br><span class="line">        detached: function () &#123; &#125;,//无在组件实例被从页面节点树移除时执行1.6.3</span><br><span class="line">        error: function () &#123; &#125;,//Object Error每当组件方法抛出错误时执行2.4.1</span><br><span class="line">    &#125;,</span><br><span class="line">    /* </span><br><span class="line">        // 生命周期函数，可以为函数，或一个在methods段中定义的方法名</span><br><span class="line">        attached: function () &#123; &#125;, // 此处attached的声明会被lifetimes字段中的声明覆盖</span><br><span class="line">        ready: function () &#123; &#125;, */</span><br><span class="line"></span><br><span class="line">    pageLifetimes: &#123;</span><br><span class="line">        // 组件所在页面的生命周期函数</span><br><span class="line">        show: function () &#123; &#125;,</span><br><span class="line">        hide: function () &#123; &#125;,</span><br><span class="line">        resize: function () &#123; &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 组件的初始数据</span><br><span class="line">     */</span><br><span class="line">    data: &#123;</span><br><span class="line">        startdate: &quot;&quot;,</span><br><span class="line">        enddate: &quot;&quot;,</span><br><span class="line">        initStartDate: &quot;&quot;,</span><br><span class="line">        initEndDate: &quot;&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 组件的方法列表</span><br><span class="line">     */</span><br><span class="line">    methods: &#123;</span><br><span class="line">        _dialogAeraClick: function () &#123;</span><br><span class="line">            console.debug(&quot;用于阻止点击对话框其它内容也导致隐藏的问题&quot;);</span><br><span class="line">        &#125;,</span><br><span class="line">        _changeDate(e: any) &#123;</span><br><span class="line">            console.debug(e);</span><br><span class="line">            if (e.currentTarget.dataset.value == &quot;0&quot;) &#123;</span><br><span class="line">                this.setData(&#123; startdate: e.detail.value &#125;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                this.setData(&#123; enddate: e.detail.value &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        /*</span><br><span class="line">        * 公有方法</span><br><span class="line">        */</span><br><span class="line">        dismissDialog: function () &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                showSearchDialog: false</span><br><span class="line">            &#125;)</span><br><span class="line">            this.triggerEvent(&quot;onDismissDialog&quot;)</span><br><span class="line">            console.debug(&quot;dismissDialogclick&quot;);</span><br><span class="line">        &#125;,</span><br><span class="line">        showDialog: function () &#123;</span><br><span class="line">            this.setData(&#123;</span><br><span class="line">                showSearchDialog: true</span><br><span class="line">            &#125;)</span><br><span class="line">            this.triggerEvent(&quot;onShowDialog&quot;)</span><br><span class="line">        &#125;,</span><br><span class="line">        searchClick: function () &#123;</span><br><span class="line">            console.debug(&quot;onSearch&quot;);</span><br><span class="line">            var that = this;</span><br><span class="line">            this.triggerEvent(&quot;onSearchClick&quot;, &#123; startdate: that.data.startdate, enddate: that.data.enddate &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>page中的实现</p><p>···<br> onShowDialog(e: any) {<br>        console.debug(“收到了组件传递的onShowDialog事件 “);<br>    },<br>    onDismissDialog(e: any) {<br>        console.debug(“收到了组件传递的onDismissDialog事件 “);<br>    },<br>    requestShowDialog() {<br>        var dialog &#x3D; this.selectComponent(“#dialog”);<br>        dialog.showDialog();<br>    },<br>    onSearchClick(e: any) {<br>        console.debug(“收到了组件的onSearchClick “, e, e.detail.startdate, e.detail.enddate);<br>    },</p><p>···<br>page wxml的引用参数和定义事件监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;searchdialog id=&#x27;dialog&#x27; confirmSearchText=&#x27;确认搜索&#x27; bind:onDismissDialog=&quot;onDismissDialog&quot; bind:onShowDialog=&quot;onShowDialog&quot; bind:onSearchClick=&quot;onSearchClick&quot;&gt;</span><br><span class="line">&lt;/searchdialog&gt;</span><br></pre></td></tr></table></figure><p>原理就是再组件的事件里面使用<code>   this.triggerEvent(&quot;onShowDialog&quot;)</code>分发事件，<br>在page wxml使用<code>bind</code>即可， 对于多个参数的接受</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.triggerEvent(&quot;onSearchClick&quot;, &#123; startdate: that.data.startdate, enddate: that.data.enddate &#125;)</span><br></pre></td></tr></table></figure><p>page中的定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onSearchClick(e: any) &#123;</span><br><span class="line">    console.debug(&quot;收到了组件的onSearchClick &quot;, e, e.detail.startdate, e.detail.enddate);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>到这里已经实现完了对话框的弹出监听，以及搜索接受参数，已经page界面控制显示隐藏 </p><p><code>properties</code>为对外暴露的字段，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/cb3f53451652&quot;&gt;自定义组件实现对话框与自定义模板实现的比较&lt;/a&gt;&lt;br&gt;文章字数：693,阅读全文大约需要2分钟&lt;br&gt;自定义模板，需要导入太多配置了，并不能复用逻辑，只能复用wx
      
    
    </summary>
    
      <category term="小程序技巧" scheme="https://lozn.top/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="小程序技巧" scheme="https://lozn.top/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>fridahooknative地址的计算</title>
    <link href="https://lozn.top/2022/10/15/frida-hook-native-%E5%9C%B0%E5%9D%80%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <id>https://lozn.top/2022/10/15/frida-hook-native-地址的计算/</id>
    <published>2022-10-15T10:04:58.000Z</published>
    <updated>2023-03-16T08:35:11.404Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/34dad65a29b2">fridahooknative地址的计算</a><br>文章字数：141,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps |grep cn.qssq666.testjni </span><br><span class="line">//第二个数字为进程</span><br></pre></td></tr></table></figure><p>根据进程定位so 的相对地址 然后加上so的基地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/pid/maps|grep libmylib.so</span><br><span class="line">//第一个列表的开始就是</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f680099c92e73940.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xxx"></p><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//find app class. frida -U -l hookc2.js cn.qssq666.testjni</span><br><span class="line">//74A1D79470  = ida的基地址+ </span><br><span class="line">// cat /proc/23912/maps |grep libmylib.so的地址</span><br><span class="line"></span><br><span class="line">setImmediate(function() &#123;</span><br><span class="line">console.log(&quot;[*] Starting script&quot;);</span><br><span class="line">Java.perform(function () &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//****************************************************************************//</span><br><span class="line"></span><br><span class="line">//********************************hook native*********************************//</span><br><span class="line">//    public static native String getMagic(Context context, int i);</span><br><span class="line">//hook export function</span><br><span class="line">var nativePointer = Module.findExportByName(&quot;libmylib.so&quot; , &quot;Java_cn_qssq666_testjni_MainActivity_calcAdd&quot;);</span><br><span class="line">send(&quot;method pointer:&quot;+nativePointer);</span><br><span class="line">//create JNIEnv.NewStringUTF Function</span><br><span class="line">//var newStringFunc = new NativeFunction(fun_pointer, &#x27;pointer&#x27;, [&#x27;pointer&#x27;, &#x27;pointer&#x27;]);</span><br><span class="line">var envPointer;</span><br><span class="line">Interceptor.attach(nativePointer, &#123;</span><br><span class="line">onEnter: function(args) &#123;</span><br><span class="line">envPointer = args[0];</span><br><span class="line">send(&quot;calc add : &quot;+args[0]+&quot;,    &quot;+args[1]);</span><br><span class="line">&#125;,</span><br><span class="line">onLeave:function(retval)&#123;</span><br><span class="line"></span><br><span class="line">send(&quot;gifcore so result value: &quot;+retval);</span><br><span class="line">//var strPointer = Memory.allocUtf8String(&quot;XXXXXXX&quot;);</span><br><span class="line">//return newStringFunc(envPointer, strPointer);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function revertHex(hexStr)&#123;</span><br><span class="line">var str = &quot;&quot;;</span><br><span class="line">str = str + hexStr[6];</span><br><span class="line">str = str + hexStr[7];</span><br><span class="line">str = str + hexStr[4];</span><br><span class="line">str = str + hexStr[5];</span><br><span class="line">str = str + hexStr[2];</span><br><span class="line">str = str + hexStr[3];</span><br><span class="line">str = str + hexStr[0];</span><br><span class="line">str = str + hexStr[1];</span><br><span class="line">return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/34dad65a29b2&quot;&gt;fridahooknative地址的计算&lt;/a&gt;&lt;br&gt;文章字数：141,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plain
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>md转pdf批量源码</title>
    <link href="https://lozn.top/2022/10/15/md%E8%BD%ACpdf%E6%89%B9%E9%87%8F%E6%BA%90%E7%A0%81/"/>
    <id>https://lozn.top/2022/10/15/md转pdf批量源码/</id>
    <published>2022-10-15T10:04:33.000Z</published>
    <updated>2023-03-16T08:35:11.408Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/73c9c148c84e">md转pdf批量源码</a><br>文章字数：264,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 待安装环境pandoc~~操作本质是os.system调用命令行执行该程序 下载https://github.com/jgm/pandoc/releases</span><br><span class="line"># pip install pywin32 pip install docx2pdf   pip install pandoc  pip install pandoc-xnos</span><br><span class="line"># 调用了word环境 </span><br><span class="line"># from docx2pdf import convert https://zhuanlan.zhihu.com/p/147498949</span><br><span class="line"># convert(&quot;input.docx&quot;, &quot;output.pdf&quot;) pip install markdown2pdf3 from markdown2pdf3 import * pip install pypandoc convert_markdown_to_pdf(&#x27;test.md&#x27;) #你的markdown文件路径</span><br><span class="line">import os</span><br><span class="line">from docx2pdf import convert</span><br><span class="line">from markdown2pdf3 import *</span><br><span class="line">import shutil</span><br><span class="line">from win32com.client import constants, gencache</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># markdown文件转换模块  markdown——&gt;docx</span><br><span class="line">def path(dir_path, func):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :param dir_path: 目标转换文件夹路径</span><br><span class="line">    :param func: 功能 数字1：将markdown转换为doc  数字2：将doc转换为pdf 数字3： 将生成的pdf文件，移动到D：/filestorage目录下</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # os.walk输出当前目录下所有文件</span><br><span class="line">    # x路径名， y文件夹名， z文件名</span><br><span class="line">    for i in range(func):</span><br><span class="line">        for x, y, z in os.walk(dir_path):</span><br><span class="line">            for filename in z:</span><br><span class="line">                # 分割文件名和后缀名</span><br><span class="line">                suffix_name = os.path.splitext(filename)[1]</span><br><span class="line">                prefix_name = os.path.splitext(filename)[0]</span><br><span class="line">                filepath = x + &#x27;\\&#x27; + filename</span><br><span class="line">                outfilepath = x + &#x27;\\&#x27; + prefix_name</span><br><span class="line">                if i == 0:</span><br><span class="line">                    if(True ==True):</span><br><span class="line">                       continue;</span><br><span class="line">                    if suffix_name == &#x27;.md&#x27;:</span><br><span class="line"></span><br><span class="line">                        print(&#x27;pandoc &#x27; + &#x27;&quot;&#x27; + filepath + &#x27;&quot;&#x27; + &#x27; -o &#x27; + x + &#x27;\\&#x27; + os.path.splitext(filename)[0] + &#x27;.docx&#x27;)</span><br><span class="line">                        # convert_markdown_to_pdf(filepath)#RuntimeError: Pandoc died with exitcode &quot;47&quot; during conversion: xelatex not found. Please select a different --pdf-engine or install xelatex</span><br><span class="line">                        os.system(&#x27;C:\\Users\\qssq5\\AppData\\Local\\Pandoc\\pandoc.exe &#x27; + &#x27;&quot;&#x27; + filepath + &#x27;&quot;&#x27; + &#x27; -o &#x27; + &#x27;&quot;&#x27; + x + &#x27;\\&#x27; + os.path.splitext(filename)[</span><br><span class="line">                            0] + &#x27;.docx&#x27; + &#x27;&quot;&#x27;)</span><br><span class="line">                        </span><br><span class="line">                elif i == 1:</span><br><span class="line">                    if suffix_name == &#x27;.docx&#x27;:</span><br><span class="line">                        if(outfilepath.find(&quot;android-&quot;)!=-1):</span><br><span class="line">                            continue;</span><br><span class="line">                        print(&quot;doc &quot;+filepath+&quot; 2 &quot;+outfilepath+&quot;       &quot;+ os.path.splitext(filename)[0] + &#x27;.pdf&#x27;)</span><br><span class="line">                        # createPdf(filepath, outfilepath)</span><br><span class="line">                        convert(filepath,outfilepath+&quot;.pdf&quot;)</span><br><span class="line">                        os.remove(filepath)</span><br><span class="line">                elif i == 2:</span><br><span class="line">                    if suffix_name == &#x27;.pdf&#x27;:</span><br><span class="line">                        # 不存在该目录，则利用mkdir进行创建</span><br><span class="line">                        if not os.path.exists(dir_path+ &#x27;\\pdf\\&#x27;):</span><br><span class="line">                            os.mkdir(dir_path+ &#x27;\\pdf\\&#x27;)</span><br><span class="line">                        shutil.move(filepath,dir_path+ &#x27;\\pdf\\&#x27;+prefix_name+&#x27;.pdf&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># docx文件转换模块 docx——&gt;pdf</span><br><span class="line">def createPdf(wordpath, pdfpath):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    :param wordpath: 目标word路径</span><br><span class="line">    :param pdfpath: 生成pdf路径</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    word = gencache.EnsureDispatch(&#x27;Word.Application&#x27;)</span><br><span class="line">    doc = word.Documents.Open(wordpath, ReadOnly=1)</span><br><span class="line">    doc.ExportAsFixedFormat(pdfpath,</span><br><span class="line">                            constants.wdExportFormatPDF,</span><br><span class="line">                            Item=constants.wdExportDocumentWithMarkup,</span><br><span class="line">                            CreateBookmarks=constants.wdExportCreateHeadingBookmarks)</span><br><span class="line">    word.Quit(constants.wdDoNotSaveChanges)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    dirname = os.getcwd() #获取当前工作目录路径</span><br><span class="line">    path(dirname, 2)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/73c9c148c84e&quot;&gt;md转pdf批量源码&lt;/a&gt;&lt;br&gt;文章字数：264,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>【原创】unity简单封装实现一个进度加载和文本提示</title>
    <link href="https://lozn.top/2022/09/13/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91unity%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%BF%9B%E5%BA%A6%E5%8A%A0%E8%BD%BD-%E5%92%8C%E6%96%87%E6%9C%AC%E6%8F%90%E7%A4%BA/"/>
    <id>https://lozn.top/2022/09/13/【原创】unity简单封装实现一个进度加载-和文本提示/</id>
    <published>2022-09-13T13:55:40.000Z</published>
    <updated>2023-03-16T08:35:11.416Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/43e4ef025b9e">【原创】unity简单封装实现一个进度加载和文本提示</a><br>文章字数：451,阅读全文大约需要1分钟<br>首先，加载中 显示加载动画和正在加载，</p><p>加载完成 隐藏，加载失败 则显示重新加载按钮和 加载失败的文字。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-573ee0d53f4683d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>要解决自适应的问题<br>loading根的设置</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-de797561be0e983c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在loadingview中的设置<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1745dc74d485500b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>文本本身需要加上content size filter约束，否则无法自适应</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-5da0f03e9a5a9c7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>实际效果  加载中</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-d928e272514d6859.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>加载失败</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f90ef1eb51a19d76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>加载失败 设设置了个点击事件，这个点击事件对外公开，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public void onClickReadLoading()</span><br><span class="line">&#123;</span><br><span class="line">    onClickReLoad?.Invoke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2815884-2fac8f3f88ac4a27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后的实现原理就是旋转image,根据状态判断是否处于旋转中。<br>设置不同的状态 显示不同的gameobject.以及设置文本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using TMPro;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class LoadingManager : Singleton&lt;LoadingManager&gt;</span><br><span class="line">&#123;</span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    [HideInInspector]</span><br><span class="line">    public float rotateSpeed = 300;</span><br><span class="line">    public Action onClickReLoad &#123; get; set; &#125;</span><br><span class="line">    public GameObject loadingImage;</span><br><span class="line">    public GameObject loadingBtnAndTextParent;</span><br><span class="line">    private Button btn;</span><br><span class="line">    TextMeshProUGUI mText;</span><br><span class="line">    public enum LoadingStatus</span><br><span class="line">    &#123;</span><br><span class="line">        Loading, LoadingFail, LoadingSucc</span><br><span class="line">    &#125;</span><br><span class="line">    LoadingStatus loadingStatus = LoadingStatus.Loading;</span><br><span class="line">    public void setState(LoadingStatus loadingStatus, String message = &quot;正在加载&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        this.loadingStatus = loadingStatus;</span><br><span class="line">        if (this.loadingStatus == LoadingStatus.LoadingSucc)</span><br><span class="line">        &#123;</span><br><span class="line">            this.gameObject.SetActive(false);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            this.loadingBtnAndTextParent.gameObject.SetActive(true);</span><br><span class="line">            this.gameObject.SetActive(true);</span><br><span class="line">            if (this.loadingStatus == LoadingStatus.LoadingFail)</span><br><span class="line">            &#123;</span><br><span class="line">                btn.gameObject.SetActive(true);</span><br><span class="line">                this.loadingImage.SetActive(false);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                btn.gameObject.SetActive(false);</span><br><span class="line">                this.loadingImage.SetActive(true);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            mText.text = message;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        //被查找的button必须先设置显示，否则 这里找不到</span><br><span class="line">        btn = this.loadingBtnAndTextParent.GetComponentInChildren&lt;Button&gt;();</span><br><span class="line">        mText = this.loadingBtnAndTextParent.GetComponentInChildren&lt;TextMeshProUGUI&gt;();</span><br><span class="line">        setState(LoadingStatus.Loading);</span><br><span class="line">    &#125;</span><br><span class="line">    public void onClickReadLoading()</span><br><span class="line">    &#123;</span><br><span class="line">        onClickReLoad?.Invoke();</span><br><span class="line">    &#125;</span><br><span class="line">    private void OnDestroy()</span><br><span class="line">    &#123;</span><br><span class="line">        /*        if (btn != null)</span><br><span class="line">                &#123;</span><br><span class="line">                    btn.onClick.RemoveListener(onClickReadLoading);</span><br><span class="line"></span><br><span class="line">                &#125;*/</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (this.loadingStatus == LoadingManager.LoadingStatus.Loading)</span><br><span class="line">        &#123;</span><br><span class="line">            this.loadingImage.transform.Rotate(-Vector3.forward * rotateSpeed * Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实际逻辑<br><img src="https://upload-images.jianshu.io/upload_images/2815884-71cb4a121cfea6f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/43e4ef025b9e&quot;&gt;【原创】unity简单封装实现一个进度加载和文本提示&lt;/a&gt;&lt;br&gt;文章字数：451,阅读全文大约需要1分钟&lt;br&gt;首先，加载中 显示加载动画和正在加载，&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity的增强工具汇总</title>
    <link href="https://lozn.top/2022/09/13/unity-%E7%9A%84%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/"/>
    <id>https://lozn.top/2022/09/13/unity-的增强工具汇总/</id>
    <published>2022-09-13T13:55:25.000Z</published>
    <updated>2023-03-16T08:35:11.412Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/278d9e182a5f">unity的增强工具汇总</a><br>文章字数：1242,阅读全文大约需要4分钟<br>progrids 网格锁定等比自带的好用 </p><p>probuilder<br>建模工具 ，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-d8f7524796adcb56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>第一个 用于创建各种默认形状 </p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-1f2ab6ebab8b77af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>第二个 用于多个点 然后合并可提升高度形成一个不规则的立方体</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-92329e970bb5195e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>第三个 是材质编辑器， 里面有几个默认的材质设置，设置好后 选择一个面或者一个整体然后alt+1 alt+2赋值给指定面或者所有面，</p><p>选择单独一个面 则在窗口中选择最后一个图标 叫做 fece selection</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-1db8fb420064c0a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>增加面和减掉面 ，<br>选择一个面之后 按shift 然后鼠标选择 缩放(快捷键r)<br>如下图所示，选择 x轴 图片中蓝色的轴控制左右的宽度 选择绿色的控制高度，选择立方体灰色的控制整体缩放， 然后切换到移动工具 ，或者快捷键w<br><img src="https://upload-images.jianshu.io/upload_images/2815884-b8cea0b05395bc69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>如下图所示是 红色x轴面向相机 我们，所以是操控x轴来控制凸出还是凹进去<br><img src="https://upload-images.jianshu.io/upload_images/2815884-73a11fed4b45a1b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-b0d4c6f6ec3b40a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>按shift可以选择多个撕裂的面<br><img src="https://upload-images.jianshu.io/upload_images/2815884-69a2264d8d7e9ecc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>然后alt+1修改这些被选中的面的颜色，<br>当然默认是没这么多面的，如下图选中物体可分裂更多面， 找到 subdivide object<br><img src="https://upload-images.jianshu.io/upload_images/2815884-d10af26ebbdb845b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>当选中一个面 然后 连续点击 extrude faces<br>出现如图增长效果<br><img src="https://upload-images.jianshu.io/upload_images/2815884-00044feab4f2103a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>选择delete faces则可删除被选中的面<br>如下图 删除后变成空洞了，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-a2d1feb720a65880.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>选中一个面进行三角形切分 Triangulate faces<br>下图是没切分之前<br><img src="https://upload-images.jianshu.io/upload_images/2815884-8dc92eeb07cb0679.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>切分后 分成了2个三角形<br><img src="https://upload-images.jianshu.io/upload_images/2815884-2023f4c3bda27936.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>也可右键 切换 文字模式</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-dc0f23ff26404e8c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>合并面<br>按shift选择多个</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-4f2bf8c968041938.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>最后点击merge faces后 <img src="https://upload-images.jianshu.io/upload_images/2815884-a6f97858154fa4b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>polybrush<br>室外地形生成工具，以及纹理绘制，和地形terrain编辑的工具差不多<br><img src="https://upload-images.jianshu.io/upload_images/2815884-82469164edec9d8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>cinemachine相机跟随<br><img src="https://upload-images.jianshu.io/upload_images/2815884-c3f24aada4d7bdf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/278d9e182a5f&quot;&gt;unity的增强工具汇总&lt;/a&gt;&lt;br&gt;文章字数：1242,阅读全文大约需要4分钟&lt;br&gt;progrids 网格锁定等比自带的好用 &lt;/p&gt;
&lt;p&gt;probuilde
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>物体永远面向相机，但是x轴不变化</title>
    <link href="https://lozn.top/2022/09/06/%E7%89%A9%E4%BD%93%E6%B0%B8%E8%BF%9C%E9%9D%A2%E5%90%91%E7%9B%B8%E6%9C%BA%EF%BC%8C%E4%BD%86%E6%98%AFx%E8%BD%B4%E4%B8%8D%E5%8F%98%E5%8C%96/"/>
    <id>https://lozn.top/2022/09/06/物体永远面向相机，但是x轴不变化/</id>
    <published>2022-09-06T00:45:56.000Z</published>
    <updated>2023-03-16T08:35:11.428Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/9043788ad228">物体永远面向相机，但是x轴不变化</a><br>文章字数：146,阅读全文大约需要1分钟<br>在旋转里面 是y轴，<br>用lookat发现是反向的文字，而且上下左右角度都变化了<br>forward虽然没有反向，但是角度也面向相机，而标签的点击是不应该倾斜的，否则不好看<br>，这里 固定y轴保持不修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    this.transform.forward = new Vector3(Camera.main.transform.forward.x, this.transform.forward.y, Camera.main.transform.forward.z);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2815884-2b8999f445263b96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后的效果</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-b474450fbacd752d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/9043788ad228&quot;&gt;物体永远面向相机，但是x轴不变化&lt;/a&gt;&lt;br&gt;文章字数：146,阅读全文大约需要1分钟&lt;br&gt;在旋转里面 是y轴，&lt;br&gt;用lookat发现是反向的文字，而且上下左
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>netwebapijson参数错误的json格式和返回结果响应码定制</title>
    <link href="https://lozn.top/2022/09/06/-net-web-api-json%E5%8F%82%E6%95%B0%E9%94%99%E8%AF%AF%E7%9A%84json%E6%A0%BC%E5%BC%8F%E5%92%8C%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E5%93%8D%E5%BA%94%E7%A0%81%E5%AE%9A%E5%88%B6/"/>
    <id>https://lozn.top/2022/09/06/-net-web-api-json参数错误的json格式和返回结果响应码定制/</id>
    <published>2022-09-06T00:45:37.000Z</published>
    <updated>2023-03-16T08:35:11.384Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/ba08962b4416">netwebapijson参数错误的json格式和返回结果响应码定制</a><br>文章字数：190,阅读全文大约需要1分钟</p><p>经过测试发现 要获取 详细信息需要通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>builder.Services.AddControllers().ConfigureApiBehaviorOptions(setupAction &#x3D;&gt; setupAction.InvalidModelStateResponseFactory &#x3D; context &#x3D;&gt;<br>{<br>    var problemDetail &#x3D; new Microsoft.AspNetCore.Mvc.ValidationProblemDetails(context.ModelState)<br>    {<br>        Type &#x3D; “无所谓”,<br>        Title &#x3D; “数据验证失败”,<br>        Status &#x3D; StatusCodes.Status200OK,<br>        Detail &#x3D; “请看详细说明”,<br>        Instance &#x3D; context.HttpContext.Request.Path<br>    };&#x2F;*    var problemDetail &#x3D; new Microsoft.AspNetCore.Mvc.ValidationProblemDetails(context.ModelState)<br>    {<br>        Type &#x3D; “无所谓”,<br>        Title &#x3D; “数据验证失败”,<br>        Status &#x3D; StatusCodes.Status200OK,<br>        Detail &#x3D; “请看详细说明”,<br>        Instance &#x3D; context.HttpContext.Request.Path<br>    };*&#x2F;<br>    int count&#x3D;problemDetail.Errors.Count;</p><pre><code>StringBuilder sb = new StringBuilder();sb.Append(&quot;数据验证错误&quot;);foreach (KeyValuePair&lt;string, string[]&gt; kv in problemDetail.Errors)&#123;    StringBuilder s1 = new StringBuilder();    for(int i=0;i&lt; kv.Value.Length; i++)    &#123;        s1.Append(kv.Value[i]+&quot; &quot;);    &#125;    sb.Append($&quot;参数:&#123;kv.Key&#125;错误,&quot;+s1.ToString()+&quot; &quot;);    //Console.WriteLine(kv.Key + kv.Value);&#125;/*  for(int i = 0; i &lt; count; i++)  &#123;      problemDetail.Errors.Keys.for      sb.Append(problemDetail.Errors[]);  &#125;*/var result=new&#123;    code = -1,    Status = StatusCodes.Status200OK,    msg = sb.ToString()&#125;;problemDetail.Extensions.Add(&quot;traceId&quot;, context.HttpContext.TraceIdentifier);return new Microsoft.AspNetCore.Mvc.JsonResult(result);/*    return new Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult(problemDetail)&#123;    ContentTypes = &#123; &quot;application/json&quot; &#125;&#125;;*/</code></pre><p>}); </p><pre><code>最后返回 jsonresult而不是UnprocessableEntityObjectResult否则结果代码并不是200，![image.png](https://upload-images.jianshu.io/upload_images/2815884-628b2a4569d0116d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)下面地址实际上返回的是模拟默认的结果实现</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/ba08962b4416&quot;&gt;netwebapijson参数错误的json格式和返回结果响应码定制&lt;/a&gt;&lt;br&gt;文章字数：190,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p&gt;经过测试发现 要获取 详细
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>逆向学习法无源码通过两个源码比较研究路由器2天搞定ngrok离线插件开发</title>
    <link href="https://lozn.top/2022/09/04/%5B%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E6%B3%95%5D%E6%97%A0%E6%BA%90%E7%A0%81%E9%80%9A%E8%BF%87%E4%B8%A4%E4%B8%AA%E6%BA%90%E7%A0%81%E6%AF%94%E8%BE%83%E7%A0%94%E7%A9%B6%E8%B7%AF%E7%94%B1%E5%99%A82%E5%A4%A9%E6%90%9E%E5%AE%9Angrok%E7%A6%BB%E7%BA%BF%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>https://lozn.top/2022/09/04/[逆向学习法]无源码通过两个源码比较研究路由器2天搞定ngrok离线插件开发/</id>
    <published>2022-09-04T08:58:57.000Z</published>
    <updated>2023-03-16T08:35:11.396Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/cd473db7f50a">逆向学习法无源码通过两个源码比较研究路由器2天搞定ngrok离线插件开发</a><br>文章字数：2515,阅读全文大约需要10分钟<br>首先,我没有多少linux,基础,对路由器 linux底层还是缺少系统的理解的,那么我这种程序员初次玩这个路由器系统是怎么个学习法呢?<br>对linux shell这些的脚本也不是很了解,<br>作为插件开发,如果你是设计者,设计一个插件 提供一个网页,网页点击后是不是应该交互调用具体的真实shell命令,<br>我虽然没有开发过路由器脚本,但是我对安卓的xposed插件,以及架构 机器人js插件大概有一定的了解,当js脚本里面执行原生代码我这边会hook执行具体的逻辑,那么 我想这大概也是一样的.</p><p>官方所有源码下载地址<br><a href="https://codeload.github.com/koolshare/armsoft/zip/refs/heads/master">https://codeload.github.com/koolshare/armsoft/zip/refs/heads/master</a><br>离线安装需要taz包,window可以用7z打包成tar,然而再次打包gzip.就可以了.</p><p>定位里面两个插件的源码,发现里面的规范写法 区别,就是从模板代码里面修改<code>install_now()</code><br><img src="https://upload-images.jianshu.io/upload_images/2815884-73c63b04e34122a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>前者是开发一个内网穿透的工具 后者只是一个小公举,所以前者通常会启动一个进程,以此卸载的时候也需要<code>killall</code> 进程<br><img src="https://upload-images.jianshu.io/upload_images/2815884-ebf95d5cd1fff274.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>l另外里面的文件目录存放结构大概得出一下结论<br>基本上也是按模块名来起名的.<br>网页 配置文件会放在固定的文件夹下,</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-a922c6725ffccd79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>从这文件看,大概就是知道请求路由器自身的域名&#x2F;_api 发送postData从而执行对应脚本,.</p><p>也就是说在_api这个服务器会执行一些固定的执行脚本操作.<br>初次尝试<br><img src="https://upload-images.jianshu.io/upload_images/2815884-6fdfb1716824bf19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-4192bfd0f09e4b0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>模拟真实请求<br>设置Cookie和user-agent<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1f2daa7738a3723b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>结果</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-e92cbd42f587e08b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>最后我做了一个修改版的ngrok 内网映射插件但是上传后提示插件里面找不到web文件夹,于是只能根据源码进行分析了<br>根据抓包分析得出文件名,然后linux查找文件 ,</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-ae511b55ae7a76db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-11010de54867d91c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>通过比对两个插件的源码,知道大概应该改什么?</p><p>之后拷贝一份frp  ,因为frp 和,ngrok,内网穿透程序相似,</p><p>大概把里面的结构改一下<br>比对发现其实大部分内容是高度一致的,只有部分不一样.</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f504d73fc4318821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>大概熟悉了下后<br>拷贝一份frp<br>至于里面怎么打包的结构,<br>需要抓包分析,<br>根据错误提示查找定位到文件<br><img src="https://upload-images.jianshu.io/upload_images/2815884-c6340b2781b50ff9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>路由器 使用 sftp,或者ssh 拷贝下来,<br>怎么找到文件呢?</p><p>linux命令<br><code>ls find  -name &quot;*.asp&quot;</code><br>额,这个上面图片已经展示过了<br>根据提示分析为啥错了,之前我是没看懂linux命令</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-8e67a42713daf8fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这句话反人类<code>-a</code>,虽然我熟悉很多种语言开发,但是从没看到这么写的, 这么简单的一个字<code>-a</code> 没有学过就不懂了</p><p>后面查阅才知道</p><figure class="highlight plaintext"><figcaption><span>等于```&&```\</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">```-o```等于```||```</span><br><span class="line">笔记</span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-a9ab89ffcb145414.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">那么这个文件没找到是啥问题呢,打包我是选择ngrok文件夹打包的那么解压后是ngrok/webs/Module_ngrok.asp 理论上没错,后面发现改名后没有把frp.asp改名为ngrok.asp,改完之后重新打包 ,终于成功了.</span><br><span class="line">最后附开发完成的截图</span><br><span class="line"></span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-37cdf8f6e254ac02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-e3c2c55ed7f28d77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-2e33374864fbad3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">研究2天时间,从星期天整天到星期一晚上以及早上12点...</span><br><span class="line">还增加了日志实时显示功能,frpc的插件源码可能压根没那么强大,所以我借鉴另外一个插件实现了实时执行日志的监听. 但是ngrok命令执行实际上不是直接管道显示的,怎么说呢 就是```echo &quot;aa&quot;&gt;file ```这种方法只能dump到刚开始闪现的东西,反正怎么解决这个思路我不会.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">所以大概实现思路可能只能sleep几秒 然后访问一个web inteface 也就是127.0.0.1:4040 取出访问内容来大致判断是否成功,</span><br><span class="line"></span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-603a9e7cf78edd68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最后我发现jffs分区这种东西空间不足,于是折腾用u盘代替 ,</span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-c07f428c55264b6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">install.sh</span><br></pre></td></tr></table></figure><p>#!&#x2F;bin&#x2F;sh<br>source &#x2F;koolshare&#x2F;scripts&#x2F;base.sh<br>alias echo_date&#x3D;’echo 【$(TZ&#x3D;UTC-8 date -R +%Y年%m月%d日\ %X)】:’<br>MODEL&#x3D;<br>UI_TYPE&#x3D;ASUSWRT<br>FW_TYPE_CODE&#x3D;<br>FW_TYPE_NAME&#x3D;<br>DIR&#x3D;$(cd $(dirname $0); pwd)<br>module&#x3D;${DIR##*&#x2F;}</p><p>get_model(){<br>    local ODMPID&#x3D;$(nvram get odmpid)<br>    local PRODUCTID&#x3D;$(nvram get productid)<br>    if [ -n “${ODMPID}” ];then<br>        MODEL&#x3D;”${ODMPID}”<br>    else<br>        MODEL&#x3D;”${PRODUCTID}”<br>    fi<br>}</p><p>get_fw_type() {<br>    local KS_TAG&#x3D;$(nvram get extendno|grep koolshare)<br>    if [ -d “&#x2F;koolshare” ];then<br>        if [ -n “${KS_TAG}” ];then<br>            FW_TYPE_CODE&#x3D;”2”<br>            FW_TYPE_NAME&#x3D;”koolshare官改固件”<br>        else<br>            FW_TYPE_CODE&#x3D;”4”<br>            FW_TYPE_NAME&#x3D;”koolshare梅林改版固件”<br>        fi<br>    else<br>        if [ “$(uname -o|grep Merlin)” ];then<br>            FW_TYPE_CODE&#x3D;”3”<br>            FW_TYPE_NAME&#x3D;”梅林原版固件”<br>        else<br>            FW_TYPE_CODE&#x3D;”1”<br>            FW_TYPE_NAME&#x3D;”华硕官方固件”<br>        fi<br>    fi<br>}</p><p>platform_test(){<br>    local LINUX_VER&#x3D;$(uname -r|awk -F”.” ‘{print $1$2}’)<br>    if [ -d “&#x2F;koolshare” -a -f “&#x2F;usr&#x2F;bin&#x2F;skipd” -a “${LINUX_VER}” -eq “26” ];then<br>        echo_date 机型：”${MODEL} ${FW_TYPE_NAME} 符合安装要求，开始安装插件！”<br>    else<br>        exit_install 1<br>    fi<br>}</p><p>get_ui_type(){<br>    # default value<br>    [ “${MODEL}” &#x3D;&#x3D; “RT-AC86U” ] &amp;&amp; local ROG_RTAC86U&#x3D;0<br>    [ “${MODEL}” &#x3D;&#x3D; “GT-AC2900” ] &amp;&amp; local ROG_GTAC2900&#x3D;1<br>    [ “${MODEL}” &#x3D;&#x3D; “GT-AC5300” ] &amp;&amp; local ROG_GTAC5300&#x3D;1<br>    [ “${MODEL}” &#x3D;&#x3D; “GT-AX11000” ] &amp;&amp; local ROG_GTAX11000&#x3D;1<br>    [ “${MODEL}” &#x3D;&#x3D; “GT-AXE11000” ] &amp;&amp; local ROG_GTAXE11000&#x3D;1<br>    local KS_TAG&#x3D;$(nvram get extendno|grep koolshare)<br>    local EXT_NU&#x3D;$(nvram get extendno)<br>    local EXT_NU&#x3D;$(echo ${EXT_NU%_*} | grep -Eo “^[0-9]{1,10}$”)<br>    local BUILDNO&#x3D;$(nvram get buildno)<br>    [ -z “${EXT_NU}” ] &amp;&amp; EXT_NU&#x3D;”0”<br>    # RT-AC86U<br>    if [ -n “${KS_TAG}” -a “${MODEL}” &#x3D;&#x3D; “RT-AC86U” -a “${EXT_NU}” -lt “81918” -a “${BUILDNO}” !&#x3D; “386” ];then<br>        # RT-AC86U的官改固件，在384_81918之前的固件都是ROG皮肤，384_81918及其以后的固件（包括386）为ASUSWRT皮肤<br>        ROG_RTAC86U&#x3D;1<br>    fi<br>    # GT-AC2900<br>    if [ “${MODEL}” &#x3D;&#x3D; “GT-AC2900” ] &amp;&amp; [ “${FW_TYPE_CODE}” &#x3D;&#x3D; “3” -o “${FW_TYPE_CODE}” &#x3D;&#x3D; “4” ];then<br>        # GT-AC2900从386.1开始已经支持梅林固件，其UI是ASUSWRT<br>        ROG_GTAC2900&#x3D;0<br>    fi<br>    # GT-AX11000<br>    if [ “${MODEL}” &#x3D;&#x3D; “GT-AX11000” -o “${MODEL}” &#x3D;&#x3D; “GT-AX11000_BO4” ] &amp;&amp; [ “${FW_TYPE_CODE}” &#x3D;&#x3D; “3” -o “${FW_TYPE_CODE}” &#x3D;&#x3D; “4” ];then<br>        # GT-AX11000从386.2开始已经支持梅林固件，其UI是ASUSWRT<br>        ROG_GTAX11000&#x3D;0<br>    fi<br>    # ROG UI<br>    if [ “${ROG_GTAC5300}” &#x3D;&#x3D; “1” -o “${ROG_RTAC86U}” &#x3D;&#x3D; “1” -o “${ROG_GTAC2900}” &#x3D;&#x3D; “1” -o “${ROG_GTAX11000}” &#x3D;&#x3D; “1” -o “${ROG_GTAXE11000}” &#x3D;&#x3D; “1” ];then<br>        # GT-AC5300、RT-AC86U部分版本、GT-AC2900部分版本、GT-AX11000部分版本、GT-AXE11000全部版本，骚红皮肤<br>        UI_TYPE&#x3D;”ROG”<br>    fi<br>    # TUF UI<br>    if [ “${MODEL}” &#x3D;&#x3D; “TUF-AX3000” ];then<br>        # 官改固件，橙色皮肤<br>        UI_TYPE&#x3D;”TUF”<br>    fi<br>}</p><p>exit_install(){<br>    local state&#x3D;$1<br>    case $state in<br>        1)<br>            echo_date “本插件适用于【koolshare merlin armv7l 384&#x2F;386】固件平台！”<br>            echo_date “你的固件平台不能安装！！!”<br>            echo_date “本插件支持机型&#x2F;平台：<a href="https://github.com/koolshare/armsoft#armsoft&quot;">https://github.com/koolshare/armsoft#armsoft&quot;</a><br>            echo_date “退出安装！”<br>            rm -rf &#x2F;tmp&#x2F;${module}* &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>            exit 1<br>            ;;<br>        0|<em>)<br>            rm -rf &#x2F;tmp&#x2F;${module}</em> &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>            exit 0<br>            ;;<br>    esac<br>}</p><p>install_ui(){<br>    # intall different UI<br>    get_ui_type<br>    if [ “${UI_TYPE}” &#x3D;&#x3D; “ROG” ];then<br>        echo_date “安装ROG皮肤！”<br>        sed -i ‘&#x2F;asuscss&#x2F;d’ &#x2F;koolshare&#x2F;webs&#x2F;Module_${module}.asp &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>    fi<br>    if [ “${UI_TYPE}” &#x3D;&#x3D; “TUF” ];then<br>        echo_date “安装TUF皮肤！”<br>        sed -i ‘&#x2F;asuscss&#x2F;d’ &#x2F;koolshare&#x2F;webs&#x2F;Module_${module}.asp &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>        sed -i ‘s&#x2F;3e030d&#x2F;3e2902&#x2F;g;s&#x2F;91071f&#x2F;92650F&#x2F;g;s&#x2F;680516&#x2F;D0982C&#x2F;g;s&#x2F;cf0a2c&#x2F;c58813&#x2F;g;s&#x2F;700618&#x2F;74500b&#x2F;g;s&#x2F;530412&#x2F;92650F&#x2F;g’ &#x2F;koolshare&#x2F;webs&#x2F;Module_${module}.asp &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>    fi<br>    if [ “${UI_TYPE}” &#x3D;&#x3D; “ASUSWRT” ];then<br>        echo_date “安装ASUSWRT皮肤！”<br>        sed -i ‘&#x2F;rogcss&#x2F;d’ &#x2F;koolshare&#x2F;webs&#x2F;Module_${module}.asp &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>    fi<br>}</p><p>install_now(){<br>    # default value<br>    local TITLE&#x3D;”ngrok内网穿透”<br>    local DESCR&#x3D;”支持多种协议的内网穿透软件”<br>    local PLVER&#x3D;$(cat ${DIR}&#x2F;version)</p><pre><code># stop firstlocal ENABLE=$(dbus get $&#123;module&#125;_enable)local PID=$(pidof ngrok)if [ -n &quot;$&#123;PID&#125;&quot; ];then    echo_date &quot;安装前先关闭$&#123;TITLE&#125;插件，以保证更新成功！&quot;    killall ngrok &gt;/dev/null 2&gt;&amp;1fi# isntall fileecho_date &quot;安装插件相关文件...&quot;cd /tmpcp -rf /tmp/$&#123;module&#125;/bin/* /koolshare/bin/cp -rf /tmp/$&#123;module&#125;/res/* /koolshare/res/cp -rf /tmp/$&#123;module&#125;/scripts/* /koolshare/scripts/cp -rf /tmp/$&#123;module&#125;/webs/* /koolshare/webs/cp -rf /tmp/$&#123;module&#125;/uninstall.sh /koolshare/scripts/uninstall_$&#123;module&#125;.sh# Permissionschmod 755 /koolshare/bin/$&#123;module&#125; &gt;/dev/null 2&gt;&amp;1chmod 755 /koolshare/scripts/$&#123;module&#125;_*.sh &gt;/dev/null 2&gt;&amp;1# intall different UIinstall_ui# dbus valueecho_date &quot;设置插件默认参数...&quot;dbus set $&#123;module&#125;_version=&quot;$&#123;PLVER&#125;&quot;dbus set softcenter_module_$&#123;module&#125;_version=&quot;$&#123;PLVER&#125;&quot;dbus set softcenter_module_$&#123;module&#125;_install=&quot;1&quot;dbus set softcenter_module_$&#123;module&#125;_name=&quot;$&#123;module&#125;&quot;dbus set softcenter_module_$&#123;module&#125;_title=&quot;$&#123;TITLE&#125;&quot;dbus set softcenter_module_$&#123;module&#125;_description=&quot;$&#123;DESCR&#125;&quot;# re-enableif [ &quot;$&#123;ENABLE&#125;&quot; == &quot;1&quot; -a -f &quot;/koolshare/scripts/ngrok_config.sh&quot; ];then    echo_date &quot;安装完毕，重新启用$&#123;TITLE&#125;插件！&quot;    sh /koolshare/scripts/frpc_config.sh startfi# finishecho_date &quot;$&#123;TITLE&#125;插件安装完毕！&quot;exit_install</code></pre><p>}</p><p>install(){<br>    get_model<br>    get_fw_type<br>    platform_test<br>    install_now<br>}</p><p>install</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uninstall.sh</span><br></pre></td></tr></table></figure><p>#!&#x2F;bin&#x2F;sh<br>export KSROOT&#x3D;&#x2F;koolshare<br>source $KSROOT&#x2F;scripts&#x2F;base.sh</p><p>killall frpc<br>find &#x2F;koolshare&#x2F;init.d&#x2F; -name “<em>frpc</em>“ | xargs rm -rf<br>rm -rf &#x2F;koolshare&#x2F;res&#x2F;icon-frpc.png<br>rm -rf &#x2F;koolshare&#x2F;scripts&#x2F;frpc*.sh<br>rm -rf &#x2F;koolshare&#x2F;webs&#x2F;Module_frpc.asp<br>rm -f &#x2F;koolshare&#x2F;scripts&#x2F;uninstall_frpc.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ngrok_config.sh</span><br></pre></td></tr></table></figure><p>#!&#x2F;bin&#x2F;sh</p><p>eval <code>dbus export ngrok_</code><br>source &#x2F;koolshare&#x2F;scripts&#x2F;base.sh<br>mkdir -p &#x2F;tmp&#x2F;upload<br>NAME&#x3D;ngrok<br>alias echo_date&#x3D;’echo 【$(TZ&#x3D;UTC-8 date -R +%Y年%m月%d日\ %X)】:’<br>BIN&#x3D;&#x2F;koolshare&#x2F;bin&#x2F;ngrok<br>INI_FILE&#x3D;&#x2F;tmp&#x2F;upload&#x2F;.ngrok.ini<br>LOG_FILE_TXT&#x3D;&#x2F;tmp&#x2F;upload&#x2F;ngrok_log.txt<br>STCP_INI_FILE&#x3D;&#x2F;tmp&#x2F;upload&#x2F;.ngrok_stcp.ini<br>PID_FILE&#x3D;&#x2F;var&#x2F;run&#x2F;ngrok.pid<br>lan_ip&#x3D;<code>nvram get lan_ipaddr</code><br>lan_port&#x3D;”80”<br>ddns_flag&#x3D;false</p><p>fun_ntp_sync(){<br>    echo_date “[fun_ntp_sync调用]”| tee -a $LOG_FILE_TXT<br>    ntp_server&#x3D;<code>nvram get ntp_server0</code><br>    start_time&#x3D;”<code>date +%Y%m%d</code>“<br>    ntpclient -h ${ntp_server} -i3 -l -s &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1<br>    if [ “${start_time}”x &#x3D; “<code>date +%Y%m%d</code>“x ]; then<br>        ntpclient -h ntp1.aliyun.com -i3 -l -s &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1<br>    fi<br>}<br>fun_start_stop(){<br>    echo_date “[fun_start_stop调用]”| tee -a $LOG_FILE_TXT<br>    #ngrok_enable&#x3D;1<br>    dbus set ngrok_client_version&#x3D;<code>$&#123;BIN&#125; version</code><br>    if [ “${ngrok_enable}”x &#x3D; “1”x ];then<br>        echo_date 当前为开启状态,即将进行程序执行| tee -a $LOG_FILE_TXT<br>        if [ “<code>dbus get ngrok_customize_conf</code>“x &#x3D; “1”x ];then<br>            _ngrok_customize_conf&#x3D;<code>dbus get ngrok_config | base64_decode</code> || “未发现配置文件”<br>            cat &gt; ${INI_FILE}&lt;&lt;-EOF<br>                # ngrok custom configuration<br>                ${_ngrok_customize_conf}<br>                EOF<br>        else<br>            stcp_en&#x3D;<code>dbus list ngrok_proto_node | grep stcp</code><br>            cat &gt; ${INI_FILE}&lt;&lt;-EOF<br>                # ngrok configuration<br>                [common]<br>                server_addr &#x3D; ${ngrok_common_server_addr}<br>                #server_port &#x3D; ${ngrok_common_server_port}<br>                token &#x3D; ${ngrok_common_privilege_token}<br>                log_file &#x3D; ${ngrok_common_log_file}<br>                log_level &#x3D; ${ngrok_common_log_level}<br>                log_max_days &#x3D; ${ngrok_common_log_max_days}<br>                tcp_mux &#x3D; ${ngrok_common_tcp_mux}<br>                protocol &#x3D; ${ngrok_common_protocol}<br>                login_fail_exit &#x3D; ${ngrok_common_login_fail_exit}<br>                user &#x3D; ${ngrok_common_user}<br>            EOF</p><pre><code>        if [[ &quot;$&#123;stcp_en&#125;&quot; != &quot;&quot; ]]; then            cat &gt; $&#123;STCP_INI_FILE&#125;&lt;&lt;-EOF                [common]                server_addr = $&#123;ngrok_common_server_addr&#125;                #server_port = $&#123;ngrok_common_server_port&#125;                token = $&#123;ngrok_common_privilege_token&#125;            EOF        fi        server_nu=`dbus list ngrok_localhost_node | sort -n -t &quot;_&quot; -k 4|cut -d &quot;=&quot; -f 1|cut -d &quot;_&quot; -f 4`        for nu in $&#123;server_nu&#125;        do            array_subname=`dbus get ngrok_subname_node_$nu`            array_type=`dbus get ngrok_proto_node_$nu`            array_local_ip=`dbus get ngrok_localhost_node_$nu`            array_local_port=`dbus get ngrok_localport_node_$nu`            array_remote_port=`dbus get ngrok_remoteport_node_$nu`            array_custom_domains=`dbus get ngrok_subdomain_node_$nu`            array_use_encryption=`dbus get ngrok_encryption_node_$nu`            array_use_gzip=`dbus get ngrok_gzip_node_$nu`            if [[ &quot;$&#123;array_type&#125;&quot; == &quot;tcp&quot; ]] || [[ &quot;$&#123;array_type&#125;&quot; == &quot;udp&quot; ]]; then                cat &gt;&gt; $&#123;INI_FILE&#125; &lt;&lt;-EOF                    [$&#123;array_subname&#125;]                    type = $&#123;array_type&#125;                    local_ip = $&#123;array_local_ip&#125;                    local_port = $&#123;array_local_port&#125;                    remote_port = $&#123;array_remote_port&#125;                    use_encryption = $&#123;array_use_encryption&#125;                    use_compression = $&#123;array_use_gzip&#125;                EOF            elif [[ &quot;$&#123;array_type&#125;&quot; == &quot;stcp&quot; ]]; then                cat &gt;&gt; $&#123;INI_FILE&#125; &lt;&lt;-EOF                    [$&#123;array_subname&#125;]                    type = $&#123;array_type&#125;                    sk = $&#123;array_custom_domains&#125;                    local_ip = $&#123;array_local_ip&#125;                    local_port = $&#123;array_local_port&#125;                EOF                cat &gt;&gt; $&#123;STCP_INI_FILE&#125;&lt;&lt;-EOF                    [secret_tcp_vistor]                    # ngrok role vistor -&gt; frps -&gt; ngrok role server                    role = vistor                    type = stcp                    # the server name you want to vistor                    server_name = $&#123;ngrok_common_user&#125;.$&#123;array_subname&#125;                    sk = $&#123;array_custom_domains&#125;                    # connect this address to vistor stcp server                    bind_addr = 127.0.0.1                    bind_port = 9000                EOF            else                cat &gt;&gt; $&#123;INI_FILE&#125; &lt;&lt;-EOF                    [$&#123;array_subname&#125;]                    type = $&#123;array_type&#125;                    local_ip = $&#123;array_local_ip&#125;                    local_port = $&#123;array_local_port&#125;                    remote_port = $&#123;array_remote_port&#125;                    custom_domains = $&#123;array_custom_domains&#125;                    use_encryption = $&#123;array_use_encryption&#125;                    use_compression = $&#123;array_use_gzip&#125;                EOF            fi        done    fi    killall ngrok || true    echo_date &quot;杀死原有进程&quot;| tee -a $LOG_FILE_TXT    sleep 1    export GOGC=40    echo_date &quot;再次启动进程&quot; | tee -a $LOG_FILE_TXT    echo_date &quot;执行命令 start-stop-daemon -S -q -b -m -p $&#123;PID_FILE&#125; -x $&#123;BIN&#125; clientid $&#123;ngrok_common_privilege_token&#125;&quot;| tee -a $LOG_FILE_TXT    start-stop-daemon -S -q -b -m -p $&#123;PID_FILE&#125; -x $&#123;BIN&#125; clientid $&#123;ngrok_common_privilege_token&#125;| tee -a $LOG_FILE_TXT    sleep 3    echo_date &quot;输出等待结果$&#123;temp&#125;&quot; | tee -a $LOG_FILE_TXT    #A=`curl -I &quot;http://127.0.0.1&quot;`    A=`curl  &quot;http://127.0.0.1:4040&quot;`    B=$&#123;A##*&#125;    echo_date &quot;启动程序完成,尝试访问web接口结果\n$A&quot;| tee -a $LOG_FILE_TXTelse    echo_date &quot;非开启状态,终止程序&quot; | tee -a $LOG_FILE_TXT    killall ngrok || truefi</code></pre><p>}<br>fun_nat_start(){ # 添加开机启动<br>    echo_date “[fun_nat_start调用]”| tee -a $LOG_FILE_TXT<br>    if [ “${ngrok_enable}”x &#x3D; “1”x ];then<br>        echo_date “添加开机自启动”| tee -a $LOG_FILE_TXT<br>        [ ! -L “&#x2F;koolshare&#x2F;init.d&#x2F;N99ngrok.sh” ] &amp;&amp; ln -sf &#x2F;koolshare&#x2F;scripts&#x2F;ngrok_config.sh &#x2F;koolshare&#x2F;init.d&#x2F;N99ngrok.sh<br>    else<br>        echo_date “移除开机自启动”| tee -a $LOG_FILE_TXT<br>        rm -rf &#x2F;koolshare&#x2F;init.d&#x2F;N99ngrok.sh &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<br>    fi<br>}</p><p>fun_crontab(){<br>    echo_date “[fun_crontab调用]”| tee -a $LOG_FILE_TXT<br>    if [ “${ngrok_enable}”x &#x3D; “1”x ];then</p><pre><code>    if [ &quot;$&#123;ngrok_common_cron_time&#125;&quot;x = &quot;0&quot;x ]; then        echo_date 清除定时| tee -a $LOG_FILE_TXT        cru d ngrok_monitor    else        if [ &quot;$&#123;ngrok_common_cron_hour_min&#125;&quot;x = &quot;min&quot;x ]; then            echo_date 添加定时-$&#123;ngrok_common_cron_time&#125;分钟重启一次 tee -a $LOG_FILE_TXT            cru a ngrok_monitor &quot;*/&quot;$&#123;ngrok_common_cron_time&#125;&quot; * * * * /bin/sh /koolshare/scripts/ngrok_config.sh start&quot;        elif [ &quot;$&#123;ngrok_common_cron_hour_min&#125;&quot;x = &quot;hour&quot;x ]; then            echo_date 添加定时-&#123;ngrok_common_cron_time&#125;小时重启一次 tee -a $LOG_FILE_TXT            cru a ngrok_monitor &quot;0 */&quot;$&#123;ngrok_common_cron_time&#125;&quot; * * * /bin/sh /koolshare/scripts/ngrok_config.sh start&quot;        fi    fielse    cru d ngrok_monitor    echo_date 清除定时| tee -a $LOG_FILE_TXTfi</code></pre><p>}<br>fun_ddns_stop(){<br>    nvram unset ddns_hostname_x<br>    nvram set ddns_enable_x&#x3D;0<br>    nvram commit<br>}<br>fun_ddns_start(){<br>    # ddns setting<br>    if [ “${frpc_enable}”x &#x3D; “1”x ];then<br>        # ddns setting<br>        if [[ “${frpc_common_ddns}” &#x3D;&#x3D; “1” ]] &amp;&amp; [[ “${frpc_domain}” !&#x3D; “” ]]; then<br>            nvram set ddns_enable_x&#x3D;1<br>            nvram set ddns_hostname_x&#x3D;${frpc_domain}<br>            ddns_custom_updated 1<br>            nvram commit<br>        elif [[ “${frpc_common_ddns}” &#x3D;&#x3D; “2” ]]; then<br>            echo “ddns no setting”<br>        else<br>            fun_ddns_stop<br>        fi<br>    else<br>        fun_ddns_stop<br>    fi<br>}</p><p>#echo “action(supportStart):$ACTION”| tee -a $LOG_FILE_TXT</p><h1 id="x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D"><a href="#x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;"></a>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</h1><h1 id="this-part-for-start-up-by-post-mount"><a href="#this-part-for-start-up-by-post-mount" class="headerlink" title="this part for start up by post-mount"></a>this part for start up by post-mount</h1><p>case $ACTION in<br>start)<br>    true &gt; $LOG_FILE_TXT #重置日志文件内容<br>    echo XU6J03M6 | tee -a $LOG_FILE_TXT #实时刷新<br>    echo_date “execAction” | tee -a $LOG_FILE_TXT<br>    fun_ntp_sync<br>    fun_start_stop<br>    fun_nat_start<br>    fun_crontab<br>    http_response “$1”<br>    echo “execOver$2” | tee -a $LOG_FILE_TXT<br>    ;;</p><p>esac</p><h1 id="for-web-submit"><a href="#for-web-submit" class="headerlink" title="for web submit"></a>for web submit</h1><p>case $2 in<br>1)<br>    true &gt; $LOG_FILE_TXT #清空日志</p><pre><code>http_response &quot;$1&quot;echo -e &quot;参数Action$&#123;ACTION&#125;\n参数0:$&#123;0&#125;\n参数1:$&#123;1&#125;\n参数2:$&#123;2&#125;&quot;| tee -a $LOG_FILE_TXTecho XU6J03M6 | tee -a $LOG_FILE_TXT #有了这个标记就可以显示一个按钮.echo_date &quot;提交配置更新&quot; | tee -a $LOG_FILE_TXTfun_ntp_syncfun_start_stopfun_nat_startfun_crontabecho &quot;execOver$1&quot; | tee -a $LOG_FILE_TXT;;</code></pre><p>esac</p><p>case $3 in<br>web_submit)<br>    true &gt; $LOG_FILE_TXT #重置日志文件内容<br>    echo XU6J03M6 | tee -a $LOG_FILE_TXT #实时刷新<br>    fun_nat_start<br>    http_response “$1”<br>    echo “execOver$2” | tee -a $LOG_FILE_TXT<br>    ;;<br>esac</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok_status.sh</span><br></pre></td></tr></table></figure><p>#! &#x2F;bin&#x2F;sh</p><p>export KSROOT&#x3D;&#x2F;koolshare<br>source $KSROOT&#x2F;scripts&#x2F;base.sh<br>ngrok_version&#x3D;<code>/koolshare/bin/ngrok version</code><br>ngrok_pid&#x3D;<code>pidof ngrok</code></p><p>if [ -n “$ngrok_pid” ];then<br>    http_response “ngrok ${ngrok_version} 进程运行正常！PID：$ngrok_pid”<br>else<br>    http_response “ngrok ${ngrok_version} 进程未运行！”<br>fi</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/cd473db7f50a&quot;&gt;逆向学习法无源码通过两个源码比较研究路由器2天搞定ngrok离线插件开发&lt;/a&gt;&lt;br&gt;文章字数：2515,阅读全文大约需要10分钟&lt;br&gt;首先,我没有多少linux
      
    
    </summary>
    
      <category term="路由器" scheme="https://lozn.top/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="路由器" scheme="https://lozn.top/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>两个包名前缀相近获取最新安装的包名方法</title>
    <link href="https://lozn.top/2022/09/01/%E4%B8%A4%E4%B8%AA%E5%8C%85%E5%90%8D%E5%89%8D%E7%BC%80%E7%9B%B8%E8%BF%91%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E5%AE%89%E8%A3%85%E7%9A%84%E5%8C%85%E5%90%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2022/09/01/两个包名前缀相近获取最新安装的包名方法/</id>
    <published>2022-09-01T06:49:31.000Z</published>
    <updated>2023-03-16T08:35:11.416Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/51c62e516d65">两个包名前缀相近获取最新安装的包名方法</a><br>文章字数：354,阅读全文大约需要1分钟<br>具体研究这个有啥用这里就不透露了。<br><code>PACKAGE=`ls -t /sdcard/Android/data|grep lozn.`|head -n 1&amp;&amp;mkdir -p /sdcard/Android/data/\$PACKAGE/files/auth&amp;&amp;echo $PACKAGE</code><br>-t参数代表时间排序，加上-tr则是反向，-t代表最新时间-tr则是反向，<br>最老安装的app是 com.miui.mishare.connectivity 时间是2021年6月27 ，也就是说这手机大概这个时候买的吧。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-a2efb38a5ce8c443.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>多个条件的判断可以用 <code>; </code> 用于解决if else, </p><p>两个变量判断要加引号， 而且&#x3D;&#x3D; 要有空格 而且[]之间也要有空格<br>在dart里面转义则更加操蛋，大概为<code>if [ \&quot;\$PACKAGE\&quot; != \&quot;\&quot; ];then echo fond package \$PACKAGE;</code></p><p>一句话执行多个逻辑<br><code>execResult=3333;empty=&#39;&#39;;PACKAGE=`ls -t /sdcard/Android/data|grep com.|head -n 1`;if [ &quot;$PACKAGE&quot; != &quot;&quot; ];then mkdir -p /sdcard/Android/data/$PACKAGE/files/auth;echo $execResult&gt;/sdcard/Android/data/$PACKAGE/files/aaaa;echo success,packageName is $PACKAGE;else echo query package fail;fi</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/51c62e516d65&quot;&gt;两个包名前缀相近获取最新安装的包名方法&lt;/a&gt;&lt;br&gt;文章字数：354,阅读全文大约需要1分钟&lt;br&gt;具体研究这个有啥用这里就不透露了。&lt;br&gt;&lt;code&gt;PACKA
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>aspnetcoreapi等调用webservice以及处理返回值踩坑之路</title>
    <link href="https://lozn.top/2022/09/01/asp-net-core-api--%E7%AD%89%E8%B0%83%E7%94%A8webservice%E4%BB%A5%E5%8F%8A-%E5%A4%84%E7%90%86%E8%BF%94%E5%9B%9E%E5%80%BC%E8%B8%A9%E5%9D%91%E4%B9%8B%E8%B7%AF/"/>
    <id>https://lozn.top/2022/09/01/asp-net-core-api--等调用webservice以及-处理返回值踩坑之路/</id>
    <published>2022-09-01T05:53:42.000Z</published>
    <updated>2023-03-16T08:35:11.400Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/7ce3287f0dfa">aspnetcoreapi等调用webservice以及处理返回值踩坑之路</a><br>文章字数：1511,阅读全文大约需要6分钟</p><p>首先添加引用然他自动生成文件<br><img src="https://upload-images.jianshu.io/upload_images/2815884-68e77bf64390aa4b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>点击go  services 填写如<a href="http://192.168.1.5/Service1.asmx">http://192.168.1.5/Service1.asmx</a> 里面会加载出来记住名字 如Service1Soap<br><img src="https://upload-images.jianshu.io/upload_images/2815884-173af9f45eb92c0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>将自动生成<br><img src="https://upload-images.jianshu.io/upload_images/2815884-404c56693d65f7e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>下一步 默认 ，完成<br>然后定位项目文件夹<br><img src="https://upload-images.jianshu.io/upload_images/2815884-02973c13598c3c21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>查看命名空间 并引用<br><img src="https://upload-images.jianshu.io/upload_images/2815884-a040a579a90173f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-5c75b9c314b75bf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//创建 HTTP 绑定对象</span><br><span class="line">     var binding = new BasicHttpBinding();</span><br><span class="line">     //根据 WebService 的 URL 构建终端点对象，参数是提供的WebService地址</span><br><span class="line">     var endpoint = new EndpointAddress(@&quot;http://192.168.1.5/Service1.asmx&quot;);</span><br><span class="line">     //创建调用接口的工厂，注意这里泛型只能传入接口 泛型接口里面的参数是WebService里面定义的类名+Soap</span><br><span class="line">     var factory = new ChannelFactory&lt;Service1Soap&gt;(binding, endpoint);</span><br><span class="line">     //从工厂获取具体的调用实例</span><br><span class="line">     var callClient = factory.CreateChannel();</span><br><span class="line">     /*          //调用具体的方法，这里是 HelloWorldAsync 方法</span><br><span class="line">               Task&lt;HelloWorldResponse&gt; responseTask = callClient.HelloWorldAsync(new HelloWorldRequest());</span><br><span class="line">               //获取结果</span><br><span class="line">               HelloWorldResponse response = responseTask.Result;</span><br><span class="line">               // 获取HelloWorld方法的返回值</span><br><span class="line">               string result1 = response.Body.HelloWorldResult;*/</span><br><span class="line"></span><br><span class="line">     // 调用TestMethod方法，不传递参数</span><br><span class="line">     string userid = &quot;&quot;;</span><br><span class="line">     Task&lt;CheckUserResponse&gt; testResponse = callClient.callAsync(new CheckUserRequest(username, password, userid, 0));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>假如返回datatable ,但是实际上是System.Xml.Element<br><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.xml.xmlelement?view=net-6.0">https://docs.microsoft.com/zh-cn/dotnet/api/system.xml.xmlelement?view=net-6.0</a></p><p>思路：成员对象的innerXml</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-5a4145a28c74818e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>刚开始采用如下方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.Data.DataTable dataTable = new System.Data.DataTable();</span><br><span class="line">         StringReader sr = new StringReader(str2);</span><br><span class="line">      、//   dataTable.ReadXmlSchema(&quot;&quot;);//此方法需要readXmlSchema </span><br><span class="line">         dataTable.ReadXml(sr);*</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提示错误 System.InvalidOperationException:“DataTable does not support schema inference from Xml.”<br>解决方法是需要填写写入 xmlschema,但是这个东西没有schema样板。<br>改成如下即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">System.Data.DataSet dsData = new System.Data.DataSet();</span><br><span class="line">         </span><br><span class="line">         dsData.ReadXml(new System.Xml.XmlTextReader(new StringReader(str2)));</span><br><span class="line">         System.Data.DataTable dt = dsData.Tables[&quot;DT_Webservice&quot;];//HH</span><br><span class="line">         System.IO.FileStream stream =</span><br><span class="line"> new System.IO.FileStream($@&quot;&#123;directory&#125;\Schema.txt&quot;, System.IO.FileMode.Create);</span><br><span class="line">         dt.WriteXmlSchema(stream);</span><br><span class="line">         foreach (System.Data.DataRow dr in dt.Rows)</span><br><span class="line">         &#123;</span><br><span class="line">             foreach (System.Data.DataColumn dc in dr.Table.Columns)</span><br><span class="line">             &#123;</span><br><span class="line">                 string n = dc.ColumnName;</span><br><span class="line">                 string value = dr[n].ToString();</span><br><span class="line">                 Console.WriteLine(&quot;test:&quot; + value + &quot;,&quot; + n);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>完美<br>其中DT_Webservice 是根据 innerxml里面的节点得知，<br>innerxml大概数据集如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  &lt;DocumentElement</span><br><span class="line">    xmlns=&quot;&quot;&gt;</span><br><span class="line">    &lt;DT_Webservice diffgr:id=&quot;DT_Webservice1&quot; msdata:rowOrder=&quot;0&quot;</span><br><span class="line">        xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;</span><br><span class="line">        xmlns:diffgr=&quot;urn:schemas-microsoft-com:xml-diffgram-v1&quot;&gt;</span><br><span class="line">                &lt;app_desc&gt;不告诉你&lt;/app_desc&gt;</span><br><span class="line">    &lt;/DT_Webservice&gt;</span><br><span class="line"></span><br><span class="line">    &lt;DT_Webservice diffgr:id=&quot;DT_Webservice34&quot; msdata:rowOrder=&quot;33&quot;</span><br><span class="line">        xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;</span><br><span class="line">        xmlns:diffgr=&quot;urn:schemas-microsoft-com:xml-diffgram-v1&quot;&gt;</span><br><span class="line">        &lt;app_desc&gt;你号aaaa&lt;/app_desc&gt;</span><br><span class="line">    &lt;/DT_Webservice&gt;</span><br><span class="line">&lt;/DocumentElement&gt;</span><br></pre></td></tr></table></figure><p>当然我认为还有一个思路就是直接研究<code>System.XML.element</code> 类的用法直接递归<br>System.XML.element本身也属于 XmlNode<br>每个xmlnode都包好childNodes 也就是XmlNodeList 可以直接用下标访问</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-71c6e8df198d48fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">     List&lt;String&gt; values = new List&lt;string&gt;();</span><br><span class="line">                    XmlNodeList? list = a.Result.Any1?.SelectNodes(&quot;//app_desc&quot;)??null;</span><br><span class="line">         </span><br><span class="line">   foreach (XmlNode current in list)</span><br><span class="line">                        &#123;</span><br><span class="line"></span><br><span class="line">                       String currentText=current.InnerText;</span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于 selectNodes语法参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">注意这里AddNamespace方法的前面一个参数用于标记这个命名空间，在下面SelectNodes方法中加上对应的标记。给出的这一段是为了查找数据库连接字符串的节点。顺便附带扯下SelectNodes中XPath的语法：</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;node&quot;)          从当前子节点中查找节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;/node&quot;)         从根节点的子节点中查找节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node&quot;)        从任意位置上查找名为node的节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;.&quot;)                 选择当前节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;..&quot;)                选择当前节点父节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node[1]&quot;)    选择名为node的第一个节点，注意这里是从1开始，不是从0开始</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;/@name&quot;)    选择有name属性的节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;/node[position() &lt; 3]&quot;)           选择名为node的前两个节点</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node[@name]&quot;)                  选择node节点，并且该节点有name属性</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node[@name=&#x27;limit&#x27;]&quot;)        选择node节点，并且该节点有name属性，而且name属性值为limit</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node[contains(item)]&quot;)        选择node节点，该节点存在名字item的子节点，注意，如果有命名空间，这里要加命名空间，XX:item</span><br><span class="line"></span><br><span class="line">SelectNodes(&quot;//node[contains(item,‘Hello World’)]&quot;)        选择node节点，该节点存在名字item的子节点，并且item节点内容为Hello World</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/Austin_link/article/details/45246055">https://blog.csdn.net/Austin_link/article/details/45246055</a></p><p>除此之外 ，调用webservice采用http访问<br>假设为</p><p>WebService 引用这个<a href="http://192.1.0.1/A.asmx">http://192.1.1/A.asmx</a><br>方法名为checkUser<br>文档如下<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1d9734d9034e8679.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>那么应该是这样的访问<br><a href="http://192.168.1.1/A.asmx/CheckUser?sUser=1&amp;sPwd=1&amp;ssuserid=1&amp;ssAllow=0">http://192.168.1.1/A.asmx/CheckUser?sUser=1&amp;sPwd=1&amp;ssuserid=1&amp;ssAllow=0</a></p><p>关于xml返回的 文档 可以看到相关定义，这里方别为请求 和返回。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-ac98c46b4ea5c174.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以看到 为xmlxml。</p><p>最后还有一种方式最麻烦的调用，就是安卓这边要调用 则找到soap 插件库，调用这么个落后的东西搞那么多麻烦事情。</p><p><a href="https://blog.csdn.net/lyq8479/article/details/6428288?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-2-6428288-blog-76473231.pc_relevant_vip_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-2-6428288-blog-76473231.pc_relevant_vip_default&amp;utm_relevant_index=3">https://blog.csdn.net/lyq8479/article/details/6428288?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-2-6428288-blog-76473231.pc_relevant_vip_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-2-6428288-blog-76473231.pc_relevant_vip_default&amp;utm_relevant_index=3</a></p><p><a href="https://blog.csdn.net/yegshun/article/details/81278976?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-81278976-blog-6428288.pc_relevant_vip_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1-81278976-blog-6428288.pc_relevant_vip_default&amp;utm_relevant_index=1">https://blog.csdn.net/yegshun/article/details/81278976?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1-81278976-blog-6428288.pc_relevant_vip_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1-81278976-blog-6428288.pc_relevant_vip_default&amp;utm_relevant_index=1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/7ce3287f0dfa&quot;&gt;aspnetcoreapi等调用webservice以及处理返回值踩坑之路&lt;/a&gt;&lt;br&gt;文章字数：1511,阅读全文大约需要6分钟&lt;/p&gt;
&lt;p&gt;首先添加引用然他自
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>c能否和c一样快乐的多渠道编译呢？宏定义全局研究</title>
    <link href="https://lozn.top/2022/08/24/c#%E8%83%BD%E5%90%A6%E5%92%8Cc++%E4%B8%80%E6%A0%B7%E5%BF%AB%E4%B9%90%E7%9A%84%E5%A4%9A%E6%B8%A0%E9%81%93%E7%BC%96%E8%AF%91%E5%91%A2%EF%BC%9F%E5%AE%8F%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E7%A0%94%E7%A9%B6/"/>
    <id>https://lozn.top/2022/08/24/c#能否和c++一样快乐的多渠道编译呢？宏定义全局研究/</id>
    <published>2022-08-24T10:19:34.000Z</published>
    <updated>2023-03-16T08:35:11.400Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/b92f0bfad390">c能否和c一样快乐的多渠道编译呢？宏定义全局研究</a><br>文章字数：1010,阅读全文大约需要4分钟</p><p>作为一名安卓开发者，对于多渠道 渠道指定debug release,以及不同渠道引用不同模块，不同渠道编译不同代码是通过gradle实现的，在c#里很多经验多年的人也对此表示陌生，他们都沉浸在业务的代码中，不知道优化代码，也不知道高效的管理代码。 甚至连git都不使用。<br>我决定打破这一点，于是进行的仔细的研究。</p><p>经过研究发现，要多个文件识别同一个宏定义只能在编译设置csproject里面操作 ，太麻烦了点，而后发现界面也是可以设置的，至于release和debug可以勾选单独优化。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-cd7f1da92e6801e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-218f9ad07817a3a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-910897c239f5d725.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>我要的是模块划分+ 项目划分</p><p>如果在项目设置里面设置ACHANNEL ,那么所有文件这样判断，太啰嗦了</p><p>我要把每个模块归类到一个模块， 然后父级别控制这个整个模块 是否编译</p><p>[图片上传中…(image.png-17c6f5-1661394956949-0)]</p><p>也就是说ACHANNEL里面包含A1,A2,A3  单独这样就难搞了，在c++里面可以渠道包含模块，这样控制渠道 渠道就控制模块。</p><p>由于只能单一控制，渠道编译虽然可以，但是毕竟麻烦，具体的麻烦就是要全部改成命令，改成命令就没那么麻烦了，如下图，可以单独设置 全局生效的宏定义，另外有一个DefineConstants也是一个关键的东西，通过控制它也可以控制一些渠道。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-279dd23197a6bacd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后命令 传递<code>p:DefineConstants</code><br><code>msbuild ConsoleApplication1.sln /p:DefineConstants=&quot;DEV&quot; /t:Rebuild</code></p><p>理论上可以在开发工具里面直接可以显示出来，但是需要研究csproject的语法<br>学习相关知识各位朋友可以搜索关键词csproj文件中的DefineConstants  应该可以找到灵感。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-47da34c43a6d20a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>通过添加这个item,我认为可以实现安卓的渠道生产功能。<br>为了方便，我直接用开发工具本来自带的新建功能。<br>最后的效果如下，多了一个VIPCHANNEL<br><img src="https://upload-images.jianshu.io/upload_images/2815884-de90f2c7649c4c76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后</p><p>参考资料</p><p><a href="https://www.bing.com/search?q=c%20sharp%20%20other%20file%20%20define&amp;qs=n&amp;form=QBRE&amp;=%25eManage%20Your%20Search%20History%25E&amp;sp=-1&amp;pq=c%20sharp%20other%20file%20define&amp;sc=7-25&amp;sk=&amp;cvid=D955EA55B480444AAF4BA68E6236BBA4&amp;ghsh=0&amp;ghacc=0&amp;ghpl=">https://www.bing.com/search?q=c%20sharp%20%20other%20file%20%20define&amp;qs=n&amp;form=QBRE&amp;=%25eManage%20Your%20Search%20History%25E&amp;sp=-1&amp;pq=c%20sharp%20other%20file%20define&amp;sc=7-25&amp;sk=&amp;cvid=D955EA55B480444AAF4BA68E6236BBA4&amp;ghsh=0&amp;ghacc=0&amp;ghpl=</a></p><p><a href="https://stackoverflow.com/questions/10916280/how-to-use-define-from-another-file">https://stackoverflow.com/questions/10916280/how-to-use-define-from-another-file</a></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c19dcb01cd4f1848.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><a href="http://blog.walterlv.com/post/known-properties-in-csproj.html">http://blog.walterlv.com/post/known-properties-in-csproj.html</a><br><a href="https://blog.csdn.net/WPwalter/article/details/80371271">https://blog.csdn.net/WPwalter/article/details/80371271</a><br><a href="https://blog.walterlv.com/post/how-to-define-preprocessor-symbols.html">https://blog.walterlv.com/post/how-to-define-preprocessor-symbols.html</a><br><a href="https://www.796t.com/post/MWdiejI=.html">https://www.796t.com/post/MWdiejI=.html</a><br><a href="https://www.google.com/search?q=csproj%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84DefineConstants+&amp;sxsrf=ALiCzsYzIP8qtbA25kLRENhkrjuXYtfCmg:1661389645718&amp;source=hp&amp;ei=TcsGY9vWKdfy-Qb057mgBw&amp;iflsig=AJiK0e8AAAAAYwbZXVx_BfHd4o8G4a2-NZ1ZBlIt3hPM&amp;ved=0ahUKEwibsajd5uD5AhVXed4KHfRzDnQQ4dUDCAc&amp;uact=5&amp;oq=csproj%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84DefineConstants+&amp;gs_lcp=Cgdnd3Mtd2l6EANQAFgAYI4EaABwAHgAgAFhiAFhkgEBMZgBAKABAqABAQ&amp;sclient=gws-wiz">https://www.google.com/search?q=csproj%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84DefineConstants+&amp;sxsrf=ALiCzsYzIP8qtbA25kLRENhkrjuXYtfCmg%3A1661389645718&amp;source=hp&amp;ei=TcsGY9vWKdfy-Qb057mgBw&amp;iflsig=AJiK0e8AAAAAYwbZXVx_BfHd4o8G4a2-NZ1ZBlIt3hPM&amp;ved=0ahUKEwibsajd5uD5AhVXed4KHfRzDnQQ4dUDCAc&amp;uact=5&amp;oq=csproj%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84DefineConstants+&amp;gs_lcp=Cgdnd3Mtd2l6EANQAFgAYI4EaABwAHgAgAFhiAFhkgEBMZgBAKABAqABAQ&amp;sclient=gws-wiz</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/b92f0bfad390&quot;&gt;c能否和c一样快乐的多渠道编译呢？宏定义全局研究&lt;/a&gt;&lt;br&gt;文章字数：1010,阅读全文大约需要4分钟&lt;/p&gt;
&lt;p&gt;作为一名安卓开发者，对于多渠道 渠道指定de
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu更换国内源执行aptgetupdate出现错误</title>
    <link href="https://lozn.top/2022/08/19/ubuntu%E6%9B%B4%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90%E6%89%A7%E8%A1%8Capt-get-update%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF/"/>
    <id>https://lozn.top/2022/08/19/ubuntu更换国内源执行apt-get-update出现错误/</id>
    <published>2022-08-19T16:31:10.000Z</published>
    <updated>2023-03-16T08:35:11.412Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/39d596f6aebb">ubuntu更换国内源执行aptgetupdate出现错误</a><br>文章字数：172,阅读全文大约需要1分钟<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1204fef93f486845.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>复制里面的key然后粘贴到下面替换F60F4B3D7FA2AF80</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">找到 </span><br><span class="line"></span><br><span class="line">```sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F60F4B3D7FA2AF80```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/woshiheweigui/article/details/109200180</span><br><span class="line">国内源</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-proposed main restricted universe multiverse<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a> bionic-proposed main restricted universe multiverse</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">中科大</span><br></pre></td></tr></table></figure><p>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb-src <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb-src <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb-src <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb-src <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-proposed main restricted universe multiverse<br>deb-src <a href="https://mirrors.ustc.edu.cn/ubuntu/">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-proposed main restricted universe multiverse</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">163源</span><br></pre></td></tr></table></figure><p>deb <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-proposed main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</a> bionic-proposed main restricted universe multiverse</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/39d596f6aebb&quot;&gt;ubuntu更换国内源执行aptgetupdate出现错误&lt;/a&gt;&lt;br&gt;文章字数：172,阅读全文大约需要1分钟&lt;br&gt;&lt;img src=&quot;https://uplo
      
    
    </summary>
    
      <category term="编程杂项" scheme="https://lozn.top/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="编程杂项" scheme="https://lozn.top/tags/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>aspnetcoreapi同时getpostjson参数的传递研究</title>
    <link href="https://lozn.top/2022/08/18/asp-net-core-api-%E5%90%8C%E6%97%B6get-post-json%E5%8F%82%E6%95%B0%E7%9A%84%E4%BC%A0%E9%80%92%E7%A0%94%E7%A9%B6/"/>
    <id>https://lozn.top/2022/08/18/asp-net-core-api-同时get-post-json参数的传递研究/</id>
    <published>2022-08-18T09:56:35.000Z</published>
    <updated>2023-03-16T08:35:11.400Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/83732d8ffd03">aspnetcoreapi同时getpostjson参数的传递研究</a><br>文章字数：381,阅读全文大约需要1分钟<br>为了简便参数，简单类型没必要用到get里面了，除非是大量数据</p><p>经过研究发现，下面代码实现了get 或者 post提交的普通get参数aa的同时 传递json的方法，</p><p>dynamic  object 都会转换为<code>JsonElement </code>也可以直接用<code>JsonElement</code></p><p>在谷歌浏览器显示payload，这到底是什么鬼</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[HttpPost(&quot;getAndPost&quot;)]</span><br><span class="line">//[HttpPost(&quot;ng=&#123;Ngtotal&#125;&amp;id=&#123;id&#125;&amp;username=&#123;username&#125;&quot;)]</span><br><span class="line">public String getAndPost(String aa, JsonElement param)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        JObject obj = JObject.Parse(param + &quot;&quot;);</span><br><span class="line">        return &quot;data::&quot; + param.GetType() + &quot;,getParam:&quot; + aa+&quot;,parse Success!&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        return &quot;data::&quot; + param.GetType() + &quot;,getParam:&quot; + aa+&quot;,parse fail!&quot;+e.ToString();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">[HttpGet(&quot;getAndPost1&quot;)]</span><br><span class="line">//[HttpPost(&quot;ng=&#123;Ngtotal&#125;&amp;id=&#123;id&#125;&amp;username=&#123;username&#125;&quot;)]</span><br><span class="line">public String getAndPost1(String aa, JsonElement param)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        JObject obj = JObject.Parse(param + &quot;&quot;);</span><br><span class="line">        return &quot;data::&quot; + param.GetType() + &quot;,getParam:&quot; + aa+&quot;,parse Success!&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        return &quot;data::&quot; + param.GetType() + &quot;,getParam:&quot; + aa+&quot;,parse fail!&quot;+e.ToString();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实际上 就是已经弄好了 get参数 +json 提交就ok了。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-9384e4ff7d10a0d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>在浏览器看不到请求头的表达，只能在单独的选项卡告知 ，此东西叫payload</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-60b3a719211bd4bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>另外 JObject是不支持的，会识别成 整成的get参数，而非payload.</p><p>另外关于属性注解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> [HttpPost(&quot;AddViewFromItem&quot;)]</span><br><span class="line"> public String AddViewFromItem</span><br><span class="line">(String title, String tag, int roomID, float scale, String type, [ FromForm]String  data,bool debug)</span><br><span class="line"> &#123;</span><br></pre></td></tr></table></figure><p>除了FromForm 外 其他都是get提交 <code>FromForm</code>提交的是 <code>application/x-www-url-formencoded</code></p><p><code>FromBody</code> 提交的是<code>application/json</code><br>另外</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">[HttpPost]</span><br><span class="line"></span><br><span class="line">public ActionResult&lt;Data&gt; Post([FromForm][FromBody] Data data)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    return new ActionResult&lt;Data&gt;(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Data</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public string Id &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Txt &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它应该将数据回显给用户，没什么特别的。但是，这两个属性中只有一个有效，具体取决于顺序。</p><p>另外 get也可以用json传递也就是payload,但是  不能有<code>formform</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/83732d8ffd03&quot;&gt;aspnetcoreapi同时getpostjson参数的传递研究&lt;/a&gt;&lt;br&gt;文章字数：381,阅读全文大约需要1分钟&lt;br&gt;为了简便参数，简单类型没必要用到ge
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>文明的进步我的进步都是从懒开始的，关于net中swagger排序的问题研究</title>
    <link href="https://lozn.top/2022/08/17/%E6%96%87%E6%98%8E%E7%9A%84%E8%BF%9B%E6%AD%A5-%E6%88%91%E7%9A%84%E8%BF%9B%E6%AD%A5-%E9%83%BD%E6%98%AF%E4%BB%8E%E6%87%92%E5%BC%80%E5%A7%8B%E7%9A%84%EF%BC%8C%E5%85%B3%E4%BA%8E-net%E4%B8%ADswagger%E6%8E%92%E5%BA%8F%E7%9A%84%E9%97%AE%E9%A2%98%E7%A0%94%E7%A9%B6/"/>
    <id>https://lozn.top/2022/08/17/文明的进步-我的进步-都是从懒开始的，关于-net中swagger排序的问题研究/</id>
    <published>2022-08-17T10:25:09.000Z</published>
    <updated>2023-03-16T08:35:11.424Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/5547d7ea393c">文明的进步我的进步都是从懒开始的，关于net中swagger排序的问题研究</a><br>文章字数：485,阅读全文大约需要1分钟<br>最怕的是没有目标，最怕的是一个人 明明可以高效的处理却偏偏用最低效的办法。</p><p>我目前遇到的问题 是 接口太多 ，调试还需要找 ，不断地下滑，swagger文档所有接口都在一起，我最新写的接口肯定希望再第一个的，</p><p>搜索swagger排序 ，百度找到的只有java 的注解排序，但是后面无意中受到了 分组，分组一定程度上可以解决问题，</p><p>最后找到了这篇不错的文章</p><p><a href="https://www.cnblogs.com/ives/p/swagger.html">https://www.cnblogs.com/ives/p/swagger.html</a><br>实现顺序 通过修改分类枚举即可。<br><img src="https://upload-images.jianshu.io/upload_images/2815884-d9e89126ca8ad096.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-ab1c3a08d3189991.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>实现方法简单，需要 3个类</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-63e1e2bbc73dec08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>增加入口</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-4432ff75d692d07c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-76a688dba783d7e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>定义注解</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-9d2aebaa78c556af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/5547d7ea393c&quot;&gt;文明的进步我的进步都是从懒开始的，关于net中swagger排序的问题研究&lt;/a&gt;&lt;br&gt;文章字数：485,阅读全文大约需要1分钟&lt;br&gt;最怕的是没有目标，最怕的是一
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>关于embeddingwebview在world世界坐标画布宽高适配的问题</title>
    <link href="https://lozn.top/2022/08/15/%E5%85%B3%E4%BA%8Eembedding-webview%E5%9C%A8world%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87--%E7%94%BB%E5%B8%83%E5%AE%BD%E9%AB%98%E9%80%82%E9%85%8D%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://lozn.top/2022/08/15/关于embedding-webview在world世界坐标--画布宽高适配的问题/</id>
    <published>2022-08-15T03:10:57.000Z</published>
    <updated>2023-03-16T08:35:11.416Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/47fd8ad72dbd">关于embeddingwebview在world世界坐标画布宽高适配的问题</a><br>文章字数：568,阅读全文大约需要2分钟<br>embedding webview也叫 ZFbrower,</p><p>在3d 世界相机画布里面使用我发现有一些问题，以及经过多天总结了一些经验，踩了一些坑<br>在broser插件里面 我发现改width无法改变webview绘制的宽度，改browser里面的宽度也同样，broser里面改大只能让文字更小一些，也就是类似里面的缩放 zoom的效果，只有改缩放才能改变3d世界中browser里面的大小，<br>那么我这个背景宽度永远大于browser的宽度究竟怎么解决呢？</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-6766cf44c959f170.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="x"></p><p>我经过多天的研究，突然灵机一动，想到了图片和browser 保持一致大小的办法了，只能改缩放值意味着我的rect 宽度 高度只能固定为1 ，然后只改变缩放值，这样 背景的宽度就可以broser的宽度保持一致。。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-5097e31f587cff59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>至于为什么要用背景，主要的问题是描边插件 穿透问题 还有玻璃穿透问题<br><img src="https://upload-images.jianshu.io/upload_images/2815884-2777efb428363286.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="a"></p><p>搞不懂究竟哪里导致， 我发现并不是图层问题也不是sorder 问题</p><p>虽然解决了同样大小问题，但是背景问题依然无能为力 因为设置的背景不管是父级别还是同级，都会被遮挡。</p><p>![SA$WZ14BI9(J)HY8F_7V6&#96;1.png](<a href="https://upload-images.jianshu.io/upload_images/2815884-b5718bd0269ec3d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240">https://upload-images.jianshu.io/upload_images/2815884-b5718bd0269ec3d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240</a>)</p><p>玻璃被穿透，描边被穿透，在3d世界中我实在不知道怎么改，改图层改排序都解决不了问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/47fd8ad72dbd&quot;&gt;关于embeddingwebview在world世界坐标画布宽高适配的问题&lt;/a&gt;&lt;br&gt;文章字数：568,阅读全文大约需要2分钟&lt;br&gt;embedding webv
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity单例模式的样板代码</title>
    <link href="https://lozn.top/2022/08/13/unity%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%A0%B7%E6%9D%BF%E4%BB%A3%E7%A0%81/"/>
    <id>https://lozn.top/2022/08/13/unity单例模式的样板代码/</id>
    <published>2022-08-13T03:14:24.000Z</published>
    <updated>2023-03-16T08:35:11.412Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4b8655e19d72">unity单例模式的样板代码</a><br>文章字数：189,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// A static instance is similar to a singleton, but instead of destroying any new</span><br><span class="line">/// instances, it overrides the current instance. This is handy for resetting the state</span><br><span class="line">/// and saves you doing it manually</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class StaticInstance&lt;T&gt; : MonoBehaviour where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public static T Instance &#123; get; private set; &#125;</span><br><span class="line">    protected virtual void Awake() =&gt; Instance = this as T;</span><br><span class="line">    protected virtual void OnApplicationQuit()</span><br><span class="line">    &#123;</span><br><span class="line">        Instance = null;</span><br><span class="line">        Destroy(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// This transforms the static instance into a basic singleton. This will destroy any new</span><br><span class="line">/// versions created, leaving the original instance intact</span><br><span class="line">/// ///这将把静态实例转换成一个基本的单例。这将摧毁任何新的</span><br><span class="line">///创建的版本，保留原来的实例不变</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class Singleton&lt;T&gt; : StaticInstance&lt;T&gt; where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Instance != null) Destroy(gameObject);</span><br><span class="line">        base.Awake();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">//最后，我们有了一个持久版本的单例。这将通过现场生存</span><br><span class="line">/// / / 负载。非常适合需要有状态、持久数据的系统类。或音频来源</span><br><span class="line">///通过加载屏幕播放音乐，等等</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public abstract class PersistentSingleton&lt;T&gt; : Singleton&lt;T&gt; where T : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        DontDestroyOnLoad(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中<code>PersistentSingleton.DontDestroyOnLoad</code> 是不会随场景变更而销毁，用于音频管理器。如果同一个节点下 存在单例模式，则会影响该节点所有脚本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4b8655e19d72&quot;&gt;unity单例模式的样板代码&lt;/a&gt;&lt;br&gt;文章字数：189,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>unity滚轮控制摄像机距离</title>
    <link href="https://lozn.top/2022/08/13/unity%E6%BB%9A%E8%BD%AE%E6%8E%A7%E5%88%B6%E6%91%84%E5%83%8F%E6%9C%BA%E8%B7%9D%E7%A6%BB/"/>
    <id>https://lozn.top/2022/08/13/unity滚轮控制摄像机距离/</id>
    <published>2022-08-13T01:48:23.000Z</published>
    <updated>2023-03-16T08:35:11.412Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/5164f28db85d">unity滚轮控制摄像机距离</a><br>文章字数：195,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;   if (Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line">             CinemachineVirtualCamera virtualCamera = cam as CinemachineVirtualCamera;</span><br><span class="line">             CinemachineComponentBase body = virtualCamera.GetCinemachineComponent(CinemachineCore.Stage.Body);</span><br><span class="line">             if (body is not CinemachineFramingTransposer)</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             CinemachineFramingTransposer transposer = (body as CinemachineFramingTransposer);</span><br><span class="line">             float cameraDistance = transposer.m_CameraDistance;</span><br><span class="line">             if (GameUtil.IsPointerOverUI(Input.mousePosition))</span><br><span class="line">             &#123;</span><br><span class="line">                 return;</span><br><span class="line">             &#125;</span><br><span class="line">             float delta_z = -Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * ZoomSpeed;</span><br><span class="line">       /*      if (distance == 0 ||Mathf.Abs(distance-transposer.m_CameraDistance)&gt;10) //后面的逻辑主要是 内外摄像机切换的时候他们两个必定是初始值不一样的，所以当检测到明显的差距那么初始值就重新赋值一下</span><br><span class="line">             &#123;</span><br><span class="line">                 distance = transposer.m_CameraDistance;</span><br><span class="line">             &#125;*/</span><br><span class="line">             //distance += delta_z;</span><br><span class="line">             transposer.m_CameraDistance += delta_z;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是非虚拟相机则修改position.z轴就行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/5164f28db85d&quot;&gt;unity滚轮控制摄像机距离&lt;/a&gt;&lt;br&gt;文章字数：195,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>解决缩放完美插入到物体上方的方法探讨</title>
    <link href="https://lozn.top/2022/08/12/%E8%A7%A3%E5%86%B3%E7%BC%A9%E6%94%BE%E5%AE%8C%E7%BE%8E%E6%8F%92%E5%85%A5%E5%88%B0%E7%89%A9%E4%BD%93%E4%B8%8A%E6%96%B9%E7%9A%84%E6%96%B9%E6%B3%95%E6%8E%A2%E8%AE%A8/"/>
    <id>https://lozn.top/2022/08/12/解决缩放完美插入到物体上方的方法探讨/</id>
    <published>2022-08-12T07:37:20.000Z</published>
    <updated>2023-03-16T08:35:11.428Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4cc4d2d77d51">解决缩放完美插入到物体上方的方法探讨</a><br>文章字数：1064,阅读全文大约需要4分钟<br>首先被点击的物品 :</p><p>被点击的物品 有的是轴心 有的是 顶部 有的是底部。<br>如果是底部那么得到的物体y就是底部的需要把被点击物体y+当前物体材质的高度y加上才定位到顶点y,</p><p>然后要插入顶点 则直接y等于顶点就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">      /// 插入一个指定长度的柱子 位于指定的y轴上方 </span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=&quot;position&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;floatY&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;verticalMode&quot;&gt;0 代表 底部  1 代表中心 1 代表 顶部&lt;/param&gt;</span><br><span class="line">      /// &lt;param name=&quot;color&quot;&gt;&lt;/param&gt;</span><br><span class="line">      internal static void DebugPrimitiveColorHeightInsertBar(Vector3 position, Vector3 size, float verticalMode, float selfHeight, Color color)</span><br><span class="line">      &#123;</span><br><span class="line">          GameObject gameObject = GameObject.CreatePrimitive(PrimitiveType.Cube);</span><br><span class="line">          gameObject.transform.localScale = new Vector3(0.1f, selfHeight, 0.1f);</span><br><span class="line">          gameObject.GetComponent&lt;Renderer&gt;().material.color = color;</span><br><span class="line">          float baseY;</span><br><span class="line">          if (verticalMode == 0)//轴心为底部 加上自身大小</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y + size.y;</span><br><span class="line">          &#125;</span><br><span class="line">          else if (verticalMode == 1)//轴心为中心 加上自身大小的一半</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y + (size.y / 2f);//轴心Y</span><br><span class="line">              gameObject.transform.position = new Vector3(position.x, baseY +(selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), position.z);</span><br><span class="line">          &#125;</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">              baseY = position.y;//轴心为顶部 则不需要加上自身大小</span><br><span class="line">              gameObject.transform.position = new Vector3(position.x, baseY + (selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), position.z);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DebugPrimitiveColorHeightInsertBar(clickedMaterialGameObject.transform.position, clickedMaterialSize, 1, 3, Color.red);</span><br><span class="line">        DebugPrimitiveColorHeightInsertBar(clickedMaterialGameObject.transform.position, clickedMaterialSize, 0, 30, Color.green);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-17bde960c1c751e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>为了验证是否精确，于是我设置了一个超长缩放的条块</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-1e882a2404ff2a16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>上面的红色平面 是和红色块是一起的，绿色平面在天上了</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c452f7f7c270e9c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>立方体的轴心是在立方体中心<br>但是测试的时候发现 还是基于y坐标加材质的高度才能计算出顶点，<br>但是测试其他不规则物体的时候轴心是底部，但是也是用了被点击物体y坐标+被点击物体的高度材质   + （1-(缩放后的高度)&#x2F;2） </p><h3 id="关于计算任何轴心的方式我陷入了沉思"><a href="#关于计算任何轴心的方式我陷入了沉思" class="headerlink" title="关于计算任何轴心的方式我陷入了沉思"></a>关于计算任何轴心的方式我陷入了沉思</h3><p><img src="https://upload-images.jianshu.io/upload_images/2815884-e8c0cbadfddb5796.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>上图的黑色 平面是用于输出y坐标轴心 忽略原始轴心的，但是网上这个方法似乎并不好使。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">    Vector3 vector3 = CalcModelCenter(clickedMaterialGameObject.transform);</span><br><span class="line">DebugPrimitiveColorHeight(clickedMaterialGameObject.transform.position, vector3.y, Color.black);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      internal static void DebugPrimitiveColorHeight(Vector3 position, float floatY, Color color)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject gameObject = GameObject.CreatePrimitive(PrimitiveType.Plane);</span><br><span class="line">            gameObject.transform.localScale = new Vector3(0.4f, 1, 0.4f);</span><br><span class="line">            gameObject.GetComponent&lt;Renderer&gt;().material.color = color;</span><br><span class="line">            gameObject.transform.position = new Vector3(position.x, floatY, position.z);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /// &lt;summary&gt;</span><br><span class="line">        /// 计算模型的中心点</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=&quot;tran&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        public static Vector3 CalcModelCenter(Transform tran)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 position = tran.position;</span><br><span class="line">            Quaternion quaternion = tran.rotation;</span><br><span class="line">            Vector3 scale = tran.localScale;</span><br><span class="line">            tran.position = Vector3.zero;</span><br><span class="line">            tran.rotation = Quaternion.Euler(Vector3.zero);</span><br><span class="line">            tran.localScale = Vector3.one;</span><br><span class="line">            Vector3 center = Vector3.zero;</span><br><span class="line">            Renderer[] renders = tran.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">            foreach (Renderer child in renders)</span><br><span class="line">            &#123;</span><br><span class="line">                center += child.bounds.center;</span><br><span class="line">            &#125;</span><br><span class="line">            center /= tran.GetComponentsInChildren&lt;Renderer&gt;().Length;</span><br><span class="line">            Bounds bounds = new Bounds(center, Vector3.zero);</span><br><span class="line">            foreach (Renderer item in renders)</span><br><span class="line">            &#123;</span><br><span class="line">                bounds.Encapsulate(item.bounds);</span><br><span class="line">            &#125;</span><br><span class="line">            tran.position = position;</span><br><span class="line">            tran.rotation = quaternion;</span><br><span class="line">            tran.localScale = scale;</span><br><span class="line">            foreach (Transform item in tran)</span><br><span class="line">            &#123;</span><br><span class="line">                item.position = item.position - bounds.center;</span><br><span class="line">            &#125;</span><br><span class="line">            return bounds.center + tran.position;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以到底有没有忽略轴心真正得出顶点低点的正确代码呢。关于插入顶点的问题 </p><p>在rect  cavans world 有点问题了<br><img src="https://upload-images.jianshu.io/upload_images/2815884-b809fecde20a3ad9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="x"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-7c05538b19f52578.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xxx"></p><p> 一个是缩放的立方体照样 精准插入头部，另外一个是图表，我加了box mesh 等于图表大小， 缩放了rect size ,显然算得有点偏差了，缩放值越大偏差越大 ，现在我计算得到大小大概是20 ，但是显然中心点算错了，图表偏离那么多<img src="https://upload-images.jianshu.io/upload_images/2815884-02b0cb55596173f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xx"></p><p>所以各位大佬 到底怎么解决这个问题。</p><p>最后我突然发现我有把canvas也缩放过得呢，所以 获取父canvas 获取缩放值，也乘上缩放值 ，进行还原 真实的大小，得到了真实的大小&#x2F;2就能得到摆放的位置了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">          DebugSmartPrimitiveColorHeight(clickedMaterialGameObject.transform, clickedMaterialSize,0,Color.blue);</span><br><span class="line">          float parentScale=chartGameObject.GetComponentInParent&lt;Canvas&gt;().transform.localScale.y;</span><br><span class="line">          GameUtil.DebugSmallInsertArticleTopBy(clickedMaterialGameObject.transform, clickedMaterialSize, chartGameObject.GetComponentInChildren&lt;Collider&gt;().bounds.size.y* chartGameObject.transform.localScale.y* parentScale, 0,chartGameObject.transform);</span><br><span class="line">          GameObject gameObjectTest = GameObject.CreatePrimitive(PrimitiveType.Cube);</span><br><span class="line">          gameObjectTest.transform.localScale = new Vector3(0.2f, 30f, 0.2f);</span><br><span class="line">          GameUtil.DebugSmallInsertArticleTopBy(clickedMaterialGameObject.transform, clickedMaterialSize, gameObjectTest.transform.localScale.y, 0, gameObjectTest.transform);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     internal static void DebugSmallInsertArticleTopBy(Transform transform, Vector3 size, float selfHeight,float margin, Transform transformInnsert)</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">          float baseY;</span><br><span class="line">          Vector3 vector3 = GetCenter(transform);</span><br><span class="line">          baseY = vector3.y + size.y+ margin;</span><br><span class="line">          transformInnsert.position = new Vector3(transform.position.x, baseY  + (selfHeight == 1 ? 0 : (selfHeight - 1) / 2f), transform.position.z);</span><br><span class="line">          Debug.Log(&quot;插入&quot; + transform.name + &quot;物体上方,被插入物体:&quot; + transformInnsert.name + &quot;,被插入物体高度:&quot; + selfHeight + &quot;,顶点y：&quot; + baseY + &quot;,插入的物体y:&quot; + transformInnsert.position.y);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">      /// 获得中心点</span><br><span class="line">      /// &lt;/summary&gt;</span><br><span class="line">      /// &lt;param name=&quot;target&quot;&gt;&lt;/param&gt;</span><br><span class="line">      /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">      public static Vector3 GetCenter(Transform target)</span><br><span class="line">      &#123;</span><br><span class="line">          Renderer[] mrs = target.GetComponentsInChildren&lt;Renderer&gt;();</span><br><span class="line">          Vector3 center = target.transform.position;</span><br><span class="line">          if (mrs.Length != 0)</span><br><span class="line">          &#123;</span><br><span class="line">              Bounds bounds = new Bounds(center, Vector3.zero);</span><br><span class="line">              foreach (Renderer item in mrs)</span><br><span class="line">              &#123;</span><br><span class="line">                  bounds.Encapsulate(item.bounds);</span><br><span class="line">              &#125;</span><br><span class="line">              center = bounds.center;</span><br><span class="line">          &#125;</span><br><span class="line">          return center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>至于这个获取被点击物品中心点的应该还是有问题的，我发现得到的可能是底部位置 ，所以我加了被点击物体的高度才得到 顶部位置<br>最后总结思路:被点击物体的顶点<br>然后<code>被点击物体的顶部位置 +（被插入的真实大小(需要还原缩放之前的大小)/2）</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4cc4d2d77d51&quot;&gt;解决缩放完美插入到物体上方的方法探讨&lt;/a&gt;&lt;br&gt;文章字数：1064,阅读全文大约需要4分钟&lt;br&gt;首先被点击的物品 :&lt;/p&gt;
&lt;p&gt;被点击的物品 有的是轴心 有
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【unity原创】点击地面产生效果的实现</title>
    <link href="https://lozn.top/2022/08/12/%E3%80%90unity%E5%8E%9F%E5%88%9B%E3%80%91%E7%82%B9%E5%87%BB%E5%9C%B0%E9%9D%A2%E4%BA%A7%E7%94%9F%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://lozn.top/2022/08/12/【unity原创】点击地面产生效果的实现/</id>
    <published>2022-08-12T02:10:15.000Z</published>
    <updated>2023-03-16T08:35:11.412Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/480c71da7e4b">【unity原创】点击地面产生效果的实现</a><br>文章字数：265,阅读全文大约需要1分钟<br>首先要做一个3d预制体 然后欧拉角 要调整</p><p>上面的每一句代码都有用，点击之后会发现和鼠标的位置有点出入，因为点击是一个斜向的射线，所以要尽量靠近鼠标，所以让这个点击的效果物体靠近鼠标一些就要朝向摄像机，并移动1米，<br>但是 lookat 会修改x坐标 ，导致整个点击效果 不是平的而是倾斜的 所以需要改成 0，</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-70b1be284d35e4e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">                        GameObject clickObject = Instantiate(effectGo);</span><br><span class="line">                                    clickObject.GetComponent&lt;Canvas&gt;().worldCamera = ScreenPageManager.Instance.worldCamera;</span><br><span class="line">                                    clickObject.transform.eulerAngles = Vector3.zero;</span><br><span class="line">                                    clickObject.transform.position = point;</span><br><span class="line">                                    clickObject.transform.position = new Vector3(hitInfoRoom.point.x, tempParent.position.y+1.5f, hitInfoRoom.point.z);</span><br><span class="line">//不看摄像机移动就方向是错的。</span><br><span class="line">                                    clickObject.transform.LookAt(Camera.main.transform, Vector3.up);</span><br><span class="line">                                    clickObject.transform.forward = Camera.main.transform.forward;</span><br><span class="line">//解决倾斜问题</span><br><span class="line">                                    clickObject.transform.rotation = Quaternion.Euler(0,clickObject.transform.eulerAngles.y, clickObject.transform.eulerAngles.z);</span><br><span class="line">                                    clickObject.transform.Translate(Vector3.forward);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外我这点击的是房子，因为我并没有做地面的，房子本身有地面，所以点击后 点击的是房子，好在轴心是房子底部，而非中心点，否则 y轴配置需要微调。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/480c71da7e4b&quot;&gt;【unity原创】点击地面产生效果的实现&lt;/a&gt;&lt;br&gt;文章字数：265,阅读全文大约需要1分钟&lt;br&gt;首先要做一个3d预制体 然后欧拉角 要调整&lt;/p&gt;
&lt;p&gt;上面
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
