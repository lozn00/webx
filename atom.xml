<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>情迁博客</title>
  
  <subtitle>情迁美好时光追忆 执拗如我 执着如我,纠结如我,虽然无法活出最好的自己,但是总算活出一个不一样的自己!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lozn.top/"/>
  <updated>2023-08-20T06:56:44.284Z</updated>
  <id>https://lozn.top/</id>
  
  <author>
    <name>情随事迁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://lozn.top/2023/08/20/soft_use_status/"/>
    <id>https://lozn.top/2023/08/20/soft_use_status/</id>
    <published>2023-08-20T06:56:44.284Z</published>
    <updated>2023-08-20T06:56:44.284Z</updated>
    
    <content type="html"><![CDATA[<p>title:有关新软件旧软件相关情况<br>date: 2021-4-21</p><p>####### 请注意,部分软件仅供学习使用,下载后于24小时内删除,请勿贩卖,非法盈利是违法行为!后果自负!<br>2021-05-03 14:29:00</p><p>有关q++ ,v++软件不再更新,机器人软件和我新开发的一个神之手还是可以继续维护的,因为这两个软件不涉及到一些法律风险.<br>神之手为一款19年研发的免root加载xposed框架,方便测试人员,开发人员进行极客体验的框架,使用出现软件被篡改导致被封号情况后果自负!这里一切软件都只是为了研究技术使用,不得用于违法,商业用途!<br>否则后果和我一样,<br>hookui是我几年前写的软件，现在免费拿出来，给喜欢逆向的朋友们。</p><p><a href="http://otads.yhzu.cn/">买东西别上淘宝了,没有优惠券的.直接来这里</a></p><h4 id="如果发现有人利用非商业软件进行-贩卖-请截图发给我-qq3508264"><a href="#如果发现有人利用非商业软件进行-贩卖-请截图发给我-qq3508264" class="headerlink" title="如果发现有人利用非商业软件进行 贩卖   请截图发给我 qq3508264"></a>如果发现有人利用非商业软件进行 贩卖   请截图发给我 qq3508264</h4><pre><code>2017-2-21 19:38:23</code></pre><p><a href="http://lojunx.github.io/about">点击这里</a></p><h4 id="如果你经济条件比较好-能够自己养活自己-可以打赏我"><a href="#如果你经济条件比较好-能够自己养活自己-可以打赏我" class="headerlink" title="如果你经济条件比较好,能够自己养活自己 可以打赏我"></a>如果你经济条件比较好,能够自己养活自己 可以打赏我</h4><p><a href="http://lojunx.github.io/about">先打赏再通知我也可以点击这里</a></p><h4 id="想下载我开发的所有个人软件"><a href="#想下载我开发的所有个人软件" class="headerlink" title="想下载我开发的所有个人软件?"></a>想下载我开发的所有个人软件?</h4><p>点击将会进入网盘，包括pc软件和手机软件</p><p><a href="https://lojunx.github.io/update/qq_redpackaget.html">点击进行跳转</a></p><p>##########</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title:有关新软件旧软件相关情况&lt;br&gt;date: 2021-4-21&lt;/p&gt;
&lt;p&gt;####### 请注意,部分软件仅供学习使用,下载后于24小时内删除,请勿贩卖,非法盈利是违法行为!后果自负!&lt;br&gt;2021-05-03 14:29:00&lt;/p&gt;
&lt;p&gt;有关q++ 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lozn.top/2023/08/20/hello-world%E4%B8%8Ehexo%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>https://lozn.top/2023/08/20/hello-world与hexo的开始/</id>
    <published>2023-08-20T06:56:44.276Z</published>
    <updated>2023-08-20T06:56:44.276Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>androidrxjava文本改变切换后台执行耗时处理完毕再返回</title>
    <link href="https://lozn.top/2023/03/13/android-rxjava%E6%96%87%E6%9C%AC%E6%94%B9%E5%8F%98-%E5%88%87%E6%8D%A2%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C-%E8%80%97%E6%97%B6%E5%A4%84%E7%90%86%E5%AE%8C%E6%AF%95%E5%86%8D%E8%BF%94%E5%9B%9E/"/>
    <id>https://lozn.top/2023/03/13/android-rxjava文本改变-切换后台执行-耗时处理完毕再返回/</id>
    <published>2023-03-13T06:28:19.000Z</published>
    <updated>2023-08-20T06:56:44.268Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/2665e7b15abc">androidrxjava文本改变切换后台执行耗时处理完毕再返回</a><br>文章字数：165,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">RxTextView.textChanges(getBinding().ev)</span><br><span class="line">           //限流时间500ms</span><br><span class="line">           .debounce(500, TimeUnit.MILLISECONDS)</span><br><span class="line"></span><br><span class="line">           .observeOn(Schedulers.io())</span><br><span class="line">           //CharSequence转换为String</span><br><span class="line">           .flatMap(new Function&lt;CharSequence, ObservableSource&lt;Bitmap&gt;&gt;() &#123;</span><br><span class="line">               @Override</span><br><span class="line">               public ObservableSource&lt;Bitmap&gt; apply(CharSequence charSequence) throws Throwable &#123;</span><br><span class="line">                   PrintLabelModel model = ScriptEngine.script2printLabelModel(charSequence.toString());</span><br><span class="line">                   Bitmap bitmap = ModelPrintUtil.genereateBitmap(model);</span><br><span class="line">                   // 在后台线程中执行耗时任务并返回Bitmap</span><br><span class="line">                   return Observable.just(bitmap);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">           .to(AutoDispose.autoDisposable(AndroidLifecycleScopeProvider.from(this))).subscribe(new Consumer&lt;Bitmap&gt;() &#123;</span><br><span class="line">               @Override</span><br><span class="line">               public void accept(Bitmap o) throws Throwable &#123;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><p>在上面的代码中，observeOn(Schedulers.io())将让下游的flatMap操作符在IO线程上执行。在这里，您可以使用generateBitmap()方法执行任何耗时的任务，例如从网络下载图片或执行某些计算。一旦您生成了Bitmap，您可以使用Observable.just(bitmap)将其发送回主线程。</p><p>最后，observeOn(AndroidSchedulers.mainThread())将使下游操作符在主线程上执行，以便您可以使用生成的Bitmap执行任何UI更新。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/2665e7b15abc&quot;&gt;androidrxjava文本改变切换后台执行耗时处理完毕再返回&lt;/a&gt;&lt;br&gt;文章字数：165,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>java自定义定义脚本规则解析简单的脚本实现打印图形布局定制咨询人工智能找实现灵感1小时实现</title>
    <link href="https://lozn.top/2023/03/11/java%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC%E8%A7%84%E5%88%99,%E8%A7%A3%E6%9E%90%E7%AE%80%E5%8D%95%E7%9A%84%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%89%93%E5%8D%B0%E5%9B%BE%E5%BD%A2%E5%B8%83%E5%B1%80%E5%AE%9A%E5%88%B6-%E5%92%A8%E8%AF%A2%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%89%BE%E5%AE%9E%E7%8E%B0%E7%81%B5%E6%84%9F1%E5%B0%8F%E6%97%B6%E5%AE%9E%E7%8E%B0/"/>
    <id>https://lozn.top/2023/03/11/java自定义定义脚本规则,解析简单的脚本实现打印图形布局定制-咨询人工智能找实现灵感1小时实现/</id>
    <published>2023-03-11T03:13:23.000Z</published>
    <updated>2023-08-20T06:56:44.280Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/690cbb453c49">java自定义定义脚本规则解析简单的脚本实现打印图形布局定制咨询人工智能找实现灵感1小时实现</a><br>文章字数：1579,阅读全文大约需要6分钟<br>用java   构建一个 自定义的脚本解析字符串,  如下 label(1,1,fa,true)   就动态变成new Label对象 并传递参数1,1,”fa”,true进去, 同时还支持整数变量的运算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">以下是一个简单的Java代码示例，用于解析类似于 &quot;label(1,1,fa,true)&quot; 的字符串，并将其转换为对应的Label对象。</span><br><span class="line"></span><br><span class="line">java</span><br><span class="line">Copy code</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.util.regex.*;</span><br><span class="line"></span><br><span class="line">public class ScriptParser &#123;</span><br><span class="line">    private Map&lt;String, Integer&gt; variables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public Object evaluate(String script) &#123;</span><br><span class="line">        // 解析整数变量</span><br><span class="line">        Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">        Matcher varMatcher = varPattern.matcher(script);</span><br><span class="line">        while (varMatcher.find()) &#123;</span><br><span class="line">            String varName = varMatcher.group(1);</span><br><span class="line">            int varValue = Integer.parseInt(varMatcher.group(2));</span><br><span class="line">            variables.put(varName, varValue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 解析函数调用</span><br><span class="line">        Pattern funcPattern = Pattern.compile(&quot;(\\w+)\\((.*)\\)&quot;);</span><br><span class="line">        Matcher funcMatcher = funcPattern.matcher(script);</span><br><span class="line">        if (funcMatcher.matches()) &#123;</span><br><span class="line">            String funcName = funcMatcher.group(1);</span><br><span class="line">            String[] args = funcMatcher.group(2).split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">            if (funcName.equals(&quot;label&quot;)) &#123;</span><br><span class="line">                int x = evaluateInt(args[0].trim());</span><br><span class="line">                int y = evaluateInt(args[1].trim());</span><br><span class="line">                String text = evaluateString(args[2].trim());</span><br><span class="line">                boolean visible = evaluateBoolean(args[3].trim());</span><br><span class="line"></span><br><span class="line">                return new Label(x, y, text, visible);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int evaluateInt(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression);</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)\\s*([\\+\\-\\*\\/])\\s*(\\w+)&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int left = evaluateInt(exprMatcher.group(1).trim());</span><br><span class="line">                int right = evaluateInt(exprMatcher.group(3).trim());</span><br><span class="line">                switch (exprMatcher.group(2).trim()) &#123;</span><br><span class="line">                    case &quot;+&quot;:</span><br><span class="line">                        return left + right;</span><br><span class="line">                    case &quot;-&quot;:</span><br><span class="line">                        return left - right;</span><br><span class="line">                    case &quot;*&quot;:</span><br><span class="line">                        return left * right;</span><br><span class="line">                    case &quot;/&quot;:</span><br><span class="line">                        return left / right;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateString(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return String.valueOf(variables.get(expression));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是字符串，去掉引号</span><br><span class="line">        if (expression.startsWith(&quot;\&quot;&quot;) &amp;&amp; expression.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            return expression.substring(1, expression.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private boolean evaluateBoolean(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression) != 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是布尔值，直接转换为布尔型</span><br><span class="line">        if (expression.equalsIgnoreCase(&quot;true&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (expression.equalsIgnoreCase(&quot;false&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java</span><br><span class="line">Copy code</span><br><span class="line">String script = &quot;label(1, 2, \&quot;hello\&quot;, true)&quot;;</span><br><span class="line">ScriptParser parser = new ScriptParser();</span><br><span class="line">Label label = (Label)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>调整后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class ScriptEngine &#123;</span><br><span class="line"></span><br><span class="line">    private Map&lt;String, Integer&gt; variables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public PrintLabelModel.BasePrint evaluate(String script) &#123;</span><br><span class="line">        // 解析整数变量</span><br><span class="line">        Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">        Matcher varMatcher = varPattern.matcher(script);</span><br><span class="line">        while (varMatcher.find()) &#123;</span><br><span class="line">            String varName = varMatcher.group(1);</span><br><span class="line">            int varValue = Integer.parseInt(varMatcher.group(2));</span><br><span class="line">            variables.put(varName, varValue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 解析函数调用</span><br><span class="line">        Pattern funcPattern = Pattern.compile(&quot;(\\w+)\\((.*)\\)&quot;);</span><br><span class="line">        Matcher funcMatcher = funcPattern.matcher(script);</span><br><span class="line">        if (funcMatcher.matches()) &#123;</span><br><span class="line">            String funcName = funcMatcher.group(1);</span><br><span class="line">            String[] args = funcMatcher.group(2).split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">            if (funcName.equals(&quot;label&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                int x = evaluateInt(args[0].trim());</span><br><span class="line">                int y = evaluateInt(args[1].trim());</span><br><span class="line">                String label = evaluateString(args[2].trim());</span><br><span class="line">                String text = evaluateString(args[3].trim());</span><br><span class="line">                PrintLabelModel.TextLeftRight printLabelModel = new PrintLabelModel.TextLeftRight(x, y, label, text);</span><br><span class="line">                int fontSize = args.length &gt; 4 ? evaluateInt(args[4].trim()) : printLabelModel.fontSize;</span><br><span class="line">                int limitRight = args.length &gt; 5 ? evaluateInt(args[5].trim()) : 0;</span><br><span class="line">                printLabelModel.fontSize = fontSize;</span><br><span class="line">                printLabelModel.limitRight = limitRight;</span><br><span class="line">                return printLabelModel;</span><br><span class="line">            &#125; else if (funcName.equals(&quot;text&quot;) &amp;&amp; args.length &gt; 2) &#123;</span><br><span class="line">                int x = evaluateInt(args[0].trim());</span><br><span class="line">                int y = evaluateInt(args[1].trim());</span><br><span class="line">                String text = evaluateString(args[2].trim());</span><br><span class="line">                PrintLabelModel.Text printLabelModel = new PrintLabelModel.Text(x, y, text);</span><br><span class="line">                int fontSize = args.length &gt; 3 ? evaluateInt(args[3].trim()) : printLabelModel.fontsize;</span><br><span class="line">                int limitRight = args.length &gt; 4 ? evaluateInt(args[4].trim()) : 0;</span><br><span class="line">                printLabelModel.fontsize = fontSize;</span><br><span class="line">                printLabelModel.limitRight = limitRight;</span><br><span class="line">                return printLabelModel;</span><br><span class="line">            &#125; else if (funcName.equals(&quot;qrcode&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                int x = evaluateInt(args[0].trim());</span><br><span class="line">                int y = evaluateInt(args[1].trim());</span><br><span class="line">                int size = evaluateInt(args[2].trim());</span><br><span class="line">                String text = evaluateString(args[3].trim());</span><br><span class="line">                boolean showText = args.length &gt; 4 ? evaluateBoolean(args[4].trim()) : false;</span><br><span class="line">                PrintLabelModel.QRCode printLabelModel = new PrintLabelModel.QRCode(x, y, size, text, showText);</span><br><span class="line">                return printLabelModel;</span><br><span class="line">            &#125; else if (funcName.equals(&quot;barcode&quot;) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                int x = evaluateInt(args[0].trim());</span><br><span class="line">                int y = evaluateInt(args[1].trim());</span><br><span class="line">                int width = evaluateInt(args[2].trim());</span><br><span class="line">                int height = evaluateInt(args[3].trim());</span><br><span class="line">                String text = evaluateString(args[4].trim());</span><br><span class="line">                boolean showText = args.length &gt; 5 ? evaluateBoolean(args[5].trim()) : false;</span><br><span class="line">                PrintLabelModel.BarCode printLabelModel = new PrintLabelModel.BarCode(x, y,  width, height, text, showText);</span><br><span class="line">                int fontSize = args.length &gt; 6 ?evaluateInt(args[6].trim()):printLabelModel.fontsize;</span><br><span class="line">                printLabelModel.fontsize=fontSize;</span><br><span class="line">                return printLabelModel;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int evaluateInt(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression);</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)\\s*([\\+\\-\\*\\/])\\s*(\\w+)&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int left = evaluateInt(exprMatcher.group(1).trim());</span><br><span class="line">                int right = evaluateInt(exprMatcher.group(3).trim());</span><br><span class="line">                switch (exprMatcher.group(2).trim()) &#123;</span><br><span class="line">                    case &quot;+&quot;:</span><br><span class="line">                        return left + right;</span><br><span class="line">                    case &quot;-&quot;:</span><br><span class="line">                        return left - right;</span><br><span class="line">                    case &quot;*&quot;:</span><br><span class="line">                        return left * right;</span><br><span class="line">                    case &quot;/&quot;:</span><br><span class="line">                        return left / right;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateString(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return String.valueOf(variables.get(expression));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是字符串，去掉引号</span><br><span class="line">        if (expression.startsWith(&quot;\&quot;&quot;) &amp;&amp; expression.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            return expression.substring(1, expression.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private boolean evaluateBoolean(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression) != 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是布尔值，直接转换为布尔型</span><br><span class="line">        if (expression.equalsIgnoreCase(&quot;true&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (expression.equalsIgnoreCase(&quot;false&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过调整发现他写的不支持多行调整后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">public class ScriptEngine &#123;</span><br><span class="line"></span><br><span class="line">    private Map&lt;String, Integer&gt; variables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public PrintLabelModel evaluate(String script) &#123;</span><br><span class="line">        PrintLabelModel model=new PrintLabelModel();</span><br><span class="line"></span><br><span class="line">        String[] split = script.split(&quot;\n&quot;);</span><br><span class="line">        for (String currentLine : split) &#123;</span><br><span class="line">            if(currentLine==null||currentLine.trim().length()==0||currentLine.startsWith(&quot;#&quot;) ||currentLine.startsWith(&quot;//&quot;)||currentLine.startsWith(&quot;--&quot;))&#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            // 解析整数变量</span><br><span class="line">            Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">            Matcher varMatcher = varPattern.matcher(script);</span><br><span class="line">            while (varMatcher.find()) &#123;</span><br><span class="line">                String varName = varMatcher.group(1);</span><br><span class="line">                int varValue = Integer.parseInt(varMatcher.group(2));</span><br><span class="line">                variables.put(varName, varValue);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 解析函数调用</span><br><span class="line">            Pattern funcPattern = Pattern.compile(&quot;(\\w+)\\((.*)\\)&quot;);</span><br><span class="line">            Matcher funcMatcher = funcPattern.matcher(currentLine);</span><br><span class="line">            if (funcMatcher.matches()) &#123;</span><br><span class="line">                String funcName = funcMatcher.group(1);</span><br><span class="line">                String[] args = funcMatcher.group(2).split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">                if (funcName.equals(&quot;label&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                    int x = evaluateInt(args[0].trim());</span><br><span class="line">                    int y = evaluateInt(args[1].trim());</span><br><span class="line">                    String label = evaluateString(args[2].trim());</span><br><span class="line">                    String text = evaluateString(args[3].trim());</span><br><span class="line">                    PrintLabelModel.TextLeftRight printLabelModel = new PrintLabelModel.TextLeftRight(x, y, label, text);</span><br><span class="line">                    int fontSize = args.length &gt; 4 ? evaluateInt(args[4].trim()) : printLabelModel.fontSize;</span><br><span class="line">                    int limitRight = args.length &gt; 5 ? evaluateInt(args[5].trim()) : 0;</span><br><span class="line">                    printLabelModel.fontSize = fontSize;</span><br><span class="line">                    printLabelModel.limitRight = limitRight;</span><br><span class="line">                    model.infos.add(printLabelModel);</span><br><span class="line">                &#125; else if (funcName.equals(&quot;text&quot;) &amp;&amp; args.length &gt; 2) &#123;</span><br><span class="line">                    int x = evaluateInt(args[0].trim());</span><br><span class="line">                    int y = evaluateInt(args[1].trim());</span><br><span class="line">                    String text = evaluateString(args[2].trim());</span><br><span class="line">                    PrintLabelModel.Text printLabelModel = new PrintLabelModel.Text(x, y, text);</span><br><span class="line">                    int fontSize = args.length &gt; 3 ? evaluateInt(args[3].trim()) : printLabelModel.fontsize;</span><br><span class="line">                    int limitRight = args.length &gt; 4 ? evaluateInt(args[4].trim()) : 0;</span><br><span class="line">                    printLabelModel.fontsize = fontSize;</span><br><span class="line">                    printLabelModel.limitRight = limitRight;</span><br><span class="line">                    model.infos.add(printLabelModel);</span><br><span class="line">                &#125; else if (funcName.equals(&quot;qrcode&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                    int x = evaluateInt(args[0].trim());</span><br><span class="line">                    int y = evaluateInt(args[1].trim());</span><br><span class="line">                    int size = evaluateInt(args[2].trim());</span><br><span class="line">                    String text = evaluateString(args[3].trim());</span><br><span class="line">                    boolean showText = args.length &gt; 4 ? evaluateBoolean(args[4].trim()) : false;</span><br><span class="line">                    PrintLabelModel.QRCode printLabelModel = new PrintLabelModel.QRCode(x, y, size, text, showText);</span><br><span class="line">                    model.infos.add(printLabelModel);</span><br><span class="line">                &#125; else if (funcName.equals(&quot;barcode&quot;) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                    int x = evaluateInt(args[0].trim());</span><br><span class="line">                    int y = evaluateInt(args[1].trim());</span><br><span class="line">                    int width = evaluateInt(args[2].trim());</span><br><span class="line">                    int height = evaluateInt(args[3].trim());</span><br><span class="line">                    String text = evaluateString(args[4].trim());</span><br><span class="line">                    boolean showText = args.length &gt; 5 ? evaluateBoolean(args[5].trim()) : false;</span><br><span class="line">                    PrintLabelModel.BarCode printLabelModel = new PrintLabelModel.BarCode(x, y,  width, height, text, showText);</span><br><span class="line">                    int fontSize = args.length &gt; 6 ?evaluateInt(args[6].trim()):printLabelModel.fontsize;</span><br><span class="line">                    printLabelModel.fontsize=fontSize;</span><br><span class="line">                    model.infos.add(printLabelModel);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int evaluateInt(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression);</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)\\s*([\\+\\-\\*\\/])\\s*(\\w+)&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int left = evaluateInt(exprMatcher.group(1).trim());</span><br><span class="line">                int right = evaluateInt(exprMatcher.group(3).trim());</span><br><span class="line">                switch (exprMatcher.group(2).trim()) &#123;</span><br><span class="line">                    case &quot;+&quot;:</span><br><span class="line">                        return left + right;</span><br><span class="line">                    case &quot;-&quot;:</span><br><span class="line">                        return left - right;</span><br><span class="line">                    case &quot;*&quot;:</span><br><span class="line">                        return left * right;</span><br><span class="line">                    case &quot;/&quot;:</span><br><span class="line">                        return left / right;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateString(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return String.valueOf(variables.get(expression));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是字符串，去掉引号</span><br><span class="line">        if (expression.startsWith(&quot;\&quot;&quot;) &amp;&amp; expression.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            return expression.substring(1, expression.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private boolean evaluateBoolean(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression) != 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是布尔值，直接转换为布尔型</span><br><span class="line">        if (expression.equalsIgnoreCase(&quot;true&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (expression.equalsIgnoreCase(&quot;false&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static PrintLabelModel script2printLabelModel(String content) &#123;</span><br><span class="line">        String[] split = content.split(&quot;\n&quot;);</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; vars = new LinkedHashMap&lt;&gt;();</span><br><span class="line">        for (String s : split) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面还有一些问题 比如不支持一行多个变量定义 ,不支持 一行多个<br>也不支持a&#x3D;b+1的识别<br>修正a&#x3D;b+1识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">            Pattern varPattern = Pattern.compile(&quot;^([a-z]+)\\s*=\\s*([a-z0-9+*-\\/()]+)$&quot;);</span><br></pre></td></tr></table></figure><p>最后的代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class ScriptEngine &#123;</span><br><span class="line"></span><br><span class="line">    private Map&lt;String, Integer&gt; variables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public PrintLabelModel evaluate(String script) &#123;</span><br><span class="line">        PrintLabelModel model = new PrintLabelModel();</span><br><span class="line"></span><br><span class="line">        String[] split = script.split(&quot;\n&quot;);</span><br><span class="line">        for (String currentLine : split) &#123;</span><br><span class="line">            if (currentLine == null || currentLine.trim().length() == 0 || currentLine.startsWith(&quot;#&quot;) || currentLine.startsWith(&quot;//&quot;) || currentLine.startsWith(&quot;--&quot;)) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            for (String block : currentLine.split(&quot;;&quot;)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                // 解析整数变量</span><br><span class="line">//                Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">                Pattern varPattern = Pattern.compile(&quot;^([a-z]+)\\s*=\\s*([a-z0-9+*-\\/()]+)$&quot;);</span><br><span class="line">                Matcher varMatcher = varPattern.matcher(block);</span><br><span class="line">                while (varMatcher.find()) &#123;</span><br><span class="line">                    String varName = varMatcher.group(1);</span><br><span class="line">                    int varValue = evaluateInt(varMatcher.group(2));//Integer.parseInt(varMatcher.group(2));</span><br><span class="line">                    variables.put(varName, varValue);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 解析函数调用</span><br><span class="line">                Pattern funcPattern = Pattern.compile(&quot;(\\w+)\\((.*)\\)&quot;);</span><br><span class="line">                Matcher funcMatcher = funcPattern.matcher(block);</span><br><span class="line">                if (funcMatcher.matches()) &#123;</span><br><span class="line">                    String funcName = funcMatcher.group(1);</span><br><span class="line">                    String[] args = funcMatcher.group(2).split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">                    if (funcName.equals(&quot;label&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                        int x = evaluateInt(args[0].trim());</span><br><span class="line">                        int y = evaluateInt(args[1].trim());</span><br><span class="line">                        String label = evaluateString(args[2].trim());</span><br><span class="line">                        String text = evaluateString(args[3].trim());</span><br><span class="line">                        PrintLabelModel.TextLeftRight printLabelModel = new PrintLabelModel.TextLeftRight(x, y, label, text);</span><br><span class="line">                        int fontSize = args.length &gt; 4 ? evaluateInt(args[4].trim()) : printLabelModel.fontSize;</span><br><span class="line">                        int limitRight = args.length &gt; 5 ? evaluateInt(args[5].trim()) : 0;</span><br><span class="line">                        printLabelModel.fontSize = fontSize;</span><br><span class="line">                        printLabelModel.limitRight = limitRight;</span><br><span class="line">                        model.infos.add(printLabelModel);</span><br><span class="line">                    &#125; else if (funcName.equals(&quot;print&quot;)) &#123;</span><br><span class="line"></span><br><span class="line">                        StringBuffer sb = new StringBuffer();</span><br><span class="line">                        for (int i = 0; i &lt; args.length; i++) &#123;</span><br><span class="line">                            sb.append(evaluateString(args[i]));</span><br><span class="line">                            if (i != args.length - 1) &#123;</span><br><span class="line">                                sb.append(&quot; &quot;);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.print(sb);</span><br><span class="line"></span><br><span class="line">                    &#125; else if (funcName.equals(&quot;text&quot;) &amp;&amp; args.length &gt; 2) &#123;</span><br><span class="line">                        int x = evaluateInt(args[0].trim());</span><br><span class="line">                        int y = evaluateInt(args[1].trim());</span><br><span class="line">                        String text = evaluateString(args[2].trim());</span><br><span class="line">                        PrintLabelModel.Text printLabelModel = new PrintLabelModel.Text(x, y, text);</span><br><span class="line">                        int fontSize = args.length &gt; 3 ? evaluateInt(args[3].trim()) : printLabelModel.fontsize;</span><br><span class="line">                        int limitRight = args.length &gt; 4 ? evaluateInt(args[4].trim()) : 0;</span><br><span class="line">                        printLabelModel.fontsize = fontSize;</span><br><span class="line">                        printLabelModel.limitRight = limitRight;</span><br><span class="line">                        model.infos.add(printLabelModel);</span><br><span class="line">                    &#125; else if (funcName.equals(&quot;qrcode&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                        int x = evaluateInt(args[0].trim());</span><br><span class="line">                        int y = evaluateInt(args[1].trim());</span><br><span class="line">                        int size = evaluateInt(args[2].trim());</span><br><span class="line">                        String text = evaluateString(args[3].trim());</span><br><span class="line">                        boolean showText = args.length &gt; 4 ? evaluateBoolean(args[4].trim()) : false;</span><br><span class="line">                        PrintLabelModel.QRCode printLabelModel = new PrintLabelModel.QRCode(x, y, size, text, showText);</span><br><span class="line">                        model.infos.add(printLabelModel);</span><br><span class="line">                    &#125; else if (funcName.equals(&quot;barcode&quot;) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                        int x = evaluateInt(args[0].trim());</span><br><span class="line">                        int y = evaluateInt(args[1].trim());</span><br><span class="line">                        int width = evaluateInt(args[2].trim());</span><br><span class="line">                        int height = evaluateInt(args[3].trim());</span><br><span class="line">                        String text = evaluateString(args[4].trim());</span><br><span class="line">                        boolean showText = args.length &gt; 5 ? evaluateBoolean(args[5].trim()) : false;</span><br><span class="line">                        PrintLabelModel.BarCode printLabelModel = new PrintLabelModel.BarCode(x, y, width, height, text, showText);</span><br><span class="line">                        int fontSize = args.length &gt; 6 ? evaluateInt(args[6].trim()) : printLabelModel.fontsize;</span><br><span class="line">                        printLabelModel.fontsize = fontSize;</span><br><span class="line">                        model.infos.add(printLabelModel);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int evaluateInt(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression);</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)\\s*([\\+\\-\\*\\/])\\s*(\\w+)&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int left = evaluateInt(exprMatcher.group(1).trim());</span><br><span class="line">                int right = evaluateInt(exprMatcher.group(3).trim());</span><br><span class="line">                switch (exprMatcher.group(2).trim()) &#123;</span><br><span class="line">                    case &quot;+&quot;:</span><br><span class="line">                        return left + right;</span><br><span class="line">                    case &quot;-&quot;:</span><br><span class="line">                        return left - right;</span><br><span class="line">                    case &quot;*&quot;:</span><br><span class="line">                        return left * right;</span><br><span class="line">                    case &quot;/&quot;:</span><br><span class="line">                        return left / right;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateString(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return String.valueOf(variables.get(expression));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是字符串，去掉引号</span><br><span class="line">        if (expression.startsWith(&quot;\&quot;&quot;) &amp;&amp; expression.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            return expression.substring(1, expression.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return expression;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private boolean evaluateBoolean(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (variables.containsKey(expression)) &#123;</span><br><span class="line">            return variables.get(expression) != 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是布尔值，直接转换为布尔型</span><br><span class="line">        if (expression.equalsIgnoreCase(&quot;true&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (expression.equalsIgnoreCase(&quot;false&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static PrintLabelModel script2printLabelModel(String content) &#123;</span><br><span class="line">        String[] split = content.split(&quot;\n&quot;);</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; vars = new LinkedHashMap&lt;&gt;();</span><br><span class="line">        for (String s : split) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void test()&#123;</span><br><span class="line">    ScriptEngine scriptEngine=new ScriptEngine();</span><br><span class="line">    PrintLabelModel evaluate = scriptEngine.evaluate(&quot;x=3\ny=5\nc=x+3;\nprint(x,y,c);vara=1\nb=3\nlabel(vara,3,3,3,3,3,3)\ntext(x,y,nihao)\ntext(x,c,c)&quot;);</span><br><span class="line">    String s = JSON.toJSONString(evaluate);</span><br><span class="line">    System.out.print(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 5 6&#123;&quot;height&quot;:400,&quot;infos&quot;:[&#123;&quot;content&quot;:&quot;3&quot;,&quot;fontSize&quot;:3,&quot;label&quot;:&quot;3&quot;,&quot;limitRight&quot;:3,&quot;newLineGap&quot;:3.0,&quot;type&quot;:&quot;textl&quot;,&quot;x&quot;:1,&quot;y&quot;:3&#125;,&#123;&quot;content&quot;:&quot;nihao&quot;,&quot;fontsize&quot;:15,&quot;limitRight&quot;:0,&quot;newLineGap&quot;:3,&quot;type&quot;:&quot;text&quot;,&quot;x&quot;:3,&quot;y&quot;:5&#125;,&#123;&quot;content&quot;:&quot;6&quot;,&quot;fontsize&quot;:15,&quot;limitRight&quot;:0,&quot;newLineGap&quot;:3,&quot;type&quot;:&quot;text&quot;,&quot;x&quot;:3,&quot;y&quot;:6&#125;],&quot;width&quot;:600&#125;</span><br></pre></td></tr></table></figure><p>最后调整优化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">public class ScriptEngine &#123;</span><br><span class="line"></span><br><span class="line">    public Map&lt;String, String&gt; getStrVariables() &#123;</span><br><span class="line">        return strVariables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Map&lt;String, String&gt; strVariables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public Map&lt;String, Number&gt; getNumbervariables() &#123;</span><br><span class="line">        return numbervariables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Map&lt;String, Number&gt; numbervariables = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public interface ParseCallBack &#123;</span><br><span class="line">        void onPrint(String text);</span><br><span class="line"></span><br><span class="line">        void onError(Throwable error);</span><br><span class="line"></span><br><span class="line">        String onEachContent(String content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public PrintLabelModel evaluate(String script, ParseCallBack parseCallBack) &#123;</span><br><span class="line">        PrintLabelModel model = new PrintLabelModel();</span><br><span class="line">        try &#123;</span><br><span class="line">            script = script.replace(&quot;\r\n&quot;, &quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">            String[] split = script.split(&quot;\n&quot;);</span><br><span class="line">            line:</span><br><span class="line">            for (String currentLine : split) &#123;</span><br><span class="line">                if (isComment(currentLine)) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                for_block:</span><br><span class="line">                for (String block : currentLine.split(&quot;;&quot;)) &#123;</span><br><span class="line">                    if (isComment(block)) &#123;</span><br><span class="line">                        break for_block;</span><br><span class="line">                    &#125;</span><br><span class="line">                    // 解析整数变量</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][a-zA-Z0-9_]*)\\s*=\\s*(.+)$&quot;);</span><br><span class="line"></span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w\\u4e00-\\u9fa5]*)\\s*=\\s*(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;);</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w\\u4e00-\\u9fa5]*)\\s*=\\s*(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;);</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w\\u4e00-\\u9fa5]*)\\s*\\t=\\t(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;, Pattern.DOTALL);</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w\\u4e00-\\u9fa5]*)\\s*=\\s*(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;);</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w]*)\\s*=\\s*(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;);</span><br><span class="line">                    Pattern varPattern = Pattern.compile(&quot;^([$]?[a-zA-Z][\\w]*)\\s*=\\s*(\&quot;[^\&quot;]+\&quot;|[^\\s]+)$&quot;);</span><br><span class="line">//                    Pattern varPattern = Pattern.compile(&quot;^([a-zA-Z][a-zA-Z0-9_]*)\\s*=\\s*([a-zA-Z0-9+*-\\/()]+)$&quot;);</span><br><span class="line">//                Pattern varPattern = Pattern.compile(&quot;^([a-z]+)\\s*=\\s*([a-z0-9+*-\\/()]+)$&quot;);</span><br><span class="line">//                Pattern varPattern = Pattern.compile(&quot;(\\w+)\\s*=\\s*(\\d+)&quot;);</span><br><span class="line">//                    block = Pattern.quote(block);</span><br><span class="line">                    Matcher varMatcher = varPattern.matcher(block);</span><br><span class="line"></span><br><span class="line">                    boolean isVar = false;</span><br><span class="line">                    while (varMatcher.find()) &#123;</span><br><span class="line">                        String varName = varMatcher.group(1);</span><br><span class="line">                        String value = varMatcher.group(2);</span><br><span class="line"></span><br><span class="line">                        if (value.startsWith(&quot;\&quot;&quot;) &amp;&amp; value.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">                            String convertValue = evaluateString(value);</span><br><span class="line">                            strVariables.put(varName, convertValue);</span><br><span class="line">                        &#125; else if (value.matches(&quot;\\d+&quot;) || value.matches(&quot;\\d+\\.\\d+&quot;) || value.matches(&quot;[+-]?\\d+\\.?\\d*[eE][+-]?\\d+&quot;)) &#123;</span><br><span class="line">                            Number number = evaluateNumber(value);</span><br><span class="line">                            numbervariables.put(varName, number);</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            if (!value.startsWith(&quot;\&quot;&quot;) &amp;&amp; (value.contains(&quot;+&quot;) || value.contains(&quot;-&quot;) || value.contains(&quot;*&quot;) || value.contains(&quot;/&quot;))) &#123;</span><br><span class="line">                                Number number = evaluateNumber(value);</span><br><span class="line">                                numbervariables.put(varName, number);</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                String convertValue = evaluateString(value);</span><br><span class="line">                                strVariables.put(varName, convertValue);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        isVar = true;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (isVar) &#123;</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125;</span><br><span class="line">                    /*else if (block.trim().endsWith(&quot;\&quot;&quot;) &amp;&amp; block.contains(&quot;=&quot;)) &#123;</span><br><span class="line">                        int i = block.indexOf(&quot;=&quot;);</span><br><span class="line">                        int start = block.indexOf(&quot;\&quot;&quot;,i);</span><br><span class="line">                        int end = block.lastIndexOf(&quot;\&quot;&quot;);</span><br><span class="line">                        if (i &gt;= 0 &amp;&amp; start &gt; 0 &amp;&amp; start &lt; end &amp;&amp; end &gt; i) &#123;</span><br><span class="line">                            String varName = block.substring(0, i);</span><br><span class="line">                            String value = block.substring(start+1, end);</span><br><span class="line">                            String convertValue = evaluateString(value);</span><br><span class="line">                            strVariables.put(varName, convertValue);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;*/</span><br><span class="line">                    // 解析函数调用</span><br><span class="line">                    Pattern funcPattern = Pattern.compile(&quot;(\\w+)\\((.*)\\)&quot;);</span><br><span class="line">                    Matcher funcMatcher = funcPattern.matcher(block);</span><br><span class="line">                    if (funcMatcher.matches()) &#123;</span><br><span class="line">                        String funcName = funcMatcher.group(1);</span><br><span class="line">                        String[] args = funcMatcher.group(2).split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">                        if (funcName.equals(&quot;label&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            if (x &lt; 0 || y &lt; 0) &#123;</span><br><span class="line">                                x = 0;</span><br><span class="line">                                y = 0;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            String label = evaluateString(args[2].trim());</span><br><span class="line">                            String text = evaluateString(args[3].trim());</span><br><span class="line"></span><br><span class="line">                            PrintLabelModel.TextLeftRight printLabelModel = new PrintLabelModel.TextLeftRight(x, y, label, parseCallBack != null ? parseCallBack.onEachContent(text) : text);</span><br><span class="line">                            int fontSize = args.length &gt; 4 ? evaluateNumber(args[4].trim()).intValue() : printLabelModel.fontSize;</span><br><span class="line">                            int limitRight = args.length &gt; 5 ? evaluateNumber(args[5].trim()).intValue() : 0;</span><br><span class="line">                            if (limitRight &gt; x &amp;&amp; limitRight &gt; 2) &#123;</span><br><span class="line">                                printLabelModel.limitRight = limitRight;</span><br><span class="line">                            &#125;</span><br><span class="line">                            if (fontSize &gt; 5) &#123;</span><br><span class="line">                                printLabelModel.fontSize = fontSize;</span><br><span class="line">                            &#125;</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;return&quot;)) &#123;</span><br><span class="line">                            return model;</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;print&quot;)) &#123;</span><br><span class="line">                            StringBuffer sb = new StringBuffer();</span><br><span class="line">                            for (int i = 0; i &lt; args.length; i++) &#123;</span><br><span class="line">                                String str;</span><br><span class="line"></span><br><span class="line">                                String arg = args[i];</span><br><span class="line">                                String varValue = getVarValue(arg);</span><br><span class="line">                                if (varValue != null) &#123;</span><br><span class="line">                                    str = varValue;</span><br><span class="line">                                &#125; else if (arg.contains(&quot;\&quot;&quot;) || arg.contains(&quot;#&quot;)) &#123;</span><br><span class="line">                                    str = evaluateString(args[i]);</span><br><span class="line">                                &#125; else if (arg.matches(&quot;.*?\\d+&quot;) || arg.matches(&quot;\\d+\\.\\d+&quot;) || arg.matches(&quot;[+-]?\\d+\\.?\\d*[eE][+-]?\\d+&quot;)) &#123;</span><br><span class="line">                                    str = evaluateNumber(args[i]).toString();</span><br><span class="line"></span><br><span class="line">                                &#125; else &#123;</span><br><span class="line">                                    str = arg;</span><br><span class="line">                                &#125;</span><br><span class="line">                                sb.append(str);</span><br><span class="line">                                if (i != args.length - 1) &#123;</span><br><span class="line">                                    sb.append(&quot; &quot;);</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line">                            if (parseCallBack != null) &#123;</span><br><span class="line">                                parseCallBack.onPrint(sb.toString());</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125; else if (funcName.equals(&quot;wait&quot;) &amp;&amp; args.length &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            if (x &gt; 0) &#123;</span><br><span class="line">                                try &#123;</span><br><span class="line">                                    Thread.sleep(x);</span><br><span class="line">                                &#125; catch (InterruptedException e) &#123;</span><br><span class="line">//                                throw new RuntimeException(e);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;draw&quot;) &amp;&amp; args.length &gt; 1) &#123;</span><br><span class="line">                            if (args.length &gt;= 4) &#123;</span><br><span class="line">                                int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                                int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                                int width = evaluateNumber(args[2].trim()).intValue();</span><br><span class="line">                                int height = evaluateNumber(args[3].trim()).intValue();</span><br><span class="line">                                //    int drawWidth = args.length &gt; 5 ? evaluateNumber(args[5].trim()).intValue() : model.drawWidth;</span><br><span class="line">                                if (x &gt;= 0 &amp;&amp; y &gt;= 0) &#123;</span><br><span class="line"></span><br><span class="line">                                    model.x = x;</span><br><span class="line">                                    model.y = y;</span><br><span class="line">                                &#125;</span><br><span class="line">                                if (width &gt; 0 &amp;&amp; height &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">                                    model.imgWidth = width;</span><br><span class="line">                                    model.imgHeight = height;</span><br><span class="line">                                &#125;</span><br><span class="line">                         /*       if (drawWidth &gt; 15) &#123;</span><br><span class="line">                                    model.drawWidth = drawWidth;</span><br><span class="line">                                &#125;*/</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line"></span><br><span class="line">                                int width = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                                int height = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                                if (width &gt; 0 &amp;&amp; height &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">                                    model.imgWidth = width;</span><br><span class="line">                                    model.imgHeight = height;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;page&quot;) &amp;&amp; args.length &gt; 1) &#123;</span><br><span class="line">                            int width = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int height = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            model.printerHeight = width;</span><br><span class="line">                            model.printerWidth = height;</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;text&quot;) &amp;&amp; args.length &gt; 2) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            if (x &lt; 0 || y &lt; 0) &#123;</span><br><span class="line">                                x = 0;</span><br><span class="line">                                y = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            String text = evaluateString(args[2].trim());</span><br><span class="line">                            PrintLabelModel.Text printLabelModel = new PrintLabelModel.Text(x, y, parseCallBack != null ? parseCallBack.onEachContent(text) : text);</span><br><span class="line">                            int fontSize = args.length &gt; 3 ? evaluateNumber(args[3].trim()).intValue() : printLabelModel.fontsize;</span><br><span class="line">                            int limitRight = args.length &gt; 4 ? evaluateNumber(args[4].trim()).intValue() : 0;</span><br><span class="line">                            if (fontSize &lt;= 0 || limitRight &lt; 0) &#123;</span><br><span class="line">                                fontSize = 15;</span><br><span class="line">                                limitRight = 2;</span><br><span class="line">                            &#125;</span><br><span class="line">                            printLabelModel.fontsize = fontSize;</span><br><span class="line">                            printLabelModel.limitRight = limitRight;</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;qrcode&quot;) &amp;&amp; args.length &gt; 3) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            if (x &lt; 0 || y &lt; 0) &#123;</span><br><span class="line">                                x = 0;</span><br><span class="line">                                y = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            int size = evaluateNumber(args[2].trim()).intValue();</span><br><span class="line">                            String text = evaluateString(args[3].trim());</span><br><span class="line">                            boolean showText = args.length &gt; 4 ? evaluateBoolean(args[4].trim()) : false;</span><br><span class="line">                            PrintLabelModel.QRCode printLabelModel = new PrintLabelModel.QRCode(x, y, size, parseCallBack != null ? parseCallBack.onEachContent(text) : text, showText);</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;border&quot;) || (funcName.equals(&quot;box&quot;)) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line"></span><br><span class="line">                            int width = evaluateNumber(args[2].trim()).intValue();</span><br><span class="line">                            int height = evaluateNumber(args[3].trim()).intValue();</span><br><span class="line">                            int border = evaluateNumber(args[4].trim()).intValue();</span><br><span class="line">                            if (x &lt; 0 || y &lt; 0) &#123;</span><br><span class="line">                                x = 0;</span><br><span class="line">                                y = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            if (width &lt;= 0 || height &lt;= 0) &#123;</span><br><span class="line">                                width = 30;</span><br><span class="line">                                height = 30;</span><br><span class="line">                            &#125;</span><br><span class="line">                            boolean showText = args.length &gt; 5 ? evaluateBoolean(args[5].trim()) : false;</span><br><span class="line">                            PrintLabelModel.Box printLabelModel = new PrintLabelModel.Box(x, y, width, height, border, showText);</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;line&quot;) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            int endx = evaluateNumber(args[2].trim()).intValue();</span><br><span class="line">                            int endy = evaluateNumber(args[3].trim()).intValue();</span><br><span class="line">                            int size = evaluateNumber(args[4].trim()).intValue();</span><br><span class="line">                            if (x &lt; 0 || y &lt; 0 || endx &lt; 0 || endy &lt; 0) &#123;</span><br><span class="line">                                x = 0;</span><br><span class="line">                                y = 0;</span><br><span class="line">                                endx = 10;</span><br><span class="line">                                endy = 10;</span><br><span class="line">                            &#125;</span><br><span class="line">                            PrintLabelModel.Line printLabelModel = new PrintLabelModel.Line(x, y, endx, endy, size);</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125; else if (funcName.equals(&quot;barcode&quot;) &amp;&amp; args.length &gt; 4) &#123;</span><br><span class="line">                            int x = evaluateNumber(args[0].trim()).intValue();</span><br><span class="line">                            int y = evaluateNumber(args[1].trim()).intValue();</span><br><span class="line">                            int width = evaluateNumber(args[2].trim()).intValue();</span><br><span class="line">                            int height = evaluateNumber(args[3].trim()).intValue();</span><br><span class="line">                            if (width &lt;= 0 || height &lt;= 0) &#123;</span><br><span class="line">                                width = 400;</span><br><span class="line">                                height = 100;</span><br><span class="line">                            &#125;</span><br><span class="line">                            String text = evaluateString(args[4].trim());</span><br><span class="line">                            PrintLabelModel.BarCode printLabelModel = new PrintLabelModel.BarCode(x, y, width, height, parseCallBack != null ? parseCallBack.onEachContent(text) : text);</span><br><span class="line">                            int fontSize = args.length &gt; 5 ? evaluateNumber(args[5].trim()).intValue() : printLabelModel.fontsize;</span><br><span class="line">                            boolean showText = args.length &gt; 6 ? evaluateBoolean(args[6].trim()) : false;</span><br><span class="line"></span><br><span class="line">                            int leftMargin = args.length &gt; 7 ? evaluateNumber(args[7].trim()).intValue() : -1;</span><br><span class="line">                            int topMargin = args.length &gt; 8 ? evaluateNumber(args[8].trim()).intValue() : -1;</span><br><span class="line"></span><br><span class="line">                     /*       if (leftMargin &lt; 0 &amp;&amp; topMargin &lt; 0) &#123;</span><br><span class="line">//                                leftMargin=0</span><br><span class="line">                                continue;</span><br><span class="line">                            &#125;*/</span><br><span class="line">                            printLabelModel.showText = showText;</span><br><span class="line">                            printLabelModel.fontsize = fontSize;</span><br><span class="line">                            if (leftMargin != -1) &#123;</span><br><span class="line">                                printLabelModel.textMarginLeft = leftMargin;</span><br><span class="line">                            &#125;</span><br><span class="line">                            if (topMargin != -1) &#123;</span><br><span class="line">                                printLabelModel.textMarginTop = topMargin;</span><br><span class="line">                            &#125;</span><br><span class="line">                            model.infos.add(printLabelModel);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Throwable e) &#123;</span><br><span class="line">            parseCallBack.onError(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String getVarValue(String value) &#123;</span><br><span class="line">        String s = strVariables.get(value);</span><br><span class="line">        if (s == null) &#123;</span><br><span class="line">            Number number = numbervariables.get(value);</span><br><span class="line">            if (number == null) &#123;</span><br><span class="line">                return null;</span><br><span class="line">            &#125;</span><br><span class="line">            return number.toString();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private boolean isStr(String arg) &#123;</span><br><span class="line">        if (arg.startsWith(&quot;\&quot;&quot;) &amp;&amp; arg.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static boolean isComment(String currentLine) &#123;</span><br><span class="line">        if (currentLine == null || currentLine.trim().length() == 0 || currentLine.startsWith(&quot;#&quot;) || currentLine.startsWith(&quot;//&quot;) || currentLine.startsWith(&quot;--&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateIntTwo(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (strVariables.containsKey(expression)) &#123;</span><br><span class="line">            return strVariables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression) + &quot;&quot;;</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)\\s*([\\+\\-\\*\\/])\\s*(\\w+)&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int left = evaluateInt2(exprMatcher.group(1).trim());</span><br><span class="line">                int right = evaluateInt2(exprMatcher.group(3).trim());</span><br><span class="line">                switch (exprMatcher.group(2).trim()) &#123;</span><br><span class="line">                    case &quot;+&quot;:</span><br><span class="line">                        return String.valueOf(left + right);</span><br><span class="line">                    case &quot;-&quot;:</span><br><span class="line">                        return String.valueOf(left - right);</span><br><span class="line">                    case &quot;*&quot;:</span><br><span class="line">                        return String.valueOf(left * right);</span><br><span class="line">                    case &quot;/&quot;:</span><br><span class="line">                        return String.valueOf(left / right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return String.valueOf(0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private Number evaluateNumber(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (numbervariables.containsKey(expression)) &#123;</span><br><span class="line">            return numbervariables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是数字，直接转换为整数或浮点数</span><br><span class="line">        try &#123;</span><br><span class="line">            if (expression.contains(&quot;+&quot;) || expression.contains(&quot;-&quot;) || expression.contains(&quot;*&quot;) || expression.contains(&quot;/&quot;)) &#123;</span><br><span class="line">                // 如果不是数值，尝试解析表达式</span><br><span class="line">                Pattern exprPattern = Pattern.compile(&quot;(\\w+)([\\+\\-\\*\\/])(\\w+)([\\+\\-\\*\\/])?(\\w+)?([\\+\\-\\*\\/])?(\\w+)?&quot;);</span><br><span class="line">                Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">                if (exprMatcher.matches()) &#123;</span><br><span class="line">                    String trim = exprMatcher.group(1).trim();</span><br><span class="line">                    Number result = evaluateNumber(trim);</span><br><span class="line">                    BigInteger bigIntegerResult = result instanceof BigInteger ? (BigInteger) result : null;</span><br><span class="line">                    BigDecimal bigDecimalResult = result instanceof BigDecimal ? (BigDecimal) result : null;</span><br><span class="line">                    for (int i = 2; i &lt;= exprMatcher.groupCount(); i += 2) &#123;</span><br><span class="line">                        String group = exprMatcher.group(i);//第三个的时候这里为空</span><br><span class="line">                        if (group == null) &#123;</span><br><span class="line">                            continue;</span><br><span class="line">                        &#125;</span><br><span class="line">                        String operator = group.trim();</span><br><span class="line">                        String group1 = exprMatcher.group(i + 1);</span><br><span class="line">                        String operand = group1.trim();</span><br><span class="line">                        Number value = evaluateNumber(operand);</span><br><span class="line">                        if (bigIntegerResult != null) &#123;</span><br><span class="line">                            // 如果都是整数，使用整数计算</span><br><span class="line">                            BigInteger intOperand = (BigInteger) value;</span><br><span class="line">                            switch_:</span><br><span class="line">                            switch (operator) &#123;</span><br><span class="line">                                case &quot;+&quot;:</span><br><span class="line">                                    bigIntegerResult = bigIntegerResult.add(intOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                                case &quot;-&quot;:</span><br><span class="line">                                    bigIntegerResult = bigIntegerResult.subtract(intOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                                case &quot;*&quot;:</span><br><span class="line">                                    bigIntegerResult = bigIntegerResult.multiply(intOperand);</span><br><span class="line">                                case &quot;/&quot;:</span><br><span class="line">                                    bigIntegerResult = bigIntegerResult.divide(intOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            BigDecimal doubleOperand = (BigDecimal) value;//.doubleValue();// Double.parseDouble(value.toString());</span><br><span class="line">                            switch_:</span><br><span class="line">                            switch (operator) &#123;</span><br><span class="line">                                case &quot;+&quot;:</span><br><span class="line">                                    bigDecimalResult = bigDecimalResult.add(doubleOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                                case &quot;-&quot;:</span><br><span class="line">                                    bigDecimalResult = bigDecimalResult.subtract(doubleOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                                case &quot;*&quot;:</span><br><span class="line">                                    bigDecimalResult = bigDecimalResult.multiply(doubleOperand);</span><br><span class="line">                                case &quot;/&quot;:</span><br><span class="line">                                    bigDecimalResult = bigDecimalResult.divide(doubleOperand);</span><br><span class="line">                                    break switch_;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    result = bigDecimalResult != null ? bigDecimalResult : bigIntegerResult;</span><br><span class="line">                    return new BigInteger(String.valueOf(result));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (expression.matches(&quot;\\d+&quot;)) &#123;</span><br><span class="line">                    return new BigInteger(expression);</span><br><span class="line">                &#125; else if (expression.matches(&quot;\\d+\\.\\d+&quot;)) &#123;</span><br><span class="line">                    return new BigDecimal(expression);</span><br><span class="line">//                    return String.valueOf(Double.parseDouble(expression));</span><br><span class="line">                &#125; else if (expression.matches(&quot;[+-]?\\d+\\.?\\d*[eE][+-]?\\d+&quot;)) &#123;</span><br><span class="line">//                    return String.valueOf(Double.parseDouble(expression));</span><br><span class="line">                    return new BigDecimal(expression);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    return new BigDecimal(expression);</span><br><span class="line">//                    return String.valueOf(Double.parseDouble(expression));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Throwable e) &#123;</span><br><span class="line">            return new BigInteger(&quot;0&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return new BigInteger(&quot;0&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 辅助方法，执行加法运算</span><br><span class="line">    private Number add(Number a, Number b) &#123;</span><br><span class="line">        if (a instanceof Float || b instanceof Float) &#123;</span><br><span class="line">            return a.floatValue() + b.floatValue();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return a.intValue() + b.intValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 辅助方法，执行减法运算</span><br><span class="line">    private Number subtract(Number a, Number b) &#123;</span><br><span class="line">        if (a instanceof Float || b instanceof Float) &#123;</span><br><span class="line">            return a.floatValue() - b.floatValue();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return a.intValue() - b.intValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 辅助方法，执行乘法运算</span><br><span class="line">    private Number multiply(Number a, Number b) &#123;</span><br><span class="line">        if (a instanceof Float || b instanceof Float) &#123;</span><br><span class="line">            return a.floatValue() * b.floatValue();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return a.intValue() * b.intValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 辅助方法，执行除法运算</span><br><span class="line">    private Number divide(Number a, Number b) &#123;</span><br><span class="line">        if (a instanceof Float || b instanceof Float) &#123;</span><br><span class="line">            return a.floatValue() / b.floatValue();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return a.intValue() / b.intValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int evaluateInt2(String expression) &#123;</span><br><span class="line">// 如果是变量，替换为变量的值</span><br><span class="line">        if (numbervariables.containsKey(expression)) &#123;</span><br><span class="line">            return numbervariables.get(expression).intValue();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">// 如果是数字，直接转换为整数</span><br><span class="line">        try &#123;</span><br><span class="line">            return Integer.parseInt(expression);</span><br><span class="line">        &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">            // 如果不是数字，尝试解析表达式</span><br><span class="line">            Pattern exprPattern = Pattern.compile(&quot;(\\w+)([\\+\\-\\*\\/])(\\w+)([\\+\\-\\*\\/])?(\\w+)?([\\+\\-\\*\\/])?(\\w+)?&quot;);</span><br><span class="line">            Matcher exprMatcher = exprPattern.matcher(expression);</span><br><span class="line">            if (exprMatcher.matches()) &#123;</span><br><span class="line">                int result = evaluateInt2(exprMatcher.group(1).trim());</span><br><span class="line">                for (int i = 2; i &lt;= exprMatcher.groupCount(); i += 2) &#123;</span><br><span class="line">                    String operator = exprMatcher.group(i).trim();</span><br><span class="line">                    String operand = exprMatcher.group(i + 1).trim();</span><br><span class="line">                    int value = evaluateInt2(operand);</span><br><span class="line">                    switch (operator) &#123;</span><br><span class="line">                        case &quot;+&quot;:</span><br><span class="line">                            result += value;</span><br><span class="line">                            break;</span><br><span class="line">                        case &quot;-&quot;:</span><br><span class="line">                            result -= value;</span><br><span class="line">                            break;</span><br><span class="line">                        case &quot;*&quot;:</span><br><span class="line">                            result *= value;</span><br><span class="line">                            break;</span><br><span class="line">                        case &quot;/&quot;:</span><br><span class="line">                            result /= value;</span><br><span class="line">                            break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String evaluateString(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (strVariables.containsKey(expression)) &#123;</span><br><span class="line">            return strVariables.get(expression);</span><br><span class="line">        &#125;</span><br><span class="line">        if (numbervariables.containsKey(expression)) &#123;</span><br><span class="line">            return String.valueOf(numbervariables.get(expression).intValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是字符串，去掉引号</span><br><span class="line">        if (expression.startsWith(&quot;\&quot;&quot;) &amp;&amp; expression.endsWith(&quot;\&quot;&quot;)) &#123;</span><br><span class="line">            if (expression.contains(&quot;+\&quot;&quot;)) &#123;</span><br><span class="line">                StringBuffer sb = new StringBuffer();</span><br><span class="line">                expression = expression.substring(1, expression.length() - 1);</span><br><span class="line">                String[] split = expression.split(&quot;,\&quot;&quot;);</span><br><span class="line">                for (String s : split) &#123;</span><br><span class="line">                    sb.append(s);</span><br><span class="line">                &#125;</span><br><span class="line">                return sb.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            return expression.substring(1, expression.length() - 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return expression;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private boolean evaluateBoolean(String expression) &#123;</span><br><span class="line">        // 如果是变量，替换为变量的值</span><br><span class="line">        if (numbervariables.containsKey(expression)) &#123;</span><br><span class="line">            return numbervariables.get(expression).intValue() != 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果是布尔值，直接转换为布尔型</span><br><span class="line">        if (expression.equalsIgnoreCase(&quot;true&quot;)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else if (expression.equalsIgnoreCase(&quot;false&quot;)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/690cbb453c49&quot;&gt;java自定义定义脚本规则解析简单的脚本实现打印图形布局定制咨询人工智能找实现灵感1小时实现&lt;/a&gt;&lt;br&gt;文章字数：1579,阅读全文大约需要6分钟&lt;br&gt;用jav
      
    
    </summary>
    
      <category term="编程杂项" scheme="https://lozn.top/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="编程杂项" scheme="https://lozn.top/tags/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>数学分配的简单套路代码</title>
    <link href="https://lozn.top/2023/03/11/%E6%95%B0%E5%AD%A6%E5%88%86%E9%85%8D%E7%9A%84%E7%AE%80%E5%8D%95%E5%A5%97%E8%B7%AF%E4%BB%A3%E7%A0%81/"/>
    <id>https://lozn.top/2023/03/11/数学分配的简单套路代码/</id>
    <published>2023-03-11T00:46:20.000Z</published>
    <updated>2023-08-20T06:56:44.300Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/084c70ec574f">数学分配的简单套路代码</a><br>文章字数：257,阅读全文大约需要1分钟<br>需求1: 假设数量为1w,给定参数5 代表每个分配为5,最后分配给剩余的</p><p>也就是10 传递为1 ,那么将产生10个<br>currentNum代表当前的产生的,可以add进去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">    int index = 0;</span><br><span class="line">  int splitNum =100;</span><br><span class="line">int total=50000;</span><br><span class="line">    int remainder = total;</span><br><span class="line">    while (remainder &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        int currentNum = 0;</span><br><span class="line">     </span><br><span class="line">        if (remainder - splitNum  &lt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            currentNum = remainder;</span><br><span class="line">            remainder = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            remainder -= splitNum ;</span><br><span class="line">            currentNum = splitNum ;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需求2:<br>假设 总数为100,<br>给定参数30 就代表最多产生30容器,给100数量平均分配给30个容器</p><p>假设总数为10,给定参数为2 ,那么会产生2个数组 , 每个为5,<br>如果给定为3 ,那么是3个数组, 3 ,3 ,4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">int num=1100;</span><br><span class="line">int splitnum=30;</span><br><span class="line">  int avg = num/ splitnum;</span><br><span class="line">                int remainder = num% splitnum;</span><br><span class="line"></span><br><span class="line">                // 将平均数分配给所有变量</span><br><span class="line">                int[] vars = new int[splitnum];</span><br><span class="line">                for (int i = 0; i &lt; splitnum; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    vars[i] = avg;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 将余数分配给前面的变量</span><br><span class="line">                for (int i = 0; i &lt; remainder; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    vars[i]++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/084c70ec574f&quot;&gt;数学分配的简单套路代码&lt;/a&gt;&lt;br&gt;文章字数：257,阅读全文大约需要1分钟&lt;br&gt;需求1: 假设数量为1w,给定参数5 代表每个分配为5,最后分配给剩余的&lt;/p&gt;
      
    
    </summary>
    
      <category term="程序员的数学问题" scheme="https://lozn.top/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="程序员的数学问题" scheme="https://lozn.top/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>原创android禁止编辑框编辑但是允许选择查看内容超出的部分的方法</title>
    <link href="https://lozn.top/2023/03/03/%5B%E5%8E%9F%E5%88%9B%5Dandroid%E7%A6%81%E6%AD%A2%E7%BC%96%E8%BE%91%E6%A1%86%E7%BC%96%E8%BE%91%E4%BD%86%E6%98%AF%E5%85%81%E8%AE%B8%E9%80%89%E6%8B%A9%E6%9F%A5%E7%9C%8B%E5%86%85%E5%AE%B9%E8%B6%85%E5%87%BA%E7%9A%84%E9%83%A8%E5%88%86%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2023/03/03/[原创]android禁止编辑框编辑但是允许选择查看内容超出的部分的方法/</id>
    <published>2023-03-03T08:51:39.000Z</published>
    <updated>2023-08-20T06:56:44.260Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/9741c440734b">原创android禁止编辑框编辑但是允许选择查看内容超出的部分的方法</a><br>文章字数：43,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">_editView.setSelectAllOnFocus(true);</span><br><span class="line">        _editView.setInputType(InputType.TYPE_NULL);</span><br><span class="line">            _editView.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public boolean onKey(View v, int keyCode, KeyEvent event) &#123;</span><br><span class="line">                    return true; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><p>如下图是可以选择进行滚动的<br><img src="https://upload-images.jianshu.io/upload_images/2815884-f8ce0fbc47e8240f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/9741c440734b&quot;&gt;原创android禁止编辑框编辑但是允许选择查看内容超出的部分的方法&lt;/a&gt;&lt;br&gt;文章字数：43,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>android花了点时间研究三种方法实现旋转动画</title>
    <link href="https://lozn.top/2023/02/28/%5Bandroid%5D%E8%8A%B1%E4%BA%86%E7%82%B9%E6%97%B6%E9%97%B4%E7%A0%94%E7%A9%B6%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E6%97%8B%E8%BD%AC%E5%8A%A8%E7%94%BB/"/>
    <id>https://lozn.top/2023/02/28/[android]花了点时间研究三种方法实现旋转动画/</id>
    <published>2023-02-28T02:22:28.000Z</published>
    <updated>2023-08-20T06:56:44.260Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4a0355ae64bf">android花了点时间研究三种方法实现旋转动画</a><br>文章字数：991,阅读全文大约需要3分钟<br>这里不介绍自定义的了,我之前用的是spinkit的动画,360加固后各种无响应,搞得我恐惧了,</p><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">public class ProgressBar extends androidx.appcompat.widget.AppCompatImageView &#123;</span><br><span class="line">    /*    public ProgressBar(Context context, Style style, int color) &#123;</span><br><span class="line">        super(context, null, color);</span><br><span class="line">        initAnimator();</span><br><span class="line">    &#125;*/</span><br><span class="line"></span><br><span class="line">    public ProgressBar(Context context) &#123;</span><br><span class="line"></span><br><span class="line">        super(context);</span><br><span class="line">        initAnimator(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ProgressBar(Context context, AttributeSet attrs) &#123;</span><br><span class="line">        super(context, attrs);</span><br><span class="line">        initAnimator(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ProgressBar(Context context, AttributeSet attrs, int defStyleAttr) &#123;</span><br><span class="line">        super(context, attrs, defStyleAttr);</span><br><span class="line">        initAnimator(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initAnimator(Context context) &#123;</span><br><span class="line">//        setImageResource(R.drawable.loading_progress);</span><br><span class="line"></span><br><span class="line">// 开始播放动画</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   /*     ColorStateList colorStateList = new ColorStateList(new int[][]&#123;&#123;android.R.attr.state_pressed, android.R.attr.state_enabled&#125;, &#123;android.R.attr.state_pressed&#125;&#125;, new int[]&#123;Color.RED, Color.BLUE&#125;);</span><br><span class="line">        setImageTintList(colorStateList);*/</span><br><span class="line">//        setImageTintList(ColorStateList.valueOf(AppUtils.attrFetchAttrValue(getContext(), R.attr.defaultThemeColor)));</span><br><span class="line"></span><br><span class="line">        Drawable up = ContextCompat.getDrawable(context, R.drawable.icon_loading_progress);</span><br><span class="line">        Drawable drawableUp = DrawableCompat.wrap(up);</span><br><span class="line">        DrawableCompat.setTint(drawableUp, AppUtils.attrFetchColor(context, R.attr.defaultThemeColor));</span><br><span class="line">        this.setImageDrawable(drawableUp);</span><br><span class="line"></span><br><span class="line">// 设置动画播放的时间</span><br><span class="line">        AnimationSet animationSet = new AnimationSet(true);</span><br><span class="line">        //参数1：从哪个旋转角度开始</span><br><span class="line">        //参数2：转到什么角度</span><br><span class="line">        //后4个参数用于设置围绕着旋转的圆的圆心在哪里</span><br><span class="line">        //参数3：确定x轴坐标的类型，有ABSOLUT绝对坐标、RELATIVE_TO_SELF相对于自身坐标、RELATIVE_TO_PARENT相对于父控件的坐标</span><br><span class="line">        //参数4：x轴的值，0.5f表明是以自身这个控件的一半长度为x轴</span><br><span class="line">        //参数5：确定y轴坐标的类型</span><br><span class="line">        //参数6：y轴的值，0.5f表明是以自身这个控件的一半长度为x轴</span><br><span class="line">        RotateAnimation rotateAnimation = new RotateAnimation(0, 360*4,</span><br><span class="line">                Animation.RELATIVE_TO_SELF, 0.5f,</span><br><span class="line">                Animation.RELATIVE_TO_SELF, 0.5f);</span><br><span class="line">        rotateAnimation.setDuration(6000);</span><br><span class="line">        rotateAnimation.setRepeatMode(Animation.INFINITE);</span><br><span class="line">        rotateAnimation.setRepeatCount(Animation.INFINITE);</span><br><span class="line">        animationSet.addAnimation(rotateAnimation);</span><br><span class="line">        animationSet.setRepeatMode(Animation.INFINITE);</span><br><span class="line">        animationSet.setRepeatCount(Animation.INFINITE);</span><br><span class="line">        this.startAnimation(animationSet);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onAttachedToWindow() &#123;</span><br><span class="line">        super.onAttachedToWindow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onVisibilityChanged(@NonNull View changedView, int visibility) &#123;</span><br><span class="line">        super.onVisibilityChanged(changedView, visibility);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onDetachedFromWindow() &#123;</span><br><span class="line">        super.onDetachedFromWindow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置setRepeatMode 得设置在子动画否则无法重复</p><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>java基于progressbar设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">public class ProgressBar1 extends ProgressBar &#123;</span><br><span class="line"></span><br><span class="line">    public ProgressBar1(Context context) &#123;</span><br><span class="line"></span><br><span class="line">        super(context);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ProgressBar1(Context context, AttributeSet attrs) &#123;</span><br><span class="line">        super(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ProgressBar1(Context context, AttributeSet attrs, int defStyleAttr) &#123;</span><br><span class="line">        super(context, attrs, defStyleAttr);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ProgressBar1(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) &#123;</span><br><span class="line">        super(context, attrs, defStyleAttr, defStyleRes);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void init(Context context) &#123;</span><br><span class="line">        RotateDrawable rotateDrawable = new RotateDrawable();</span><br><span class="line">        Drawable drawable = ContextCompat.getDrawable(context, R.drawable.drawable_progerss1);</span><br><span class="line">        drawable.setTint(AppUtils.attrFetchColor(context, R.attr.defaultThemeColor));</span><br><span class="line">        rotateDrawable.setDrawable(drawable);</span><br><span class="line">        rotateDrawable.setPivotX(0.5f);</span><br><span class="line">        rotateDrawable.setPivotXRelative(true);</span><br><span class="line">        rotateDrawable.setPivotYRelative(true);</span><br><span class="line">        rotateDrawable.setPivotY(0.5f);</span><br><span class="line">        rotateDrawable.setFromDegrees(0);</span><br><span class="line">        rotateDrawable.setToDegrees(360);</span><br><span class="line">        setIndeterminateDrawable(drawable);</span><br><span class="line">/*setind</span><br><span class="line">//setInd</span><br><span class="line">        android:indeterminateDuration=&quot;2&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:indeterminateBehavior=&quot;repeat&quot;*/</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onAttachedToWindow() &#123;</span><br><span class="line">        super.onAttachedToWindow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onDetachedFromWindow() &#123;</span><br><span class="line">        super.onDetachedFromWindow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要借助drawalbe&#x2F;xml  drawable_progerss1 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;animated-rotate android:drawable=&quot;@drawable/icon_loading_progress&quot;</span><br><span class="line">    android:fromDegrees=&quot;0&quot;</span><br><span class="line">    android:pivotX=&quot;50%&quot;</span><br><span class="line">    android:pivotY=&quot;50%&quot;</span><br><span class="line">    android:toDegrees=&quot;5000&quot;</span><br><span class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&lt;/animated-rotate&gt;</span><br></pre></td></tr></table></figure><p>第三种也是如此,第二种由于无法代码修改(除非反射) 速度,第二种通常只能通过设置大角度来加速了</p><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h2><p>自带 drawable_progress或者drawable_progress1一样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ProgressBar</span><br><span class="line">        android:layout_width=&quot;50dp&quot;</span><br><span class="line">        android:layout_height=&quot;50dp&quot;</span><br><span class="line">        android:indeterminateBehavior=&quot;repeat&quot;</span><br><span class="line">        android:indeterminateDrawable=&quot;@drawable/drawable_progress&quot;</span><br><span class="line">        android:indeterminateDuration=&quot;3000&quot; /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>drawable_progress </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;animated-rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:fromDegrees=&quot;0&quot;</span><br><span class="line">    android:pivotX=&quot;50%&quot;</span><br><span class="line">    android:pivotY=&quot;50%&quot;</span><br><span class="line">    android:toDegrees=&quot;360&quot;&gt;</span><br><span class="line">    &lt;shape</span><br><span class="line">        android:innerRadius=&quot;8dp&quot;</span><br><span class="line">        android:shape=&quot;ring&quot;</span><br><span class="line">        android:thickness=&quot;3dp&quot;</span><br><span class="line">        android:useLevel=&quot;false&quot;&gt;</span><br><span class="line">        &lt;gradient</span><br><span class="line">            android:centerY=&quot;0.50&quot;</span><br><span class="line">            android:endColor=&quot;#cccccc&quot;</span><br><span class="line">            android:startColor=&quot;?attr/defaultThemeColor&quot;</span><br><span class="line">            android:type=&quot;sweep&quot;</span><br><span class="line">            android:useLevel=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;/shape&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--  android:pivotX     动画执行的起点x坐标 50%代表相对自身宽度的</span><br><span class="line">    android:innerRadius  内环的半径</span><br><span class="line">    android:thickness  环的厚度</span><br><span class="line">    android:useLevel  只有当我们的shape使用在LevelListDrawable中时，这个值为true，否则为false</span><br><span class="line">    android:centerY 渐变中心Y的相对位置，值为0-1</span><br><span class="line">    android:type  渐变类型，还有linear,radial两种类型，线性渐变和放射渐变--&gt;</span><br><span class="line"></span><br><span class="line">&lt;/animated-rotate&gt;</span><br></pre></td></tr></table></figure><h2 id="文章中的图片资源-icon-loading-progress"><a href="#文章中的图片资源-icon-loading-progress" class="headerlink" title="文章中的图片资源 icon_loading_progress"></a>文章中的图片资源 icon_loading_progress</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:width=&quot;210.4dp&quot;</span><br><span class="line">    android:height=&quot;200dp&quot;</span><br><span class="line">    android:viewportWidth=&quot;1077&quot;</span><br><span class="line">    android:viewportHeight=&quot;1024&quot;&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M89.8,178.1a149.7,148.4 0,1 0,299.4 0,149.7 148.4,0 1,0 -299.4,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M0,504.6a119.8,118.7 0,1 0,239.5 0,119.8 118.7,0 1,0 -239.5,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.9&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M104.8,794a112.3,111.3 0,1 0,224.6 0,112.3 111.3,0 1,0 -224.6,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.8&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M434.2,920.1a104.8,103.9 0,1 0,209.6 0,104.8 103.9,0 1,0 -209.6,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.7&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M763.5,808.8a97.3,96.5 0,1 0,194.6 0,97.3 96.5,0 1,0 -194.6,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.6&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M913.2,482.3a82.3,81.6 0,1 0,164.7 0,82.3 81.6,0 1,0 -164.7,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.5&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M808.4,185.5a67.4,66.8 0,1 0,134.7 0,67.4 66.8,0 1,0 -134.7,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.4&quot;/&gt;</span><br><span class="line">  &lt;path</span><br><span class="line">      android:pathData=&quot;M524,51.9a52.4,51.9 0,1 0,104.8 0,52.4 51.9,0 1,0 -104.8,0Z&quot;</span><br><span class="line">      android:fillColor=&quot;#E44232&quot;</span><br><span class="line">      android:fillAlpha=&quot;0.3&quot;/&gt;</span><br><span class="line">&lt;/vector&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2815884-0e231540815a873f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4a0355ae64bf&quot;&gt;android花了点时间研究三种方法实现旋转动画&lt;/a&gt;&lt;br&gt;文章字数：991,阅读全文大约需要3分钟&lt;br&gt;这里不介绍自定义的了,我之前用的是spinkit的动画
      
    
    </summary>
    
      <category term="android动画" scheme="https://lozn.top/categories/android%E5%8A%A8%E7%94%BB/"/>
    
    
      <category term="android动画" scheme="https://lozn.top/tags/android%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>HOOKUI界面与图标</title>
    <link href="https://lozn.top/2023/02/25/HOOKUI%E7%95%8C%E9%9D%A2%E4%B8%8E%E5%9B%BE%E6%A0%87/"/>
    <id>https://lozn.top/2023/02/25/HOOKUI界面与图标/</id>
    <published>2023-02-25T14:03:31.000Z</published>
    <updated>2023-08-20T06:56:44.256Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/1c39408b3acb">HOOKUI界面与图标</a><br>文章字数：530,阅读全文大约需要2分钟<br>hookui文档<br><a href="http://hookui.lozn.top/">http://hookui.lozn.top</a><br><img src="https://upload-images.jianshu.io/upload_images/2815884-946579098788098f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="qq_pic_merged_1677333785903.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-85b290b1580b5c66.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-02-29-358_lozn.hookui.jpg"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-29895ea4fb76f901.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-07-05-462_lozn.hookui.jpg"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-bd780998ab36cb9f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-06-47-906_lozn.hookui.jpg"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-685075dfb7574103.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-06-41-740_lozn.hookui.jpg"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-a24a257ae32fc1d1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-06-37-039_lozn.hookui.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f66a2495457d7f9f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot_2023-02-25-22-06-24-102_lozn.hookui.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-ff9431698f516cc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="robot"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-94cd89791f3131e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="aaa"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-b234dbbba0f07741.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4F8AFEB9758B39B75DA8BD023D1E14F2.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c8ff70096bc44a7f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BEFA38748215D4BF73791F866698697F.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/1c39408b3acb&quot;&gt;HOOKUI界面与图标&lt;/a&gt;&lt;br&gt;文章字数：530,阅读全文大约需要2分钟&lt;br&gt;hookui文档&lt;br&gt;&lt;a href=&quot;http://hookui.lozn.
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>ue射线点击任意位置人物移动办法</title>
    <link href="https://lozn.top/2023/02/24/ue%E5%B0%84%E7%BA%BF%E7%82%B9%E5%87%BB%E4%BB%BB%E6%84%8F%E4%BD%8D%E7%BD%AE,%E4%BA%BA%E7%89%A9%E7%A7%BB%E5%8A%A8%E5%8A%9E%E6%B3%95/"/>
    <id>https://lozn.top/2023/02/24/ue射线点击任意位置,人物移动办法/</id>
    <published>2023-02-24T09:50:12.000Z</published>
    <updated>2023-08-20T06:56:44.284Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/4b5c50cd5c96">ue射线点击任意位置人物移动办法</a><br>文章字数：258,阅读全文大约需要1分钟<br>第一种方法是在事件里面写<br>获取单元向量(pawn位置,点击的物体位置)-&gt;添加移动输入()<br>这里第二种瞬移 消除高度<br> 设置acotr位置等于 点击的位置就行<br>vector 5,5,5x vector1,1,1等于原数 ,vector5,5,5+0,0,0也是<br>这里可以创建vector方法来实现新的构造<br>*一个新的用来分解,也可以直接分解,但是我这其他地方要用到就没这么做 .<br><img src="https://upload-images.jianshu.io/upload_images/2815884-921ed2e4f6c5269d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后按通道获取光标下的命中结果-中断命中结果-localtion&#x3D;设置actor位置</p><h1 id="解决和旋转冲突问题"><a href="#解决和旋转冲突问题" class="headerlink" title="解决和旋转冲突问题"></a>解决和旋转冲突问题</h1><p>在按下的时候get game time for seconds ,松开的时候也获取, 相减 返回的一般是0.3 0.5之类的玩意.判断小于1就行<br>另外多个actor 都有鼠标单击事件就右键设置这个事件为不消耗就行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/4b5c50cd5c96&quot;&gt;ue射线点击任意位置人物移动办法&lt;/a&gt;&lt;br&gt;文章字数：258,阅读全文大约需要1分钟&lt;br&gt;第一种方法是在事件里面写&lt;br&gt;获取单元向量(pawn位置,点击的物体
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【原创】unityxchartbarringpie等预制体添加数据实现</title>
    <link href="https://lozn.top/2023/02/23/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91unity-xchart-bar,ring-,pie%E7%AD%89%E9%A2%84%E5%88%B6%E4%BD%93%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E5%AE%9E%E7%8E%B0/"/>
    <id>https://lozn.top/2023/02/23/【原创】unity-xchart-bar,ring-,pie等预制体添加数据实现/</id>
    <published>2023-02-23T09:09:22.000Z</published>
    <updated>2023-08-20T06:56:44.288Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/214e39742aed">【原创】unityxchartbarringpie等预制体添加数据实现</a><br>文章字数：216,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using XCharts.Runtime;</span><br><span class="line"></span><br><span class="line">public class TestChart : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public GameObject uiGameObject;</span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        //testMultiBarChart();</span><br><span class="line">        //testMultiLineChart();</span><br><span class="line">        testRingCHart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testPieChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/piechart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        PieChart baseChart = chartGameObject.GetComponent&lt;PieChart&gt;();</span><br><span class="line">        PieChart pieChart = (PieChart)baseChart;</span><br><span class="line">        pieChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line">        pieChart.ClearData();</span><br><span class="line">        pieChart.AddData(0, 10, &quot;它&quot;);</span><br><span class="line">        pieChart.AddData(0, 60, &quot;我&quot;);</span><br><span class="line">        pieChart.AddData(0, 30, &quot;你&quot;);</span><br><span class="line">        pieChart.RefreshChart();</span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testRingCHart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/ringchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        RingChart baseChart = chartGameObject.GetComponent&lt;RingChart&gt;();</span><br><span class="line">        RingChart ringchart = (RingChart)baseChart;</span><br><span class="line">        ringchart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line">        ringchart.ClearData();</span><br><span class="line">        //ringchart.AddData(0, 30, &quot;描述&quot;);</span><br><span class="line">        ringchart.AddData(0, 51,100, &quot;描述&quot;);</span><br><span class="line">        ringchart.RefreshChart();</span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void testBarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/barchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BarChart baseChart = chartGameObject.GetComponent&lt;BarChart&gt;();</span><br><span class="line">        BarChart barChart = (BarChart)baseChart;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Legend&gt;().show = false;</span><br><span class="line"></span><br><span class="line">        var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line">/*        xAxis.type = Axis.AxisType.Category;</span><br><span class="line">        yAxis.type = Axis.AxisType.Value;*/</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 10;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line">        Bar serie = barChart.AddSerie&lt;Bar&gt;(&quot;Bar1&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            barChart.AddXAxisData(&quot;x&quot; + (i + 1));</span><br><span class="line">            barChart.AddData(0, UnityEngine.Random.Range(30, 90));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private void testMultiBarChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/barchart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BarChart baseChart = chartGameObject.GetComponent&lt;BarChart&gt;();</span><br><span class="line">        BarChart barChart = (BarChart)baseChart;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        barChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">        var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line">/*        xAxis.type = Axis.AxisType.Category;</span><br><span class="line">        yAxis.type = Axis.AxisType.Value;*/</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 0;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        barChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        Bar serie = barChart.AddSerie&lt;Bar&gt;(&quot;Bar1&quot;);</span><br><span class="line">        Bar serie1 = barChart.AddSerie&lt;Bar&gt;(&quot;Bar2&quot;);</span><br><span class="line">        Bar serie2 = barChart.AddSerie&lt;Bar&gt;(&quot;Bar3&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 10; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            barChart.AddXAxisData(&quot;a&quot; + (i + 1),0);</span><br><span class="line">            barChart.AddData(0, UnityEngine.Random.Range(30, 90));       </span><br><span class="line">            barChart.AddData(1, UnityEngine.Random.Range(30, 90));</span><br><span class="line">            barChart.AddData(2, UnityEngine.Random.Range(30, 90));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line">    private void testMultiLineChart()</span><br><span class="line">    &#123;</span><br><span class="line">        GameObject prefabs = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/Chart/linechart&quot;);</span><br><span class="line">        GameObject chartGameObject = Instantiate(prefabs);</span><br><span class="line">        BaseChart baseChart = chartGameObject.GetComponent&lt;LineChart&gt;();</span><br><span class="line">        LineChart lineChart = (LineChart)baseChart;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">        lineChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">        var xAxis = lineChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">        var yAxis = lineChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">        xAxis.show = true;</span><br><span class="line">        yAxis.show = true;</span><br><span class="line"></span><br><span class="line">        xAxis.splitNumber = 0;</span><br><span class="line">        xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">        lineChart.RemoveData();</span><br><span class="line"></span><br><span class="line">        yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">        Line serie = lineChart.AddSerie&lt;Line&gt;(&quot;Line1&quot;);</span><br><span class="line">        Line serie1 = lineChart.AddSerie&lt;Line&gt;(&quot;Line2&quot;);</span><br><span class="line">        Line serie2 = lineChart.AddSerie&lt;Line&gt;(&quot;Line3&quot;);</span><br><span class="line">        for (int i = 0; i &lt; 10; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            lineChart.AddXAxisData(&quot;a&quot; + (i + 1),0);</span><br><span class="line">            lineChart.AddData(0, UnityEngine.Random.Range(30, 90));       </span><br><span class="line">            lineChart.AddData(1, UnityEngine.Random.Range(30, 90));</span><br><span class="line">            lineChart.AddData(2, UnityEngine.Random.Range(30, 90));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        chartGameObject.transform.parent = uiGameObject.transform;</span><br><span class="line">        chartGameObject.GetComponent&lt;RectTransform&gt;().anchoredPosition = Vector3.zero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>要实现折线图和 柱状图，则当前组件应该是 linechart,然后添加serice<bar>即可实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">if (chartType == IDataType.splinechart)</span><br><span class="line">       &#123;</span><br><span class="line">           baseChart = chartGameObject.GetComponent&lt;LineChart&gt;();</span><br><span class="line">           LineChart barChart = (LineChart)baseChart;</span><br><span class="line"></span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Title&gt;().show = true;</span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Tooltip&gt;().show = true;</span><br><span class="line">           barChart.GetOrAddChartComponent&lt;Legend&gt;().show = true;</span><br><span class="line"></span><br><span class="line">           var xAxis = barChart.GetOrAddChartComponent&lt;XAxis&gt;();</span><br><span class="line">           var yAxis = barChart.GetOrAddChartComponent&lt;YAxis&gt;();</span><br><span class="line">           xAxis.show = true;</span><br><span class="line">           yAxis.show = true;</span><br><span class="line"></span><br><span class="line">           xAxis.splitNumber = 10;</span><br><span class="line">           xAxis.boundaryGap = true;</span><br><span class="line"></span><br><span class="line">           barChart.RemoveData();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           JArray xtitle = JSONUtil.getJSONArrayValue(view.detail, &quot;xtitle&quot;, null).returnvalue;</span><br><span class="line">           JArray datas = JSONUtil.getJSONArrayValue(view.detail, &quot;datas&quot;, null).returnvalue;</span><br><span class="line">           if (xtitle != null &amp;&amp; datas != null)</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               int bartypeCount = datas.Count;</span><br><span class="line">               for (int j = 0; j &lt; bartypeCount; j++)</span><br><span class="line">               &#123;</span><br><span class="line">                   JObject currentBar = datas[j] as JObject;</span><br><span class="line"></span><br><span class="line">                   int type = JSONUtil.getIntValue(currentBar, &quot;type&quot;, 0).returnvalue;</span><br><span class="line">                   if (type == 0)</span><br><span class="line">                   &#123;</span><br><span class="line">                       barChart.AddSerie&lt;Bar&gt;(currentBar[&quot;title&quot;].ToString());</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line">                   else if (type == 1)</span><br><span class="line">                   &#123;</span><br><span class="line">                       barChart.AddSerie&lt;Line&gt;(currentBar[&quot;title&quot;].ToString());</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               for (int i = 0; i &lt; xtitle.Count; i++)</span><br><span class="line">               &#123;</span><br><span class="line">                   String title = xtitle[i].ToString();</span><br><span class="line"></span><br><span class="line">                   barChart.AddXAxisData(title, 0);</span><br><span class="line"></span><br><span class="line">                   for (int j = 0; j &lt; bartypeCount; j++)</span><br><span class="line">                   &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                       JObject currentBar = datas[j] as JObject;</span><br><span class="line">                       JArray values = currentBar[&quot;value&quot;] as JArray;</span><br><span class="line">                       //currentBar[&quot;title&quot;]</span><br><span class="line">                       barChart.AddData(j, values == null || values.Count - 1 &lt; i ? 0 : ParseUtil.parseFloat(values[i]));</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&quot;detail&quot;:&#123;</span><br><span class="line">&quot;xtitle&quot;:[&quot;时段1&quot;,&quot;时段2&quot;,&quot;时段3&quot;,&quot;时段4&quot;,&quot;时段5&quot;],</span><br><span class="line">&quot;datas&quot;:[</span><br><span class="line">&#123;</span><br><span class="line">&quot;title&quot;:&quot;a产能&quot;,</span><br><span class="line">&quot;value&quot;:[5,9,13,8,22,3]</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;title&quot;:&quot;b产能&quot;,</span><br><span class="line"></span><br><span class="line">&quot;value&quot;:[15,4,8,7,44]</span><br><span class="line">&#125;,&#123;</span><br><span class="line">&quot;title&quot;:&quot;平均&quot;,</span><br><span class="line">&quot;type&quot;:1,</span><br><span class="line">&quot;value&quot;:[35,39,3,83,6]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;title&quot;: &quot;时段产能&quot;,</span><br><span class="line">&quot;type&quot;: &quot;splinechart&quot;,</span><br><span class="line">&quot;x&quot;: 0,</span><br><span class="line">&quot;y&quot;: 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/214e39742aed&quot;&gt;【原创】unityxchartbarringpie等预制体添加数据实现&lt;/a&gt;&lt;br&gt;文章字数：216,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>ue设置材质修改材质相关</title>
    <link href="https://lozn.top/2023/02/23/ue%E8%AE%BE%E7%BD%AE%E6%9D%90%E8%B4%A8%E4%BF%AE%E6%94%B9%E6%9D%90%E8%B4%A8%E7%9B%B8%E5%85%B3/"/>
    <id>https://lozn.top/2023/02/23/ue设置材质修改材质相关/</id>
    <published>2023-02-23T09:08:45.000Z</published>
    <updated>2023-08-20T06:56:44.284Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/2e35f5065fb0">ue设置材质修改材质相关</a><br>文章字数：249,阅读全文大约需要1分钟<br>第一种方法是直接调用设置材质,但是 针对一个网格体多种材质的情况则不能这么用, </p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-9fc0cc6697999322.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-09efd017635a4382.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>获取材质插槽名数组,然后遍历 按命名设置材质. 即可</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-cfb137c435cfb09b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>关于上面模型的建立,和材质分配的方法<br>使用grpgen生成多个面</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-b662b39c6dede17a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后 MatEd选择面进行分配即可<br><img src="https://upload-images.jianshu.io/upload_images/2815884-d6dcf69cc3c021e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/2e35f5065fb0&quot;&gt;ue设置材质修改材质相关&lt;/a&gt;&lt;br&gt;文章字数：249,阅读全文大约需要1分钟&lt;br&gt;第一种方法是直接调用设置材质,但是 针对一个网格体多种材质的情况则不能这么用,
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>关于分层管理中某静态mesh无法附加到actor问题的原因</title>
    <link href="https://lozn.top/2023/02/22/%E5%85%B3%E4%BA%8E%E5%88%86%E5%B1%82%E7%AE%A1%E7%90%86%E4%B8%AD%E6%9F%90%E9%9D%99%E6%80%81mesh%E6%97%A0%E6%B3%95%E9%99%84%E5%8A%A0%E5%88%B0actor%E9%97%AE%E9%A2%98%E7%9A%84%E5%8E%9F%E5%9B%A0/"/>
    <id>https://lozn.top/2023/02/22/关于分层管理中某静态mesh无法附加到actor问题的原因/</id>
    <published>2023-02-22T07:31:25.000Z</published>
    <updated>2023-08-20T06:56:44.292Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/6e4beca7fca7">关于分层管理中某静态mesh无法附加到actor问题的原因</a><br>文章字数：64,阅读全文大约需要1分钟<br>![&#96;T4XH2]<a href="https://upload-images.jianshu.io/upload_images/2815884-10ebeba445262f57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240">3E)69$309{(H$V0.png</a></p><p>经过毕竟,实际上这个东西也需要设置为可移动的才行.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/6e4beca7fca7&quot;&gt;关于分层管理中某静态mesh无法附加到actor问题的原因&lt;/a&gt;&lt;br&gt;文章字数：64,阅读全文大约需要1分钟&lt;br&gt;![&amp;#96;T4XH2]&lt;a href=&quot;h
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>没当过水泥工的我才知道搞了好几次楼梯多次返工原来楼梯要这样设计</title>
    <link href="https://lozn.top/2023/02/22/%E6%B2%A1%E5%BD%93%E8%BF%87%E6%B0%B4%E6%B3%A5%E5%B7%A5%E7%9A%84%E6%88%91%E6%89%8D%E7%9F%A5%E9%81%93,%E6%90%9E%E4%BA%86%E5%A5%BD%E5%87%A0%E6%AC%A1%E6%A5%BC%E6%A2%AF,%E5%A4%9A%E6%AC%A1%E8%BF%94%E5%B7%A5,%E5%8E%9F%E6%9D%A5%E6%A5%BC%E6%A2%AF%E8%A6%81%E8%BF%99%E6%A0%B7%E8%AE%BE%E8%AE%A1/"/>
    <id>https://lozn.top/2023/02/22/没当过水泥工的我才知道,搞了好几次楼梯,多次返工,原来楼梯要这样设计/</id>
    <published>2023-02-22T06:14:19.000Z</published>
    <updated>2023-08-20T06:56:44.304Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/24da50d772b6">没当过水泥工的我才知道搞了好几次楼梯多次返工原来楼梯要这样设计</a><br>文章字数：538,阅读全文大约需要2分钟<br>这里面每一个缺口实际上一个门.1层楼我设计层3个楼梯相连<br><img src="https://upload-images.jianshu.io/upload_images/2815884-bbc0a9a07e47a869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>1楼的门在左边<br><img src="https://upload-images.jianshu.io/upload_images/2815884-4cb9018f664dd547.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>可是2楼的门却在右边,<img src="https://upload-images.jianshu.io/upload_images/2815884-7b5905619507990c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>我也想设计在左边啊,但是3个楼梯组成,那第二个就是在右边</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-686871d721ebd973.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>我不是先盖楼然后设计楼梯的,我是先弄好楼梯然后弄楼,因为我之前就是先随意拉楼高,结果太高了,这估计得4个阶梯组成才能上去了,因为我怕楼梯拉伸太高,所以我干脆先弄楼梯, 之前搞得一个台阶去适应楼层高度,1个台阶高过一个膝盖.无语死了</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-dfe7f9036ea97a3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-0439fdd5eaaf881c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-5ce740a3e54796b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-b600376f14ca6c6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/24da50d772b6&quot;&gt;没当过水泥工的我才知道搞了好几次楼梯多次返工原来楼梯要这样设计&lt;/a&gt;&lt;br&gt;文章字数：538,阅读全文大约需要2分钟&lt;br&gt;这里面每一个缺口实际上一个门.1层楼我设
      
    
    </summary>
    
      <category term="建模" scheme="https://lozn.top/categories/%E5%BB%BA%E6%A8%A1/"/>
    
    
      <category term="建模" scheme="https://lozn.top/tags/%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>javacjs超大整数比较思路</title>
    <link href="https://lozn.top/2023/02/21/java-c#-js%E8%B6%85%E5%A4%A7%E6%95%B4%E6%95%B0%E6%AF%94%E8%BE%83%E6%80%9D%E8%B7%AF/"/>
    <id>https://lozn.top/2023/02/21/java-c#-js超大整数比较思路/</id>
    <published>2023-02-21T07:08:21.000Z</published>
    <updated>2023-08-20T06:56:44.276Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/190ed82b5f0c">javacjs超大整数比较思路</a><br>文章字数：396,阅读全文大约需要1分钟</p><p>由于我的app不再用版本号比较版本,而是用编译时间,因此我就想到了超大整数函数解决这个问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        BigInteger num1 = new BigInteger(&quot;202302031422&quot;);</span><br><span class="line">        BigInteger num2 = new BigInteger(&quot;202302031433&quot;);</span><br><span class="line"></span><br><span class="line">        int result = num1.compareTo(num2);</span><br><span class="line"></span><br><span class="line">        if (result &lt; 0) &#123;</span><br><span class="line">            System.out.println(num1 + &quot; 小于 &quot; + num2);</span><br><span class="line">        &#125; else if (result &gt; 0) &#123;</span><br><span class="line">            System.out.println(num1 + &quot; 大于 &quot; + num2);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            System.out.println(num1 + &quot; 等于 &quot; + num2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>思路2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">String num1 = &quot;202302031422&quot;;</span><br><span class="line">String num2 = &quot;202302031433&quot;;</span><br><span class="line"></span><br><span class="line">// 比较长度，长度不同的先返回</span><br><span class="line">int len1 = num1.length();</span><br><span class="line">int len2 = num2.length();</span><br><span class="line">if (len1 &lt; len2) &#123;</span><br><span class="line">    System.out.println(num1 + &quot; 小于 &quot; + num2);</span><br><span class="line">&#125; else if (len1 &gt; len2) &#123;</span><br><span class="line">    System.out.println(num1 + &quot; 大于 &quot; + num2);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    // 长度相同，逐位比较</span><br><span class="line">    for (int i = 0; i &lt; len1; i++) &#123;</span><br><span class="line">        char c1 = num1.charAt(i);</span><br><span class="line">        char c2 = num2.charAt(i);</span><br><span class="line">        if (c1 &lt; c2) &#123;</span><br><span class="line">            System.out.println(num1 + &quot; 小于 &quot; + num2);</span><br><span class="line">            return;</span><br><span class="line">        &#125; else if (c1 &gt; c2) &#123;</span><br><span class="line">            System.out.println(num1 + &quot; 大于 &quot; + num2);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(num1 + &quot; 等于 &quot; + num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">et num1 = &quot;202302031422&quot;;</span><br><span class="line">let num2 = &quot;202302031433&quot;;</span><br><span class="line"></span><br><span class="line">let result = BigInt(num1) &lt; BigInt(num2) ? num1 + &quot; 小于 &quot; + num2</span><br><span class="line">                : BigInt(num1) &gt; BigInt(num2) ? num1 + &quot; 大于 &quot; + num2 </span><br><span class="line">                : num1 + &quot; 等于 &quot; + num2;</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure><p>c#</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Numerics;</span><br><span class="line"></span><br><span class="line">class Program</span><br><span class="line">&#123;</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        string num1 = &quot;202302031422&quot;;</span><br><span class="line">        string num2 = &quot;202302031433&quot;;</span><br><span class="line"></span><br><span class="line">        BigInteger bigInt1 = BigInteger.Parse(num1);</span><br><span class="line">        BigInteger bigInt2 = BigInteger.Parse(num2);</span><br><span class="line"></span><br><span class="line">        int result = bigInt1.CompareTo(bigInt2);</span><br><span class="line"></span><br><span class="line">        if (result &lt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(num1 + &quot; 小于 &quot; + num2);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (result &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(num1 + &quot; 大于 &quot; + num2);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(num1 + &quot; 等于 &quot; + num2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/190ed82b5f0c&quot;&gt;javacjs超大整数比较思路&lt;/a&gt;&lt;br&gt;文章字数：396,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p&gt;由于我的app不再用版本号比较版本,而是用编译时间,因此我就想到
      
    
    </summary>
    
      <category term="编程杂项" scheme="https://lozn.top/categories/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="编程杂项" scheme="https://lozn.top/tags/%E7%BC%96%E7%A8%8B%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>aspnetcoreapiMapGet指定html让其不转义</title>
    <link href="https://lozn.top/2023/02/21/asp-net-core-api--MapGet%E6%8C%87%E5%AE%9Ahtml,%E8%AE%A9%E5%85%B6%E4%B8%8D%E8%BD%AC%E4%B9%89/"/>
    <id>https://lozn.top/2023/02/21/asp-net-core-api--MapGet指定html,让其不转义/</id>
    <published>2023-02-21T02:13:44.000Z</published>
    <updated>2023-08-20T06:56:44.272Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/ac8433a2ad34">aspnetcoreapiMapGet指定html让其不转义</a><br>文章字数：28,阅读全文大约需要1分钟<br>这种情况下,无法填写html  ,因为永远都会转义<br><code>app.MapGet(&quot;/&quot;, () =&gt; &quot;This is a POST /swagger/index.html&quot;);</code><br>需要改为下面这种</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.MapGet(&quot;/&quot;, async context =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    context.Response.Headers.Add(&quot;Content-Type&quot;, &quot;text/html&quot;);</span><br><span class="line">    await context.Response.WriteAsync(&quot;&lt;a href=\&quot;/swagger/index.html\&quot;&gt;SWAGGER API&lt;/a&gt;&lt;br/&gt; &quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/ac8433a2ad34&quot;&gt;aspnetcoreapiMapGet指定html让其不转义&lt;/a&gt;&lt;br&gt;文章字数：28,阅读全文大约需要1分钟&lt;br&gt;这种情况下,无法填写html  ,因为永远都
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>WINDOW11系统修复排查思路大全</title>
    <link href="https://lozn.top/2023/02/19/WINDOW11%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D-%E6%8E%92%E6%9F%A5%E6%80%9D%E8%B7%AF%E5%A4%A7%E5%85%A8/"/>
    <id>https://lozn.top/2023/02/19/WINDOW11系统修复-排查思路大全/</id>
    <published>2023-02-19T10:10:36.000Z</published>
    <updated>2023-08-20T06:56:44.260Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/9c1c7f88c3f0">WINDOW11系统修复排查思路大全</a><br>文章字数：2756,阅读全文大约需要11分钟<br>删除Windows系统文件夹可能会导致系统出现各种问题，建议不要随意删除系统文件夹。</p><p>使用系统还原：如果你之前启用了系统还原功能，可以尝试使用该功能来恢复系统到之前的某个时间点。打开“控制面板” &gt; “系统和安全” &gt; “文件历史记录” &gt; “还原个人文件”或“还原系统设置或计算机”。</p><p>运行系统文件检查工具：打开命令提示符（以管理员身份运行），输入“sfc &#x2F;scannow”命令并按回车键，等待系统扫描并修复可能存在的系统文件问题。</p><p>重新安装Microsoft Store应用：在Windows 10中，Microsoft Store是一个应用程序，你可以尝试从Microsoft官方网站上下载并重新安装Microsoft Store应用程序，然后重新启动计算机。</p><p>重置Windows 10：如果以上步骤都无法解决问题，可以尝试重置Windows 10。打开“设置” &gt; “更新和安全” &gt; “恢复”，在“重置此PC”下选择“开始”。</p><p>需要注意的是，重置Windows 10将会删除所有个人文件、安装的应用程序和自定义设置，请提前备份重要文件。</p><p>运行DISM工具：打开命令提示符（以管理员身份运行），输入“dism &#x2F;online &#x2F;cleanup-image &#x2F;restorehealth”命令并按回车键，等待系统扫描并修复可能存在的映像问题。</p><p>手动重新注册应用程序：打开命令提示符（以管理员身份运行），输入以下命令并按回车键：</p><p>对于Microsoft Store应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PowerShell -ExecutionPolicy Unrestricted Add-AppxPackage -DisableDevelopmentMode -Register $Env:SystemRoot\WinStore\AppxManifest.xml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于Cortana应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Get-AppXPackage -AllUsers |Where-Object &#123;$_.InstallLocation -like &quot;*SystemApps*&quot;&#125; | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用Windows 10安装媒体进行修复安装：如果以上方法都无法解决问题，可以尝试使用Windows 10安装媒体进行修复安装。下载适合你的Windows 10版本的安装媒体，将其烧录到光盘或制作成U盘启动盘，然后从安装媒体启动计算机，选择“修复你的计算机”选项进行修复安装。</p><p>高级修复<br>使用管理员权限启动Windows PowerShell，并运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Get-AppxPackage -allusers Microsoft.WindowsStore | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;</span><br></pre></td></tr></table></figure><p>该命令将强制重新安装 Microsoft Store 应用程序。如果 Microsoft Store 应用程序的文件已经损坏或遗失，它可能无法正常运行，此时重装应用程序可能有助于解决问题。</p><p>如果 Microsoft Store 应用程序已经重新安装，但问题仍未得到解决，可以尝试清除 Microsoft Store 应用程序的本地缓存。打开“设置” &gt; “应用” &gt; “应用和功能”，找到 Microsoft Store 应用程序，单击它，然后单击“高级选项”。在“重置”部分，单击“重置”按钮。这将清除 Microsoft Store 应用程序的本地缓存。</p><p>修复 Windows 10 操作系统文件。打开命令提示符，以管理员身份运行，输入以下命令并按回车键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DISM.exe /Online /Cleanup-image /Restorehealth</span><br></pre></td></tr></table></figure><p>这将扫描系统映像以检测任何问题，并尝试修复它们。</p><p>如果问题仍然存在，可能需要执行 Windows 10 修复安装。这将重新安装操作系统，但保留您的文件和个人数据。你需要下载最新的 Windows 10 ISO 文件并将其烧录到可引导的 USB 驱动器或 DVD 上。随后，插入 Windows 10 安装介质并运行安装程序。在安装程序中，选择“保留您的文件和个人数据”，然后按照屏幕上的说明完成操作。<br>需要注意的是，在执行以上步骤之前，最好备份重要文件和数据。</p><p>如果你尝试过重置 Windows Store 应用程序并修复系统文件但问题仍然存在，你可以尝试以下两个方法：</p><p>运行 Windows 10 应用商店应用商店应用的故障排除工具。打开“设置” &gt; “更新和安全” &gt; “故障排除”，然后找到“Windows 应用商店应用”并运行该工具。</p><p>使用 Windows PowerShell 手动重置 Windows Store 应用程序。打开管理员权限的 Windows PowerShell，输入以下命令并按回车键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Get-AppXPackage *WindowsStore* -AllUsers | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果 AppXManifest.xml 文件已经被删除，那么 PowerShell 命令就无法成功运行。为了解决这个问题，你可以从 Windows 应用商店重新安装 Windows Store 应用程序，这样会恢复缺失的文件。</p><p>打开“设置” &gt; “应用” &gt; “应用和功能”。</p><p>找到 Microsoft Store 应用程序，然后单击它。</p><p>单击“高级选项”。</p><p>滚动到底部，然后单击“重置”按钮。这将清除 Microsoft Store 应用程序的本地缓存，并删除任何丢失的文件。</p><p>重新启动计算机，并尝试打开 Microsoft Store 应用程序，看看是否已经恢复正常。如果 Microsoft Store 应用程序无法打开，请执行以下步骤。</p><p>打开 PowerShell（管理员权限），然后输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-AppxPackage -allusers Microsoft.WindowsStore | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”&#125;</span><br></pre></td></tr></table></figure><p>如果 Microsoft Store 仍无法打开，可能需要进行更深入的故障排除，可以尝试以下方法：</p><p>确保你的 Windows 10 系统已经更新到最新版本。在“设置”中选择“更新和安全” &gt; “Windows Update”，确保你已经安装了所有可用的更新。</p><p>禁用 Windows 防火墙和第三方防病毒软件。有时这些程序可能会干扰 Microsoft Store 的正常运行。</p><p>检查系统日期和时间是否正确。如果日期和时间不正确，有些应用程序可能无法连接到互联网。</p><p>使用 Microsoft Store 应用商店应用的故障排除工具。打开“设置” &gt; “更新和安全” &gt; “故障排除”，然后找到“Windows 应用商店应用”并运行该工具。</p><p>重置 Microsoft Store 应用程序。打开“设置” &gt; “应用” &gt; “应用和功能”，然后找到 Microsoft Store 应用程序，单击它，然后单击“高级选项”，滚动到底部，然后单击“重置”按钮。</p><p>在 PowerShell 中运行以下命令，以重置 Microsoft Store 应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Get-AppxPackage -allusers Microsoft.WindowsStore | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果你想重新安装 Microsoft Store 应用程序，可以按照以下步骤操作：</p><p>以管理员身份运行 PowerShell。</p><p>在 PowerShell 窗口中运行以下命令，以卸载 Microsoft Store 应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-AppxPackage Microsoft.WindowsStore | Remove-AppxPackage</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后运行以下命令，从 Microsoft Store 应用程序存储库中获取最新版本的应用程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-AppxPackage -allusers Microsoft.WindowsStore | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;</span><br></pre></td></tr></table></figure><p>重新安装 PowerShell 和 Windows 终端 (wt.exe)，可以按照以下步骤操作：</p><p>打开 PowerShell 命令提示符窗口 (以管理员身份运行)。</p><p>运行以下命令以卸载 PowerShell 和 Windows 终端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Get-AppxPackage Microsoft.PowerShell | Remove-AppxPackage</span><br><span class="line">Get-AppxPackage Microsoft.WindowsTerminal | Remove-AppxPackage</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">然后运行以下命令以从 Microsoft Store 应用程序存储库中获取最新版本的 PowerShell 和 Windows 终端：</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Get-AppxPackage -allusers Microsoft.PowerShell | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($<em>.InstallLocation)\AppXManifest.xml”}<br>Get-AppxPackage -allusers Microsoft.WindowsTerminal | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($</em>.InstallLocation)\AppXManifest.xml”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果你在运行 Windows 终端 (wt.exe) 时收到“该进程没有程序包标识符”的错误消息，可能是由于应用程序包文件已损坏或丢失，或者与应用程序关联的组件已损坏。你可以尝试使用以下方法解决此问题：</span><br><span class="line"></span><br><span class="line">使用 PowerShell 重新安装 Windows 终端应用程序</span><br><span class="line">打开 PowerShell 命令提示符窗口 (以管理员身份运行)，然后运行以下命令以卸载 Windows 终端应用程序：</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Get-AppxPackage Microsoft.WindowsTerminal | Remove-AppxPackage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来，运行以下命令，从 Microsoft Store 应用程序存储库中获取最新版本的应用程序包：</span><br></pre></td></tr></table></figure><p>Get-AppxPackage -allusers Microsoft.WindowsTerminal | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修复 Windows 终端应用程序关联</span><br><span class="line">按下 Windows 键 + R 键，打开运行对话框，然后输入“cmd”并按下 Enter 键以打开命令提示符窗口。在命令提示符窗口中，输入以下命令并按下 Enter 键：确保是管理员权限运行</span><br></pre></td></tr></table></figure><p>assoc .exe&#x3D;exefile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">### window搜索重新安装</span><br><span class="line"></span><br><span class="line">重启 Windows 搜索服务</span><br><span class="line">按下 Windows 键 + R 键，打开运行对话框。</span><br><span class="line">输入“services.msc”并按下 Enter 键以打开 Windows 服务控制台。</span><br><span class="line">滚动到找到“Windows 搜索”服务。</span><br><span class="line">右键单击该服务，选择“停止”选项，等待一段时间。</span><br><span class="line">再次右键单击该服务，选择“启动”选项。</span><br><span class="line">关闭服务控制台，重新启动你的计算机。</span><br><span class="line">重置 Windows 搜索应用程序</span><br><span class="line">按下 Windows 键 + I 键，打开“设置”应用程序。</span><br><span class="line">选择“应用程序”选项。</span><br><span class="line">在左侧菜单中选择“应用和功能”选项。</span><br><span class="line">找到并选择“Windows 搜索”应用程序，然后选择“高级选项”链接。</span><br><span class="line">在弹出的窗口中，选择“重置”按钮并确认重置操作。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Get-AppxPackage Microsoft.WindowsSearch | Remove-AppxPackage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">重启 Windows Explorer 进程</span><br><span class="line">按下 Ctrl + Shift + Esc 组合键打开任务管理器。</span><br><span class="line">找到 Windows Explorer 进程并右键单击，选择“结束任务”。</span><br><span class="line">在任务管理器的菜单栏中选择“文件” -&gt; “运行新任务”。</span><br><span class="line">在“新建任务”对话框中输入“explorer.exe”，勾选“以管理员身份运行”复选框，然后单击“确定”。</span><br><span class="line">重置任务栏</span><br><span class="line">按下 Windows 键 + X 键，选择“Windows PowerShell（管理员）”选项。</span><br><span class="line">运行以下命令以重置任务栏：</span><br><span class="line">重置任务栏</span><br></pre></td></tr></table></figure><p>Get-AppXPackage -AllUsers | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-20236706949e1c2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">如果出现了部署失败的错误，很可能是因为某个程序包正在使用中，无法安装新的程序包。你可以尝试先停止相关的服务或进程，再重新运行命令进行安装。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果出现了部署失败的错误，很可能是因为某个程序包正在使用中，无法安装新的程序包。你可以尝试先停止相关的服务或进程，再重新运行命令进行安装。</span><br><span class="line"></span><br><span class="line">具体的做法如下：</span><br><span class="line"></span><br><span class="line">停止相关的服务或进程</span><br><span class="line">按下 Win + R 组合键打开“运行”对话框，输入“services.msc”并按下 Enter 键打开“服务”窗口。</span><br><span class="line">在“服务”窗口中，找到名为“Windows Update”、“Windows Modules Installer”、“Windows Defender Service”、“Windows Store Service（WSService）”、“Windows Installer”、“TrustedInstaller”等服务，右键单击，选择“停止”选项以停止相关服务。</span><br><span class="line">打开任务管理器，找到名为“Microsoft.Windows.Cortana”、“Microsoft.Windows.ShellExperienceHost”、“SearchUI”等进程，右键单击，选择“结束任务”选项以结束相关进程。</span><br><span class="line">重新安装程序包</span><br><span class="line">按下 Win + X 组合键，选择“Windows PowerShell（管理员）”选项。</span><br><span class="line">在 PowerShell 命令提示符窗口中，输入以下命令，以重新安装 Microsoft Store 应用程序包：</span><br></pre></td></tr></table></figure><p>Get-AppxPackage -allusers Microsoft.WindowsStore | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bat文件一键 关闭所有服务</span><br></pre></td></tr></table></figure><p>@echo off<br>net stop WSearch<br>net stop WSService<br>net stop Wuauserv<br>net stop WinDefend<br>net stop BITS<br>net stop TrustedInstaller</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这里我们关闭了几个可能会影响到应用程序包安装的 Windows 服务，包括：</span><br><span class="line"></span><br><span class="line">WSearch：Windows 搜索服务</span><br><span class="line">WSService：Windows 商店服务</span><br><span class="line">Wuauserv：Windows 更新服务</span><br><span class="line">WinDefend：Windows Defender 防病毒软件</span><br><span class="line">BITS：后台智能传输服务</span><br><span class="line">TrustedInstaller：Windows 模块安装器服务</span><br><span class="line">你可以根据需要添加或删除其他服务。</span><br><span class="line"></span><br><span class="line">保存文件时，将文件类型更改为“所有文件”，文件名以“.bat”结尾，例如“stop_services.bat”。</span><br><span class="line">关闭所有服务</span><br></pre></td></tr></table></figure><p>net stop wuauserv<br>net stop cryptSvc<br>net stop bits<br>net stop msiserver<br>net stop appidsvc<br>net stop wscsvc<br>net stop wuauserv<br>net stop tapisrv<br>net stop spooler<br>net stop profsvc<br>net stop fdPHost<br>net stop OneSyncSvc<br>net stop PimIndexMaintenanceSvc<br>net stop SENS<br>net stop ShellHWDetection<br>net stop SysMain<br>net stop UmRdpService<br>net stop WSearch<br>net stop AJRouter<br>net stop BFE<br>net stop DcomLaunch<br>net stop Dhcp<br>net stop Dnscache<br>net stop LSM<br>net stop lanmanserver<br>net stop lanmanworkstation<br>net stop lfsvc<br>net stop lfsvc<br>net stop lmhosts<br>net stop MMCSS<br>net stop NcbService<br>net stop Netlogon<br>net stop Netman<br>net stop netprofm<br>net stop NlaSvc<br>net stop nsi<br>net stop PcaSvc<br>net stop PolicyAgent<br>net stop Power<br>net stop RasMan<br>net stop RpcEptMapper<br>net stop RpcSs<br>net stop SamSs<br>net stop Schedule<br>net stop SCardSvr<br>net stop seclogon<br>net stop SENS<br>net stop ShellHWDetection<br>net stop SNMPTRAP<br>net stop Spooler<br>net stop SSDPSRV<br>net stop SstpSvc<br>net stop stisvc<br>net stop swprv<br>net stop SysMain<br>net stop TabletInputService<br>net stop Themes<br>net stop THREADORDER<br>net stop TrkWks<br>net stop TrustedInstaller<br>net stop UevAgentService<br>net stop UevAppMonitor<br>net stop UevSyncProvider<br>net stop UsoSvc<br>net stop VaultSvc<br>net stop VSS<br>net stop W32Time<br>net stop Wcmsvc<br>net stop WebClient<br>net stop WinHttpAutoProxySvc<br>net stop Winmgmt<br>net stop Wlansvc<br>net stop wmiApSrv<br>net stop WpnService<br>net stop wscsvc<br>net stop wuauserv<br>net stop WwanSvc</p><pre><code>Get-AppXPackage -AllUsers | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;1、SFC /SCANNOW2、Dism /Online /Cleanup-Image /restoreHealth3、更改C:\Program Files\WindowsApps的访问权限4、 win+R运行输入services.msc打开系统服务找到Windows Defender Firewall服务并启动5、新建一个Windows账户 但是：统统无用。 ：https://superuser.com/questions/1456837/powershell-他的方法是：win+r输入regedit打开注册表，找到```\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\AppXSvc```右边的start，修改为2重启电脑![关闭](https://upload-images.jianshu.io/upload_images/2815884-4407ee381d0adf85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)wt.exe无法打开可以在应用别名中gwt</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/9c1c7f88c3f0&quot;&gt;WINDOW11系统修复排查思路大全&lt;/a&gt;&lt;br&gt;文章字数：2756,阅读全文大约需要11分钟&lt;br&gt;删除Windows系统文件夹可能会导致系统出现各种问题，建议不
      
    
    </summary>
    
      <category term="window" scheme="https://lozn.top/categories/window/"/>
    
    
      <category term="window" scheme="https://lozn.top/tags/window/"/>
    
  </entry>
  
  <entry>
    <title>python阿里云和官方源不好使切换豆瓣源解决问题</title>
    <link href="https://lozn.top/2023/02/19/%5Bpython%5D%E9%98%BF%E9%87%8C%E4%BA%91%E5%92%8C%E5%AE%98%E6%96%B9%E6%BA%90%E4%B8%8D%E5%A5%BD%E4%BD%BF%E5%88%87%E6%8D%A2%E8%B1%86%E7%93%A3%E6%BA%90%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://lozn.top/2023/02/19/[python]阿里云和官方源不好使切换豆瓣源解决问题/</id>
    <published>2023-02-19T10:03:14.000Z</published>
    <updated>2023-08-20T06:56:44.260Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/aa6a97040fad">python阿里云和官方源不好使切换豆瓣源解决问题</a><br>文章字数：269,阅读全文大约需要1分钟</p><p>首先是尝试使用官方源和阿里云 都出现了问题,最后切换豆瓣发现ok了</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f5ffe7776c902563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-723eae010b1a131e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-ede555bb347570e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><code>python.exe -m pip install --upgrade pip -i http://pypi.douban.com/simple --trusted-host pypi.douban.com</code></p><h1 id="2设置为信任源"><a href="#2设置为信任源" class="headerlink" title="2设置为信任源"></a>2设置为信任源</h1><p><code>pip config set install.trusted-host pypi.douban.com</code></p><p><code>D:\dev\ChatGPT\src\revChatGPT&gt;pip config set global.index-url http://pypi.douban.com/simple</code><br><code>Writing to C:\Users\Administrator\AppData\Roaming\pip\pip.ini</code><br>如下图所示发现豆瓣没问题,我决定直接设置为永久豆瓣源,并笔记记录下来<br><img src="https://upload-images.jianshu.io/upload_images/2815884-bbea2af48d42d7fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">豆瓣：http://pypi.douban.com/simple/</span><br><span class="line">阿里云：http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">华为云：https://repo.huaweicloud.com/repository/pypi/simple</span><br><span class="line">清华大学：https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">中科大：https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line">官方:https://pypi.python.org/pyp</span><br></pre></td></tr></table></figure><p><code>echo %HOMEPATH% </code><br>C:\Users\Administrator\AppData\Roaming\pip\pip.ini</p><p>找到配置文件永久信任源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br><span class="line"></span><br><span class="line">[install]</span><br><span class="line">trusted-host = pypi.douban.com</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/aa6a97040fad&quot;&gt;python阿里云和官方源不好使切换豆瓣源解决问题&lt;/a&gt;&lt;br&gt;文章字数：269,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p&gt;首先是尝试使用官方源和阿里云 都出现了问题,
      
    
    </summary>
    
      <category term="python" scheme="https://lozn.top/categories/python/"/>
    
    
      <category term="python" scheme="https://lozn.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>蓝图通讯之事件分发器用法</title>
    <link href="https://lozn.top/2023/02/18/%E8%93%9D%E5%9B%BE%E9%80%9A%E8%AE%AF%E4%B9%8B%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E5%99%A8%E7%94%A8%E6%B3%95/"/>
    <id>https://lozn.top/2023/02/18/蓝图通讯之事件分发器用法/</id>
    <published>2023-02-18T02:13:41.000Z</published>
    <updated>2023-08-20T06:56:44.304Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/8c1b9f19c166">蓝图通讯之事件分发器用法</a><br>文章字数：498,阅读全文大约需要1分钟<br>在事件分发器点 加号添加一个分发器</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-fa4e9c202b950276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在蓝图开始运行就进行绑定这个事件,<br><img src="https://upload-images.jianshu.io/upload_images/2815884-1d21f60e79aaf150.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>他会创建一个以分发器开头_事件的东西.</p><p>而绑定类似,只是没有创建和连接<br><img src="https://upload-images.jianshu.io/upload_images/2815884-258084ae98ebacf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-f2d42c3e0f605bcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后 我们设置一个键触发这个逻辑.<br><img src="https://upload-images.jianshu.io/upload_images/2815884-e35b970517efde5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后验证多次输入多次触发,类似编程中的事件订阅.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/8c1b9f19c166&quot;&gt;蓝图通讯之事件分发器用法&lt;/a&gt;&lt;br&gt;文章字数：498,阅读全文大约需要1分钟&lt;br&gt;在事件分发器点 加号添加一个分发器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://lozn.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="游戏开发" scheme="https://lozn.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>条件编译在vs显示bug以及aot编译条件编译变量读取不到bug调研</title>
    <link href="https://lozn.top/2023/02/18/%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91%E5%9C%A8vs%E6%98%BE%E7%A4%BAbug%E4%BB%A5%E5%8F%8Aaot%E7%BC%96%E8%AF%91-%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91%E5%8F%98%E9%87%8F%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%88%B0bug%E8%B0%83%E7%A0%94/"/>
    <id>https://lozn.top/2023/02/18/条件编译在vs显示bug以及aot编译-条件编译变量读取不到bug调研/</id>
    <published>2023-02-18T02:12:06.000Z</published>
    <updated>2023-08-20T06:56:44.300Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/fd3411bd7916">条件编译在vs显示bug以及aot编译条件编译变量读取不到bug调研</a><br>文章字数：572,阅读全文大约需要2分钟<br>这是显示bug,<br>经常出现多个配置合并到一起,以及配置名不显示,甚至cpu架构分开每一个单独配置,甚至出现修改一个编辑框,把所有的不同(渠道)配置编辑框全部改掉了<br><img src="https://upload-images.jianshu.io/upload_images/2815884-52072eeede1707fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>而且vary value by platform甚至自动给勾选了,有点恼火,我测试几个vs都是这样,这可能是配置太多导致的bug<br><img src="https://upload-images.jianshu.io/upload_images/2815884-0b9c93cf38969de9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>对于这种bug基本无解,为了解决这个bug,我之前操作是把其他cpu架构全部干掉,只保留64, 包括删除sln里面的,以及 csproj里面的,结果是测试没啥问题但是aot编译我发现 运行后根本没读取到 条件编译里面的宏定义.</p><p>最后我撤回了修改,arm的干掉,any cpu也得保留,不然搞不好又搞出致命问题.</p><p>对于vs识别显示的bug 偶发,不管了. 总比编译无法识别到宏定义导致我的模块全部没有打包编译进去.这才头疼.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/fd3411bd7916&quot;&gt;条件编译在vs显示bug以及aot编译条件编译变量读取不到bug调研&lt;/a&gt;&lt;br&gt;文章字数：572,阅读全文大约需要2分钟&lt;br&gt;这是显示bug,&lt;br&gt;经常出现多
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>关于cnet70aot解决警告大神的交流探索</title>
    <link href="https://lozn.top/2023/02/17/%E5%85%B3%E4%BA%8E-c#--net-7-0-aot-%E8%A7%A3%E5%86%B3%E8%AD%A6%E5%91%8A%E5%A4%A7%E7%A5%9E%E7%9A%84%E4%BA%A4%E6%B5%81%E6%8E%A2%E7%B4%A2/"/>
    <id>https://lozn.top/2023/02/17/关于-c#--net-7-0-aot-解决警告大神的交流探索/</id>
    <published>2023-02-17T07:57:37.000Z</published>
    <updated>2023-08-20T06:56:44.292Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/31b582e14e45">关于cnet70aot解决警告大神的交流探索</a><br>文章字数：1731,阅读全文大约需要6分钟</p><h3 id="问"><a href="#问" class="headerlink" title="问"></a>问</h3><p>我使用.net aot进行编译出现了警告可以帮我解决吗<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\.nuget\packages\microsoft.aspnetcore.mvc.newtonsoftjson\7.0.1\lib\net7.0\Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll : warning IL3053: Assembly &#x27;Microsoft.AspNetCore.Mvc.NewtonsoftJson&#x27; produced AOT analysis warnings. [D:\dev\company_project\\webapi_mes\webapi_mes.csproj]</span><br><span class="line">C:\Users\Administrator\.nuget\packages\microsoft.aspnetcore.jsonpatch\7.0.1\lib\net7.0\Microsoft.AspNetCore.JsonPatch.dll : warning IL2104: Assembly &#x27;Microsoft.AspNetCore.JsonPatch&#x27; produced trim warnings. For more information see https://aka.ms/dotnet-illink/libraries [D:\dev\company_project\sotrun_webapi\webapi_mes\webapi_mes.csproj]</span><br><span class="line">C:\Users\Administrator\.nuget\packages\microsoft.aspnetcore.jsonpatch\7.0.1\lib\net7.0\Microsoft.AspNetCore.JsonPatch.dll : warning IL3053: Assembly &#x27;Microsoft.AspNetCore.JsonPatch&#x27; produced AOT analysis warnings. [D:\dev\company_project\\webapi_mes\webapi_mes.csproj]</span><br><span class="line">C:\Users\Administrator\.nuget\packages\swashbuckle.aspnetcore.swaggergen\6.2.3\lib\net6.0\Swashbuckle.AspNetCore.SwaggerGen.dll : warning IL2104: Assembly &#x27;Swashbuckle.AspNetCore.SwaggerGen&#x27; </span><br></pre></td></tr></table></figure></p><h3 id="答"><a href="#答" class="headerlink" title="答"></a>答</h3><p>这些警告都是关于.NET AOT编译器的。 AOT编译器通常会检查程序集，以确定哪些代码需要在应用程序启动时预先编译。这些警告都是警告开发人员程序集中的某些部分可能无法预先编译，因此需要在应用程序运行时进行JIT编译。这可能会导致应用程序的性能问题。</p><p>以下是一些可能的解决方法：</p><p>更新依赖项： 有时，这些警告可能是由于使用较旧的依赖项版本而引起的。请确保所有依赖项都是最新版本，并重新构建应用程序。</p><p>禁用警告： 在某些情况下，您可能希望禁用这些警告，以便编译器不会显示它们。您可以通过向csproj文件添加以下XML代码来禁用警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;PropertyGroup&gt;</span><br><span class="line">  &lt;SuppressILLinkTrimAnalysisWarnings&gt;true&lt;/SuppressILLinkTrimAnalysisWarnings&gt;</span><br><span class="line">  &lt;SuppressAOTAnalysisWarnings&gt;true&lt;/SuppressAOTAnalysisWarnings&gt;</span><br><span class="line">&lt;/PropertyGroup&gt;</span><br></pre></td></tr></table></figure><p>问<br>我需要彻底根除警告,请问aot 怎么 修复这些错误 上面的代码是使用.net 7.0进行 aot编译的, 应该如何编写rd.xml解决上面的错误呢 上面的错误信息  使用了web core api, 以及swagger</p><p>要解决AOT编译错误，你可以创建一个名为”YourAssemblyName.rd.xml”的XML文件，其中”YourAssemblyName”是要进行AOT编译的程序集的名称。在这个XML文件中，你需要添加一些规则来帮助编译器生成正确的代码。</p><p>对于使用了Web Core API和Swagger的程序集，你可以添加以下规则：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;Directives xmlns=&quot;http://schemas.microsoft.com/netfx/2013/01/metadata&quot;&gt;</span><br><span class="line">  &lt;Application&gt;</span><br><span class="line">    &lt;Assembly Name=&quot;YourAssemblyName&quot;&gt;</span><br><span class="line">      &lt;Type Name=&quot;System.Net.Http.HttpClient&quot;&gt;</span><br><span class="line">        &lt;MethodInstantiation Name=&quot;GetAsync&quot; Arguments=&quot;System.Uri&quot;&gt;</span><br><span class="line">          &lt;SuppressGCTransition /&gt;</span><br><span class="line">        &lt;/MethodInstantiation&gt;</span><br><span class="line">      &lt;/Type&gt;</span><br><span class="line">      &lt;Type Name=&quot;Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions&quot;&gt;</span><br><span class="line">        &lt;Member Name=&quot;DocumentFilter&quot; Signature=&quot;System.Func`2[[Swashbuckle.AspNetCore.Swagger.SwaggerDocument, Swashbuckle.AspNetCore, Version=6.0.0.0, Culture=neutral, PublicKeyToken=null],[Swashbuckle.AspNetCore.Swagger.SwaggerDocument, Swashbuckle.AspNetCore, Version=6.0.0.0, Culture=neutral, PublicKeyToken=null]]&quot;&gt;</span><br><span class="line">          &lt;SuppressGCTransition /&gt;</span><br><span class="line">        &lt;/Member&gt;</span><br><span class="line">        &lt;Member Name=&quot;SchemaFilter&quot; Signature=&quot;System.Func`2[[Swashbuckle.AspNetCore.SwaggerGen.SchemaGenerator.Schema, Swashbuckle.AspNetCore, Version=6.0.0.0, Culture=neutral, PublicKeyToken=null],[Swashbuckle.AspNetCore.Swagger.SwaggerSchema, Swashbuckle.AspNetCore, Version=6.0.0.0, Culture=neutral, PublicKeyToken=null]]&quot;&gt;</span><br><span class="line">          &lt;SuppressGCTransition /&gt;</span><br><span class="line">        &lt;/Member&gt;</span><br><span class="line">      &lt;/Type&gt;</span><br><span class="line">    &lt;/Assembly&gt;</span><br><span class="line">  &lt;/Application&gt;</span><br><span class="line">&lt;/Directives&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个XML文件中，你可以看到两个<Type>元素，分别对应了System.Net.Http.HttpClient和<code>Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions</code>类型。每个<Type>元素都包含了一个或多个<MethodInstantiation>或<Member>元素，用于指定需要进行AOT编译的方法或成员。在这个例子中，我们使用了<SuppressGCTransition>元素来防止代码执行时进行垃圾回收，从而解决了AOT编译错误。</p><p>请注意，这只是一个例子，你需要根据自己程序中具体使用到的类型和方法来修改XML文件。同时，这个XML文件也需要添加到你的项目中，并在项目属性中设置”Embed in .dll”属性为”True”，以便在AOT编译时使用。</p><p>希望能对你有所帮助！</p><p>请根据上面的警告自动帮我编写rd.xml  或者通过编写AddContext解决</p><p>很抱歉，我作为一个语言模型无法直接为您编写或自动生成 rd.xml 文件或 AddContext 方法。但是，我可以向您解释如何手动编写 rd.xml 文件或 AddContext 方法来解决上述警告。</p><p>对于第一个警告 “Could not find method ‘Void Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.ConfigureApiBehaviorOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)’”，您可以通过将以下内容添加到 rd.xml 文件中来修复它：</p><p>xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;MethodInstantiation</span><br><span class="line">    TypeName=&quot;Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions&quot;</span><br><span class="line">    MethodName=&quot;ConfigureApiBehaviorOptions&quot;</span><br><span class="line">    Signature=&quot;System.Void ConfigureApiBehaviorOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)&quot;&gt;</span><br><span class="line">&lt;/MethodInstantiation&gt;</span><br></pre></td></tr></table></figure><p>对于第二个警告 “Could not find method ‘Void Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions.set_SwaggerGeneratorOptions(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions)’”，您可以通过将以下内容添加到 rd.xml 文件中来修复它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;MethodInstantiation</span><br><span class="line">    TypeName=&quot;Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions&quot;</span><br><span class="line">    MethodName=&quot;set_SwaggerGeneratorOptions&quot;</span><br><span class="line">    Signature=&quot;System.Void set_SwaggerGeneratorOptions(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions)&quot;&gt;</span><br><span class="line">&lt;/MethodInstantiation&gt;</span><br></pre></td></tr></table></figure><p>如果您想编写 AddContext 方法来解决这些警告，您可以在您的代码中添加以下方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">using System.Runtime.CompilerServices;</span><br><span class="line"></span><br><span class="line">public static class AotWorkaround</span><br><span class="line">&#123;</span><br><span class="line">    [ModuleInitializer]</span><br><span class="line">    public static void Initialize()</span><br><span class="line">    &#123;</span><br><span class="line">        // ConfigureApiBehaviorOptions</span><br><span class="line">        ConfigureApiBehaviorOptions(default);</span><br><span class="line"></span><br><span class="line">        // SwaggerGenOptions.set_SwaggerGeneratorOptions</span><br><span class="line">        var options = new Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions();</span><br><span class="line">        options.SwaggerGeneratorOptions = new Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [MethodImpl(MethodImplOptions.NoInlining)]</span><br><span class="line">    private static void ConfigureApiBehaviorOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection services)</span><br><span class="line">    &#123;</span><br><span class="line">        services.AddMvcCore().ConfigureApiBehaviorOptions(options =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            // Add your options here</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个方法中，我们使用 ModuleInitializer 特性来自动调用这个方法。这个方法调用 ConfigureApiBehaviorOptions 和 SwaggerGenOptions.set_SwaggerGeneratorOptions 方法来避免 AOT 编译错误。请注意，ConfigureApiBehaviorOptions 方法需要在 NoInlining 选项下定义，以确保 AOT 编译器可以正确地处理它。</p><p>rd.xml在 .net core api 填写 你上门的建议 提示error : “MethodInstantiation” is not a supported Runtime Directive 只支持assembply和type呢</p><p>非常抱歉，我的建议有误。实际上，rd.xml文件只支持以下几种Runtime Directive：Type、Method、Field、Property、Event、Assembly。</p><p>因此，你无法在rd.xml文件中使用”MethodInstantiation”这个Runtime Directive。</p><p>相反，你可以考虑使用AddContext来解决这个问题。在这种情况下，你需要编写一个类，实现ICompilationSettingsProvider接口，然后使用AddContext方法将其注册。</p><p>下面是一个示例代码，展示了如何使用AddContext方法来解决这个问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">using System.Runtime.CompilerServices;</span><br><span class="line">using System.Runtime.Loader;</span><br><span class="line">using Microsoft.Extensions.DependencyModel;</span><br><span class="line"></span><br><span class="line">[assembly: RuntimeCompatibility(WrapNonExceptionThrows = true)]</span><br><span class="line">[assembly: TypeForwardedTo(typeof(MethodInstantiationInfo))]</span><br><span class="line"></span><br><span class="line">namespace YourNamespace</span><br><span class="line">&#123;</span><br><span class="line">    public class MyCompilationSettingsProvider : ICompilationSettingsProvider</span><br><span class="line">    &#123;</span><br><span class="line">        public bool TryGetCompilationSettings(Type type, out CompilationSettings compilationSettings)</span><br><span class="line">        &#123;</span><br><span class="line">            compilationSettings = null;</span><br><span class="line"></span><br><span class="line">            if (type == typeof(MethodInstantiationInfo))</span><br><span class="line">            &#123;</span><br><span class="line">                compilationSettings = new CompilationSettings</span><br><span class="line">                &#123;</span><br><span class="line">                    DoNotInline = true,</span><br><span class="line">                    DoNotOptimize = true</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class Startup</span><br><span class="line">    &#123;</span><br><span class="line">        public void ConfigureServices(IServiceCollection services)</span><br><span class="line">        &#123;</span><br><span class="line">            services.AddSingleton&lt;ICompilationSettingsProvider, MyCompilationSettingsProvider&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)</span><br><span class="line">        &#123;</span><br><span class="line">            // ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个示例代码中，我们创建了一个名为MyCompilationSettingsProvider的类，实现了ICompilationSettingsProvider接口。在这个类中，我们实现了TryGetCompilationSettings方法，根据Type参数的值来决定是否为此类型提供编译设置。</p><p>然后，我们在Startup类的ConfigureServices方法中将MyCompilationSettingsProvider注册为一个单例服务。这样，当运行时编译MethodInstantiationInfo类型的代码时，就会使用我们指定的编译设置。</p><p>希望这个示例代码能够帮助你解决问题。</p><p>对于使用了泛型方法的情况，使用 <code>assembly</code> 节点无法完全解决警告问题。因为泛型方法在不同的实例化类型下会生成不同的代码，所以需要使用 <code>MethodInstantiation</code> 节点来为具体的泛型方法实例提供特定的 AOT 编译指令。</p><p>但是根据您提供的信息，您的运行时环境为 .NET 7.0，该版本已经不再支持 <code>MethodInstantiation</code> 节点。因此，您需要考虑其他方法来解决这个问题。</p><p>一种解决方法是，您可以通过编写自定义的 AOT 编译上下文 <code>AddContext</code> 来处理这个警告。在 <code>AddContext</code> 中，您可以手动提供针对具体泛型方法实例的 AOT 编译指令。在使用 <code>AddContext</code> 时，需要在 <code>csproj</code> 文件中添加对应的配置，具体可参考 Microsoft 文档：<a href="https://docs.microsoft.com/zh-cn/dotnet/core/deploying/runtime-specific-functionalities#use-aot-compilation-directives-r2r-to-customize-aot-compilation-context">使用 AOT 编译指令 (R2R) 自定义 AOT 编译上下文</a>。</p><p>另一种解决方法是，您可以尝试通过改变代码的方式来避免使用泛型方法。例如，您可以将泛型方法改写为非泛型方法，或者将泛型类型参数改为具体的类型，这样就可以使用 <code>assembly</code> 节点来提供 AOT 编译指令，而不需要使用 <code>MethodInstantiation</code> 节点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/31b582e14e45&quot;&gt;关于cnet70aot解决警告大神的交流探索&lt;/a&gt;&lt;br&gt;文章字数：1731,阅读全文大约需要6分钟&lt;/p&gt;
&lt;h3 id=&quot;问&quot;&gt;&lt;a href=&quot;#问&quot; cla
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
</feed>
